(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1764807,      32898]
NotebookOptionsPosition[   1750556,      32567]
NotebookOutlinePosition[   1751190,      32587]
CellTagsIndexPosition[   1751147,      32584]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 StyleBox["MACHINE LEARNING EXAMPLES",
  FontWeight->"Bold"],
 "\n\n",
 StyleBox["I. Predict survival of Titanic passengers",
  FontColor->RGBColor[1, 0.5, 0]]
}], "Text",
 CellChangeTimes->{{3.718122575936234*^9, 
  3.7181226490240545`*^9}},ExpressionUUID->"61686fbd-d98a-4159-bc2b-\
509e27d91bae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"dataset", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<Titanic\>\""}], "}"}], 
     ",", "\"\<Data\>\""}], "]"}]}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"data", " ", "are", " ", 
    RowBox[{
     RowBox[{"downloaded", " ", "@"}], " ", "'"}], 
    RowBox[{"C", ":", 
     RowBox[{
      RowBox[{
      "\\", "Users", "\\", "Soutrik", "\\", "AppData", "\\", "Roaming", "\\", 
       "Mathematica", "\\", "Paclets", "\\", "Repository", "\\", "'"}], " ", 
      "folders"}]}]}], " ", "*)"}], "\n", 
  RowBox[{"c", "=", 
   RowBox[{"Classify", "[", 
    RowBox[{"dataset", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<LogisticRegression\>\""}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7181226515569563`*^9, 3.71812265158821*^9}, {
  3.7181241602397556`*^9, 
  3.7181242257703886`*^9}},ExpressionUUID->"ad5dfbeb-a384-4455-b741-\
5076a423003b"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{
                 GrayLevel[0.45], 
                 PointSize[0.13], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], {
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, AspectRatio -> 1, 
               Axes -> {False, False}, AxesLabel -> {None, None}, 
               AxesOrigin -> {0, 0}, Background -> GrayLevel[0.94], 
               BaseStyle -> {FontFamily -> "Arial", 
                 AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
               True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
               Ticks -> {None, None}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Numerical\"", ",", "\"Nominal\""}],
                     "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"died\"", "\"survived\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, AutoDelete -> 
               False, BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
          GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{
                 GrayLevel[0.45], 
                 PointSize[0.13], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], {
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, AspectRatio -> 1, 
               Axes -> {False, False}, AxesLabel -> {None, None}, 
               AxesOrigin -> {0, 0}, Background -> GrayLevel[0.94], 
               BaseStyle -> {FontFamily -> "Arial", 
                 AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
               True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
               Ticks -> {None, None}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Numerical\"", ",", "\"Nominal\""}],
                     "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"died\"", "\"survived\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["1309", "SummaryItem"]}]}}, AutoDelete -> False, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.718122931339114*^9},ExpressionUUID->"9a83ff01-04eb-4b19-a938-\
a76f34cac717"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7181226104994326`*^9, 
  3.7181226127744107`*^9}},ExpressionUUID->"55ce6871-50e8-419e-9da6-\
6e2a620cbb47"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"class_", ",", "age_", ",", "sex_"}], "]"}], ":=", 
   RowBox[{"c", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"class", ",", "age", ",", "sex"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Probability\>\"", ",", "\"\<survived\>\""}], "}"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"\"\<1st\>\"", ",", "x", ",", "\"\<female\>\""}], "]"}], ",", 
     RowBox[{"p", "[", 
      RowBox[{"\"\<3rd\>\"", ",", "x", ",", "\"\<female\>\""}], "]"}], ",", 
     RowBox[{"p", "[", 
      RowBox[{"\"\<1st\>\"", ",", "x", ",", "\"\<male\>\""}], "]"}], ",", 
     RowBox[{"p", "[", 
      RowBox[{"\"\<3rd\>\"", ",", "x", ",", "\"\<male\>\""}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "100"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<female, 1st class\>\"", ",", "\"\<female, 3rd class\>\"", ",", 
      "\"\<male, 1st class\>\"", ",", "\"\<male, 3rd class\>\""}], "}"}]}], 
   ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Age (years)\>\"", ",", "\"\<Survival probability\>\""}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.718123081702653*^9, 3.718123081719699*^9}, {
  3.7181231194276333`*^9, 3.718123152855581*^9}, {3.7181232123921094`*^9, 
  3.718123224798591*^9}},ExpressionUUID->"55c405f8-5ed8-413e-b677-\
550fc36d98b7"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVz3s0lHkcBnDKbSuFTSEHSaS1NdNKEn2/jdzvIm912EGaEZJLyq4QIpeN
dE9u6bYqSklDlNkQJbE6TrSb91Xu5hdhIped/eM5z/n89zyr/ULdAxZISUk5
SfJ/62bOFuVp1W73O64zPjlBoELBUDuEnw8dXsMdoxLXHiu5vo5fCtilJRiW
uJ4VxpPjPwP5C2URjMQvM9psJ3gtoFgf2tgscaNZomCY9xHU2SsmiyRuOtMV
1s8jsPTsJXtnie2r5Z17efMg0++ZfWWcQLOiyQ8y3kqoXm3KGxojwMm0en7L
RQ2FidFZ2qMEAjZOK7IVdfDL3bF8bULAyTBgdIWNHj697eh7c5hAWfvxI42m
6/Cu6gN9mUEC21TWl8rEGWHj2rzXtb0EeN+zc29QLHxn5v9hRQ+B0Pq+X0qd
NqHsYtkR1kcCaXvl1s4GG2ObskWPTycB/4bfD7D5JliV/jTb/J3kv7y6W9Ae
UwxQmdyW0kKArRx/YSDSDF2WBgmiXxLgfrUwcg42R00O5+70cwKFeXWa4j+2
4+Pio/srKgg8PG3W1eaOKL89bYPrPQKRlRauuY47UM/583LbawSeNd0YS93H
wRnxX5vvnCMQaLO1OpCyRLOZimUmyQSu3maXBx3cicH5hxK5kQTOfK0+cfio
FdpdWqXmyyXQW3wkih9ujYrKgkFjBwIvrLMvJSTYYMU5oZI+m4C0SyeTGW+L
+y96vk5VJSC147F0QbQdzlx5kLtQLIJTK8VObSn2uGmutTSzVQSH9/oLxYkO
uEHlqtHSYhHQJ4z3w3lHtHdkfbsXLYLlZy93phY6oXoLbTlgKYKbSuujG3Kc
8ZNc1mTKYhHUhmtbGdxxQT/vcrV/60cgT6dA08LDFblv/B2k4kagOmZaiv/W
FRc9Unc5xxqB1Q7yM2u83NC8JvDgi9ZheNRimP6+3Q2LaA2fsNBhyKifY+l4
uyOnMqrKemoIzkYMHOR+cEeDScbVK24IYlS1lunu2YVaze/qXGYG4U9D2abI
7l1YHiLDquEOgty4tHqtjwemLdkclyAcgFusB7F5fR6YU2jSlKowAIZ+xc6z
IZ4YX9AdsM2yH7rsBGWeQ56ooBe1YGtsH7QV/fYzROzGaSXB6OyVXvj20M1c
d2w3GpXGq3RUfob5J+HlyYe88H0JiDraP4EDy9oqZsILz5uevmbV2gMN3hsD
gyIoHE6LecLpYEDFn1+Ve4RC1diZ6Y42Bnz4hYpvj1KYLhS8Cn7DwGT4j2XG
MRT6clI0ztcxoHdKPD2bRGFLRGVc90MG4sueZWRdoFDWru67XxYDZvKu98sF
FI7q6/itsmMgeUnqgv4qCl2I16OinQy0Kgs9NGoodE5bU/wTMsDXNJ6KFVJ4
0o2daLaFgYtsNY7tKwqVeW5zu9YyML6v++/ODxQGk3tlUdIMoK+6vuJHCmMf
J2VNzdCQfsD9GNAUTspNaMZ8o0E37IXm9c8UrlcI2hlPaHBLvh0QIqJwufxm
OukfGq6m0xX5XyT7DX61kX1PQ3+WxqK2MQonogS+J9tpiM/JKDERU3j9cnN5
0isaXhfUSQVOUTjOJV8WNtCw8uace853CrkWyj0JQhr87my50TxLoVxeX4Z0
DQ0l9w+L5+cpXK1jQOIENPwH5Lpetw==
          "]]}, Annotation[#, "Charting`Private`Tag$38178#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVxX040wkcAHBSFrXeI52EVLh6cEmh9f0iihk2W35JJZIhb6Pi0s7oEaXY
dqfr8TYvQynKEuVZzEVKUuvtwuUl8xKrTlgvx+7uj8/zMQmKZoTM0dDQoP3n
/02zZkoKjGQ7/3QKXqhiKaFuvsXaSHYhWPIsGfVMJcgSqkrN2dXw6pVgSaKv
ElqtY0O12Y0QnyWc/uKjhLZM+Z6p0E5oMo4KmqAq4aFD6p3x0F44yHETtDsp
4RG/O3Yk9CMsz1Lr621WgoeU5DUUqoaHOqQBzTlK6CDb6cw9sAR//atXX5Q3
Ds5Zrk3l3qswspc2fmLLOIRYfSPbkI1xC7eC+lI2BjSLkL/1dpth6OL4t4sc
xqDmxenjD7ebI3ObVKWueg+Oyyyr5/6yCZ+c6jTz1H0Pod8F+WLCGs8Ydawg
+49CdOvwlmraT3i3iDfGqxiBc/7a62eO2WL7xfe60jfDEPzg1FEbth2KOrui
KxcMg4xkQI/Ytx3NPZ5NaNkNgc3S5JzReAc09N7RYuKsgMDPlE1ex3bg1rJ3
6hjmIBQVtBiqLuxEruiDQ6T7O5BcdOiWMxAz0prInY4DEH+X4pPv6YQuLElL
pWM/ND4ST2Tsd0ZJ3sd6/XV9ELbbXhpGuKBB7w+Dt+3fQl6FTW1E+C6MrWmw
a5jXA/zPUl7MSVe89lnneoDiDQxdPX6CzXHDsfqmVVrTr+G+m+D3lJTdOG4V
7in68BI0vbsGspL3oNXgrG/Kmheg4XRbU5TojqRpjw2CcDmk66to8rMeaK8r
Wsu+9hRi/IObValUfB41f0SP+gT6ebZH4DdP7E5ZJHHd2g4rhJe7MopoWCPZ
1ZPPboOyJZaJD3K98FacF9dFoxVknLWuGyu9sS2vkHY09w8oMBYZUpg+2Jcx
oSjmy0Ca9E2D/dQH6fYq2n5uI5hQSf+s86Nj+YKVvMDRBrjVaXH+zQs65gaY
pV9R1ENm66y18QEGPj9CESmmakEYNxoe2MNAD6ZjcThPAkkrjRab7vPFs41t
F+KJm3DFYt6j+D5fdBwIWB+dUgXak5oGsoNMXCoOWJSoUwnl1je5BcNM5Dfr
9gbXlINF0FWvmUgW1i1e3ebbUQrd7ndqWGMs7GFwL7Wzi0Fe8vNmiNuL9llv
Aw6tEcEXCX2H6cReTFTIE8ScPFDXc2rTovxQnFBSamJxGajWbq5JU36YrjXo
QNfKgQcHrMIi4gjsoLy+0XFMCMuC2Q35xwm8PeuuO3lYCAfZReSnJwn8ceYQ
y9hPCNOc5TW2SQQyKdOSc05CMEtXfZs5Q2BqYIljmZ4QkmsaM7NzCNQniZqm
ZAJwIPncqL1DYFRzIbXfUABpCzPmjDQQWJZ+b7hxmQCeLW1mrr5HoD+HtaJ0
vgDYhrZfuc0EllRvXH56kg+XbFY572knsFBKZ8U+5sPk/r7nXT0EzlbODQw8
zQc8bLCB3EugLaNQnBPHh/NHGQnQT2BunRtNHsYH09j7hqUKAl9bMur27eUD
Pa0iJPIDgf3FrWUVVnzIO99fV/iJwMkQ8+s6G/gwkr1aVz5BYIFieDbakA/J
uZlVdioCh0acEz11+PBY1KIR9pVAbVeXvGZ1NuiXzTJyvxNYTY5QU6azIahy
m7hjhsCFRp8K741nQ9WNGJVaTWBntc6pXe+y4V/2FEa9
          "]]}, Annotation[#, "Charting`Private`Tag$38178#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVxXk4lAkcAGDKsXlMJaTD5tgSUliSRL9fMkwYZsb1qdVhkhHKkYxNNZ+x
MlEk6XBvI53MKl2SyJHBE9JWaKdRzmm3kmmiZbb9431ek9D9rLBZKioq9O/+
3zRr+mLRsvqNbYIbcg8DGdz5wcIomlMMuTyayEJfBvXcCqE5pxLOcmOvaenK
oNkmNlyDUweB2uOh4rkyeJLZTZOHP4V1NP9nqCGDVif+vffhEmivWVM8Rz4G
4lN9sSPhH0Be1aqv1T0GnrWaPkPhStjwAriPBGPQQXGYoxYyH/cFfuz3HxgF
1yzqo3LfRagn1Ew45TgKYdZTFFuKMfab3HSO+W0E6BZhnxZ6LEdiNiVEu3oY
qnoOJ7Q6miOF/U77weAQbFhgWal21Ap1jtVmPVcMQvi3nMIywgbZZleOKlUH
YX/zsF0l/Wd0MVFeV9N9B8e3aqyYjrJHt1zlZh3Nt8BuObTHluOAWjyhOU9j
AOo1FzMjgx1xfVdT9FsNKdjq8PJGDzhhSayfm+AvCez87GLlE+WMT83PNb/r
eQ2lRU2GihMbUX57mF0m7IObJ536ulmIPYwLeo/TX8GB+y6MQu9NmBvvZ80q
egF14rJxwTZXnOkMTT5e8BwiPNbXRhCb0a49qNqw6xkUXLatjtzrhjWlojy1
r11w6nMtGZNIxXkHd5VXuHbC0NWEg5w4d1SfG8Ddn94Bje4551JSPDDKY9aI
e6oYVH17B7J4NGxZ9Wlg52gLqGy6rVqStAX3HTLxvXWiCdINFPTuY54ozVDt
OL72McRsZTco+F4YO5vY8cWhHqSk/W44440mf8Yf6yAfgt7p872CUjqafwxq
fTKnBi7Nt0xqyfdBtvTwSxWju1AfZ0Rdec0XG3i6EUc8qqHIuMTQxZ+Bjmc+
7ygYroLa5CkVTicDxWbzDSSdIjDx0vz3pyAmkgatJ63zbsCtpxYZr3qYWPhS
mBzvdBUym2dsjENY2Mh8T1uovASn40f37uxnoc3kZoGcJYRk/WXzTIP9cNqX
W3RxphSuWKiLD7zxw1aJztCd1GLQmFBdXL/dHxtlwS/5z/Oh3OaPI0XD/ji7
Wu9tJOMcWIRe9ZmODsBunS+r/GhnoG/LvaoAWQDS1vp424lzoPvir6shPhAV
5T+2LYjIhq83mc6m44H4QPUXZfRYJijvxlWn7QtCT58NdQnpAvCycacmy4PQ
0M5qRR89DVpCrCMi4wlkOSUWWV7mwwI2p6YwgcBsRb6afiEftnNKKZ2JBAZn
7M1Xz+HDlzjdKvtkAs/XcOmTh/iwPF0xNZ1KoDd9cLclgw+8qrrM7DwCzzpa
xosmU8BJkyGqvkegW4HflD0zBdK0BbNGagi0vNumIXFPgS6dBv8lDwkkS173
nnROAY6h/eSRBgIrE406lCtT4KztIldaG4GrvW6QZkoSJra9edbbT6BoQh6V
WkEC7lpsRpEQyJZ8SBIIScjYw+KClMC519MMcy+QYBrbaCgcJHDSnrrwfhoJ
zLTLYdH/ELj0DTeNtoOEggzpneKPBKp71o8lBZAwkr1Eq3ucwN83UttFXiTw
8jMrHBQEfr3199QaRxLaS5pUIiYJHLCiuB5cQ4LBpRlW/jcCXZZsn2pYTkLo
tXVlHdMEUiekxvpLSagQxSiUSgJfPcmvitIh4T8Cr0CH
          "]]}, Annotation[#, "Charting`Private`Tag$38178#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVj3840wkcgKfHkaKihB42WyWTq5GEo8+naSENW358KRXzY4uODaWSEENo
Fbq6MVxU6h42UTknzSlxSEt/5McxXdLp6YpqRdp1f7zP++f7vNTIBG70AhKJ
xP7G/6ZJ5i/LyMqt26f/2iBTKuD2QjrlEL8Cup6PhW9uVoAyta7all8P9n1K
9365Ah4whLF6/DboXfNQ17hSAQ8LVd4fYh8B3T3v4t10BXS5nWp+HTsKymRp
9UN3BXSfGxJOxv4Lii66gaRFDjtb9f0mYrUgYOW6bsmth14jZwPd8GX4/Nay
/M66G8CUsO5d9TfHnBf7M1vTr0H0xlkjByNrXDuxyn6yqQbY9Oh3K73WYHbl
tquChZehYeBESpeLLc5muopyVZXwg4ldve5Je3Q51RG76GA5xM6dL68hGOhr
I/Gc/OMSJDx4uame7Ygf0r2GptovwOkwvbXz8U74y+nxEb2/i4HXeTzGge+M
uZq3oby8c6DUt+DEhbrga5UPa/XsGXAwzrjwKtkN80ea3baaFMCBGQ97v3h3
/MhKH307kgtVsvuWmqKtuFjkY/imPxtunnEbUnERx7WPg7MdsyD5N4+A8l3b
0EDouvaVYQa0dddM5+9hok9FoapxQRoIvFxbBYQnPs2z9d1bmwpl1xya4g5u
x7KR1iKT4ylwbqY1M/EIC4t1bC5GK0UwcT3lMF+0A+8blpSBOBE6dpy/mJXl
hS0KrX5qXzzo+A+OSzK8cQnr0hQ7WACkbbd0Ko/6YKfU1dklJAbyzDRsVe5O
/EdosnjRCR4khvHaNad8keUvZPWsiwB1plMUlO5CipFoQKYOhxXFlwbzq9ho
92R2rmZlGFxZZne0U+qHtTnjpcwvwaAUUVjrbvhjKnth9gqDQJBZV1p6BAYg
tbFlWFnBgda0WRK/PwDvbRJ+ijH1B6qv/pfVIRzMSxjtEZF9ofERveDZAAdN
M70yj415QeGDrwzrcC5GVQ2r9/Vsh+KkVwcPDHOx0kJtHOfNhDRT8lJa6G5c
QbmSf8cSoZb+XXfy2G40eypoF5u7g957HQvlvkCUDe6VlNxxgasMRbrsZSBy
Dnh6muRsBnrkdb/5Q0FokiMJ6u50hCGf5oagqSBcb/5zlN9pBqguH/sekoKR
mXJ4/xeVPXy6yXGnTQfjCWaZp5Sgg/aOqEn8Ywgeq/IQryRswJexg5X2IQTj
OUfejKSths7wjYK4JAJ3RspJZuuoYMLjt5SnEFjtJPXebUWFffwqo/4jBPIm
wyily6nwUbS8wSmNwAnLxng6iQpr8jSz89kERoXKN5Q8s4aMhrbCsxcITDK9
W5JQZA1u+gHypmYCPWP6ngVMU0BsmL9gsoVAR389GnWMAo+N2wNX3SWQwfDv
mOulAN/S6XN6O4FNU2Lto1oK/ORgzvT+81tfJ+HXmQgKvN8z9mRwmEDy2OJu
2gAZMMLCxmiUQG6fQlPaToaCGG4qqAnsyWuiLVeQgSbssKx+QeBesAxbf4YM
HPG16ENvCFwi1JWrvMlQVqC+XfGWwE1Kil3pFjJMnl21SDVNoCkrNTnChgwZ
0sI6Zw2B73hFPDNdMvRU3icJPhPobW87T5qxArMrX7nSOQJTTv4e8F5tBZE3
ttT0zn/726Mk3vVbQZ08UaPVEhj0XL70U5sV/AfPUSWb
          "]]}, Annotation[#, "Charting`Private`Tag$38178#4"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Survival probability\"", TraditionalForm], None}, {
        FormBox["\"Age (years)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 100}, {0., 0.9987749832252286}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"female, 1st class\"", "\"female, 3rd class\"", "\"male, 1st class\"",
        "\"male, 3rd class\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.718123173940841*^9, {3.718123204089839*^9, 
   3.718123228548069*^9}},ExpressionUUID->"65416f98-2901-4214-9079-\
90a099d20d8f"]
}, Open  ]],

Cell[TextData[StyleBox["II. Predictor performance of Boston housing",
 FontColor->RGBColor[1, 0.5, 0]]], "Text",
 CellChangeTimes->{{3.7181234520117335`*^9, 
  3.7181234778519773`*^9}},ExpressionUUID->"cafd682b-3786-468b-90a5-\
da940710eedc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"Predict", "[", 
   RowBox[{
    RowBox[{"ExampleData", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<BostonHomes\>\""}], "}"}],
       ",", "\"\<TrainingData\>\""}], "]"}], ",", 
    RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7181234810211887`*^9, 
  3.718123496836166*^9}},ExpressionUUID->"2d1b671a-afb5-44bf-a99c-\
04837e0a40f2"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{}, {{}, {
                  GrayLevel[0.55], 
                  PointSize[0.125], 
                  
                  PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                    4, 4.}}]}, {
                  GrayLevel[0.7], 
                  AbsoluteThickness[1.5], 
                  
                  BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                   5, 4}}]}}, {}}, AspectRatio -> 1, Axes -> {False, False}, 
               AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, Background -> 
               GrayLevel[0.94], BaseStyle -> {FontFamily -> "Arial", 
                 AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {All, All}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "13", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Boolean\"", ",", "\"Numerical\"",
                     ",", "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Boolean", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical"}, 10], "Tooltip"]& ], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}}, AutoDelete -> 
               False, BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
          GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{}, {{}, {
                  GrayLevel[0.55], 
                  PointSize[0.125], 
                  
                  PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                    4, 4.}}]}, {
                  GrayLevel[0.7], 
                  AbsoluteThickness[1.5], 
                  
                  BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                   5, 4}}]}}, {}}, AspectRatio -> 1, Axes -> {False, False}, 
               AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, Background -> 
               GrayLevel[0.94], BaseStyle -> {FontFamily -> "Arial", 
                 AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {All, All}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "13", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Boolean\"", ",", "\"Numerical\"",
                     ",", "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Boolean", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical"}, 10], "Tooltip"]& ], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["338", "SummaryItem"]}]}}, AutoDelete -> False, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.71812350057559*^9},ExpressionUUID->"7ba64c2a-6f52-4501-9801-1be10a1cea03"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "=", 
  RowBox[{"PredictorMeasurements", "[", 
   RowBox[{"p", ",", 
    RowBox[{"ExampleData", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<BostonHomes\>\""}], "}"}],
       ",", "\"\<TestData\>\""}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.718123912329444*^9, 
  3.718123912329444*^9}},ExpressionUUID->"ed677ce6-df71-47a6-b52c-\
4c72c6ecc641"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorMeasurementsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  GrayLevel[0.6], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  Dashing[{Small, Small}], 
                  
                  LineBox[{{2.409616047529911*^-7, 2.409616047529911*^-7}, {
                   11.803066020732206`, 11.803066020732206`}}]}}, {{}, {{}, {
                   GrayLevel[0.4], 
                   PointSize[0.09], 
                   AbsoluteThickness[1.6], 
                   
                   PointBox[{{1.6948167795276383`, 2.9052679959834418`}, {
                    2.227816320451859, 2.584653237430766}, {3.043099335090081,
                     4.798822972025658}, {3.5728355469237116`, 
                    5.9507424155697155`}, {4.158566334344331, 
                    5.2097676165465385`}, {4.824808988689111, 
                    7.23346088027902}, {6.88649660338492, 
                    5.297021421229134}, {7.819072150835878, 
                    6.533166043611269}, {8.437306856915493, 
                    8.81724006216815}, {8.604907881861761, 
                    11.302704526196452`}}]}, {}}, {}}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Predictor: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["168", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  GrayLevel[0.6], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  Dashing[{Small, Small}], 
                  
                  LineBox[{{2.409616047529911*^-7, 2.409616047529911*^-7}, {
                   11.803066020732206`, 11.803066020732206`}}]}}, {{}, {{}, {
                   GrayLevel[0.4], 
                   PointSize[0.09], 
                   AbsoluteThickness[1.6], 
                   
                   PointBox[{{1.6948167795276383`, 2.9052679959834418`}, {
                    2.227816320451859, 2.584653237430766}, {3.043099335090081,
                     4.798822972025658}, {3.5728355469237116`, 
                    5.9507424155697155`}, {4.158566334344331, 
                    5.2097676165465385`}, {4.824808988689111, 
                    7.23346088027902}, {6.88649660338492, 
                    5.297021421229134}, {7.819072150835878, 
                    6.533166043611269}, {8.437306856915493, 
                    8.81724006216815}, {8.604907881861761, 
                    11.302704526196452`}}]}, {}}, {}}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Predictor: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["168", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"StandardDeviation: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox[
                    
                    RowBox[{
                    "3.3961260964948940533`3.2988334622052897", 
                    "\[PlusMinus]", "0.3408891037421775128`2."}], 
                    "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorMeasurementsObject[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7181239185480957`*^9},ExpressionUUID->"aa8a715b-aa9c-4500-9791-\
e0f2649d69bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<ComparisonPlot\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7181239374205217`*^9, 
  3.7181239374205217`*^9}},ExpressionUUID->"fa7d1e63-1a24-47ae-a978-\
662d9a9cdd58"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.009166666666666668], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          AbsolutePointSize[6]], 
         GeometricTransformationBox[
          InsetBox[
           GraphicsBox[{
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              AbsolutePointSize[6]], 
             AbsoluteThickness[1.], 
             RGBColor[0.34398, 0.49112, 0.89936], 
             CircleBox[{0, 0}, 
              Offset[{1.8, 1.8}, {0., 0.}]]}], {0., 0.}], CompressedData["
1:eJxFVgtsk1UUHpsiDsEXYVuGwGBb6da1/fs/27Xj68YegBAgQiDZWJwKEVAQ
QYkQmVMIBAJkTJNpFg1TQUwgChIUBYNBMzNQASHBEOXh2EANIBg0oN7z33Pv
TtI0p/fc8/zOd1vQtHjGU1kZGRk7xGeA+GSKz/UNRYdmtyaR4YuHgYln3jmR
mcab7ULyKvHJK1PzezfGYZLsSYKOBzbZmEfS42B37bmXhtWYrMeQ3j5k2Zn9
rM+zsH6dEM+U980Ylp3B9iGLoqxHpP2Xyj4Gi37uDLNegjEkkxztf6NI9/pK
m/O1MJ9+32Rzfh5Grrkyff/IFI52k1RgFOlrPak/GseKF4UcirF/E873T2d1
DE3z/TQoHdTasv52Ewdniw5dgIzXDOyg84Cl7/v9W6rycXCSGljlcnwHvXtF
A6d5bO+iRbRzb5/F9dvY2hj6+8gCm/OzkDv55Y8uBuJcr4uVw3bVnjuv/Hkg
81Y3wfklcPjmuPrNO7l+00FTV+SN29nj+dzFt0JtCro6v3togPtcPb+7OkQH
HnbY3pLxsss53ySi4nrXKI/rL8ezYvyJOybb87wWmpxfDB/uFJLpsH1M5jXY
1vUuyBIB06peE2WinMaTls7vdb/ACMeP4OezQooUXqK4+oeQcIztY9hCDWg0
NH4eelBIXozxa2AQ1VsT5nxL0Efz2B/l+yFk+/2I8HkAxyiv+wzWS/GbQNOa
Vw2N10s5YkDvRlgvwzetImE7yvWHMfh055LU5X57GkfTvUmu10U+AaI0wfG5
n7bCTxzl2cLBzTrWJ+LzA0LGOnzfwSqazySFX677GM8jz8UcAmRUzdNBkvx1
JNk+BYGunMn71Dxcibccj+09iX+li/3/muqbovBfiVtiXKGZ4HzSIHrY2w7p
7/m05I/DSgfqN4sBTauW91En/cardX11gj52zTc1Ht5bkso+vZD5Yo+LCSRt
ru6Pj585ruajajrvZjw02zLeRUfzmaw3zvXEQXALBRN6HuPogqf4z5H+gxbb
W3J+XY7eL/8rK6H38TYtXGEV97da+jeq2F+N3NccsL8KyX8jFF/xvm1jfjXj
WOfzZYL9eXiB+Gr1ePYHPDZTSEr1r1b2Z90E3c9CQY8bzo6X99+vBI0/1epo
PvmLCk6p+DZovEcmMZ/klcv6r1majwgO239V+++A0l9WzHjISMn5T4/r/vn8
W8z8NS8h6+1W+IxKPHW4Gq8+P9Z5Gq8qjuJXP37K0/1aS/S+3GQ7U/q/ofAS
A8GnM8r5NEexifhhdQX3l/uYq94jQ/LnNk/n4783iaTmV7/ehKf50t+XSwpP
Htp++OnjWRHVTwerCW9TbV2Pj68HKvm+Lfczt39f6Xk5tEjhZSKO0wL91z9P
or+zc9JaL6L8WkOan25RgOWlmt++8AcwlusrwXwfwKP5vAAtlN/cR9hfEZ4j
/jlayHoAj/t4VXwbxi8UvyHE8wjiCPXrfKn2n/GECDCijO8HUULhD+azXoBe
4svXwrwvAfn+9Kj/D+UYS/ZDS1k3MJzwunMU2xciSe/zqf7822nhZpXx+Wjc
oPd3hnovQniLzNar/w8BWX9LkPMpxr8fXDs+JbP//BT1+0KA/ZWgyifAAMcL
oo0A8vYY3a8fRTrO1TF8XoQQzXd2kX4/5g5YuvvTXMX/QbiU//Co9v8V9e8z
Q+8DPb9ZDbxv3QYu0z6Mi+h+n1rRV2wMUvfLULPvzzsntxicj4Unqb4Yv7N7
DHxXsWptQ5/iQxN339+z/p/Fir8sLPL5k/GSZ8r3v9TQOrFdpMfS/3/8/zMH
TP1epIlQfi/T7x/BpbHe0e+7/3VF4d/CbeLDPNXvsIx3QvFLDP8DFTjsOg==

          "]]}, {}}, {
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{28.571666666666665`, 24.}]}}, 
          RowBox[{"{", 
            RowBox[{"28.571666666666665`", ",", "24.`"}], "}"}]], 
         Annotation[#, {28.571666666666665`, 24.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{34.02208333333333, 36.2}]}}, 
          RowBox[{"{", 
            RowBox[{"34.02208333333333`", ",", "36.2`"}], "}"}]], 
         Annotation[#, {34.02208333333333, 36.2}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{25.550416666666667`, 28.7}]}}, 
          RowBox[{"{", 
            RowBox[{"25.550416666666667`", ",", "28.7`"}], "}"}]], 
         Annotation[#, {25.550416666666667`, 28.7}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{21.382916666666667`, 22.9}]}}, 
          RowBox[{"{", 
            RowBox[{"21.382916666666667`", ",", "22.9`"}], "}"}]], 
         Annotation[#, {21.382916666666667`, 22.9}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{19.273750000000003`, 18.9}]}}, 
          RowBox[{"{", 
            RowBox[{"19.273750000000003`", ",", "18.9`"}], "}"}]], 
         Annotation[#, {19.273750000000003`, 18.9}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{19.722083333333334`, 20.4}]}}, 
          RowBox[{"{", 
            RowBox[{"19.722083333333334`", ",", "20.4`"}], "}"}]], 
         Annotation[#, {19.722083333333334`, 20.4}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{19.220833333333335`, 18.2}]}}, 
          RowBox[{"{", 
            RowBox[{"19.220833333333335`", ",", "18.2`"}], "}"}]], 
         Annotation[#, {19.220833333333335`, 18.2}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{16.422083333333333`, 15.6}]}}, 
          RowBox[{"{", 
            RowBox[{"16.422083333333333`", ",", "15.6`"}], "}"}]], 
         Annotation[#, {16.422083333333333`, 15.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{19.753333333333334`, 18.4}]}}, 
          RowBox[{"{", 
            RowBox[{"19.753333333333334`", ",", "18.4`"}], "}"}]], 
         Annotation[#, {19.753333333333334`, 18.4}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{15.318750000000001`, 13.2}]}}, 
          RowBox[{"{", 
            RowBox[{"15.318750000000001`", ",", "13.2`"}], "}"}]], 
         Annotation[#, {15.318750000000001`, 13.2}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{22.289583333333333`, 18.9}]}}, 
          RowBox[{"{", 
            RowBox[{"22.289583333333333`", ",", "18.9`"}], "}"}]], 
         Annotation[#, {22.289583333333333`, 18.9}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{21.484166666666667`, 20.}]}}, 
          RowBox[{"{", 
            RowBox[{"21.484166666666667`", ",", "20.`"}], "}"}]], 
         Annotation[#, {21.484166666666667`, 20.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{21.556250000000002`, 24.7}]}}, 
          RowBox[{"{", 
            RowBox[{"21.556250000000002`", ",", "24.7`"}], "}"}]], 
         Annotation[#, {21.556250000000002`, 24.7}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{29.119999999999997`, 30.8}]}}, 
          RowBox[{"{", 
            RowBox[{"29.119999999999997`", ",", "30.8`"}], "}"}]], 
         Annotation[#, {29.119999999999997`, 30.8}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{24.52625, 25.3}]}}, 
          RowBox[{"{", 
            RowBox[{"24.52625`", ",", "25.3`"}], "}"}]], 
         Annotation[#, {24.52625, 25.3}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{18.74791666666667, 19.4}]}}, 
          RowBox[{"{", 
            RowBox[{"18.74791666666667`", ",", "19.4`"}], "}"}]], 
         Annotation[#, {18.74791666666667, 19.4}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{34.11416666666666, 35.4}]}}, 
          RowBox[{"{", 
            RowBox[{"34.11416666666666`", ",", "35.4`"}], "}"}]], 
         Annotation[#, {34.11416666666666, 35.4}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{21.278333333333332`, 19.6}]}}, 
          RowBox[{"{", 
            RowBox[{"21.278333333333332`", ",", "19.6`"}], "}"}]], 
         Annotation[#, {21.278333333333332`, 19.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{33.774583333333325`, 33.}]}}, 
          RowBox[{"{", 
            RowBox[{"33.774583333333325`", ",", "33.`"}], "}"}]], 
         Annotation[#, {33.774583333333325`, 33.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{20.153333333333336`, 19.4}]}}, 
          RowBox[{"{", 
            RowBox[{"20.153333333333336`", ",", "19.4`"}], "}"}]], 
         Annotation[#, {20.153333333333336`, 19.4}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{21.446666666666665`, 22.}]}}, 
          RowBox[{"{", 
            RowBox[{"21.446666666666665`", ",", "22.`"}], "}"}]], 
         Annotation[#, {21.446666666666665`, 22.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{23.264166666666668`, 22.8}]}}, 
          RowBox[{"{", 
            RowBox[{"23.264166666666668`", ",", "22.8`"}], "}"}]], 
         Annotation[#, {23.264166666666668`, 22.8}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{24.312916666666666`, 23.4}]}}, 
          RowBox[{"{", 
            RowBox[{"24.312916666666666`", ",", "23.4`"}], "}"}]], 
         Annotation[#, {24.312916666666666`, 23.4}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{20.912916666666668`, 21.2}]}}, 
          RowBox[{"{", 
            RowBox[{"20.912916666666668`", ",", "21.2`"}], "}"}]], 
         Annotation[#, {20.912916666666668`, 21.2}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{21.417083333333334`, 20.3}]}}, 
          RowBox[{"{", 
            RowBox[{"21.417083333333334`", ",", "20.3`"}], "}"}]], 
         Annotation[#, {21.417083333333334`, 20.3}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{25.155833333333334`, 23.9}]}}, 
          RowBox[{"{", 
            RowBox[{"25.155833333333334`", ",", "23.9`"}], "}"}]], 
         Annotation[#, {25.155833333333334`, 23.9}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{23.88625, 24.8}]}}, 
          RowBox[{"{", 
            RowBox[{"23.88625`", ",", "24.8`"}], "}"}]], 
         Annotation[#, {23.88625, 24.8}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{26.21708333333333, 26.6}]}}, 
          RowBox[{"{", 
            RowBox[{"26.21708333333333`", ",", "26.6`"}], "}"}]], 
         Annotation[#, {26.21708333333333, 26.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{21.666249999999998`, 22.2}]}}, 
          RowBox[{"{", 
            RowBox[{"21.666249999999998`", ",", "22.2`"}], "}"}]], 
         Annotation[#, {21.666249999999998`, 22.2}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{31.042916666666663`, 23.6}]}}, 
          RowBox[{"{", 
            RowBox[{"31.042916666666663`", ",", "23.6`"}], "}"}]], 
         Annotation[#, {31.042916666666663`, 23.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{23.16166666666667, 22.}]}}, 
          RowBox[{"{", 
            RowBox[{"23.16166666666667`", ",", "22.`"}], "}"}]], 
         Annotation[#, {23.16166666666667, 22.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{23.714166666666667`, 22.9}]}}, 
          RowBox[{"{", 
            RowBox[{"23.714166666666667`", ",", "22.9`"}], "}"}]], 
         Annotation[#, {23.714166666666667`, 22.9}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{22.075833333333335`, 20.6}]}}, 
          RowBox[{"{", 
            RowBox[{"22.075833333333335`", ",", "20.6`"}], "}"}]], 
         Annotation[#, {22.075833333333335`, 20.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{27.0425, 28.4}]}}, 
          RowBox[{"{", 
            RowBox[{"27.0425`", ",", "28.4`"}], "}"}]], 
         Annotation[#, {27.0425, 28.4}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{24.124166666666667`, 27.5}]}}, 
          RowBox[{"{", 
            RowBox[{"24.124166666666667`", ",", "27.5`"}], "}"}]], 
         Annotation[#, {24.124166666666667`, 27.5}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{19.98916666666667, 18.6}]}}, 
          RowBox[{"{", 
            RowBox[{"19.98916666666667`", ",", "18.6`"}], "}"}]], 
         Annotation[#, {19.98916666666667, 18.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{19.418750000000003`, 18.8}]}}, 
          RowBox[{"{", 
            RowBox[{"19.418750000000003`", ",", "18.8`"}], "}"}]], 
         Annotation[#, {19.418750000000003`, 18.8}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{22.010416666666668`, 18.5}]}}, 
          RowBox[{"{", 
            RowBox[{"22.010416666666668`", ",", "18.5`"}], "}"}]], 
         Annotation[#, {22.010416666666668`, 18.5}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{21.04375, 21.2}]}}, 
          RowBox[{"{", 
            RowBox[{"21.04375`", ",", "21.2`"}], "}"}]], 
         Annotation[#, {21.04375, 21.2}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{21.257083333333334`, 19.3}]}}, 
          RowBox[{"{", 
            RowBox[{"21.257083333333334`", ",", "19.3`"}], "}"}]], 
         Annotation[#, {21.257083333333334`, 19.3}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{20.829583333333336`, 22.}]}}, 
          RowBox[{"{", 
            RowBox[{"20.829583333333336`", ",", "22.`"}], "}"}]], 
         Annotation[#, {20.829583333333336`, 22.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{15.78666666666667, 15.7}]}}, 
          RowBox[{"{", 
            RowBox[{"15.78666666666667`", ",", "15.7`"}], "}"}]], 
         Annotation[#, {15.78666666666667, 15.7}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{16.14791666666667, 16.2}]}}, 
          RowBox[{"{", 
            RowBox[{"16.14791666666667`", ",", "16.2`"}], "}"}]], 
         Annotation[#, {16.14791666666667, 16.2}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{18.183333333333337`, 18.}]}}, 
          RowBox[{"{", 
            RowBox[{"18.183333333333337`", ",", "18.`"}], "}"}]], 
         Annotation[#, {18.183333333333337`, 18.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{17.372500000000002`, 18.4}]}}, 
          RowBox[{"{", 
            RowBox[{"17.372500000000002`", ",", "18.4`"}], "}"}]], 
         Annotation[#, {17.372500000000002`, 18.4}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{18.09791666666667, 17.1}]}}, 
          RowBox[{"{", 
            RowBox[{"18.09791666666667`", ",", "17.1`"}], "}"}]], 
         Annotation[#, {18.09791666666667, 17.1}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{15.138333333333335`, 13.3}]}}, 
          RowBox[{"{", 
            RowBox[{"15.138333333333335`", ",", "13.3`"}], "}"}]], 
         Annotation[#, {15.138333333333335`, 13.3}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{16.71916666666667, 14.}]}}, 
          RowBox[{"{", 
            RowBox[{"16.71916666666667`", ",", "14.`"}], "}"}]], 
         Annotation[#, {16.71916666666667, 14.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{15.857083333333339`, 11.8}]}}, 
          RowBox[{"{", 
            RowBox[{"15.857083333333339`", ",", "11.8`"}], "}"}]], 
         Annotation[#, {15.857083333333339`, 11.8}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{17.050000000000004`, 13.8}]}}, 
          RowBox[{"{", 
            RowBox[{"17.050000000000004`", ",", "13.8`"}], "}"}]], 
         Annotation[#, {17.050000000000004`, 13.8}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{17.51375, 15.6}]}}, 
          RowBox[{"{", 
            RowBox[{"17.51375`", ",", "15.6`"}], "}"}]], 
         Annotation[#, {17.51375, 15.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{15.82166666666667, 14.6}]}}, 
          RowBox[{"{", 
            RowBox[{"15.82166666666667`", ",", "14.6`"}], "}"}]], 
         Annotation[#, {15.82166666666667, 14.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{16.210833333333337`, 15.4}]}}, 
          RowBox[{"{", 
            RowBox[{"16.210833333333337`", ",", "15.4`"}], "}"}]], 
         Annotation[#, {16.210833333333337`, 15.4}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{17.915000000000003`, 15.6}]}}, 
          RowBox[{"{", 
            RowBox[{"17.915000000000003`", ",", "15.6`"}], "}"}]], 
         Annotation[#, {17.915000000000003`, 15.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{28.036666666666665`, 23.3}]}}, 
          RowBox[{"{", 
            RowBox[{"28.036666666666665`", ",", "23.3`"}], "}"}]], 
         Annotation[#, {28.036666666666665`, 23.3}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{26.169166666666666`, 27.}]}}, 
          RowBox[{"{", 
            RowBox[{"26.169166666666666`", ",", "27.`"}], "}"}]], 
         Annotation[#, {26.169166666666666`, 27.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{21.20791666666667, 25.}]}}, 
          RowBox[{"{", 
            RowBox[{"21.20791666666667`", ",", "25.`"}], "}"}]], 
         Annotation[#, {21.20791666666667, 25.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{49.91749999999998, 50.}]}}, 
          RowBox[{"{", 
            RowBox[{"49.91749999999998`", ",", "50.`"}], "}"}]], 
         Annotation[#, {49.91749999999998, 50.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{22.139583333333334`, 22.3}]}}, 
          RowBox[{"{", 
            RowBox[{"22.139583333333334`", ",", "22.3`"}], "}"}]], 
         Annotation[#, {22.139583333333334`, 22.3}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{18.292500000000004`, 17.4}]}}, 
          RowBox[{"{", 
            RowBox[{"18.292500000000004`", ",", "17.4`"}], "}"}]], 
         Annotation[#, {18.292500000000004`, 17.4}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{19.80625, 23.1}]}}, 
          RowBox[{"{", 
            RowBox[{"19.80625`", ",", "23.1`"}], "}"}]], 
         Annotation[#, {19.80625, 23.1}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{22.190416666666668`, 22.6}]}}, 
          RowBox[{"{", 
            RowBox[{"22.190416666666668`", ",", "22.6`"}], "}"}]], 
         Annotation[#, {22.190416666666668`, 22.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{28.614999999999995`, 29.4}]}}, 
          RowBox[{"{", 
            RowBox[{"28.614999999999995`", ",", "29.4`"}], "}"}]], 
         Annotation[#, {28.614999999999995`, 29.4}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{21.712083333333332`, 23.2}]}}, 
          RowBox[{"{", 
            RowBox[{"21.712083333333332`", ",", "23.2`"}], "}"}]], 
         Annotation[#, {21.712083333333332`, 23.2}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{24.093333333333334`, 24.6}]}}, 
          RowBox[{"{", 
            RowBox[{"24.093333333333334`", ",", "24.6`"}], "}"}]], 
         Annotation[#, {24.093333333333334`, 24.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{24.090833333333332`, 36.2}]}}, 
          RowBox[{"{", 
            RowBox[{"24.090833333333332`", ",", "36.2`"}], "}"}]], 
         Annotation[#, {24.090833333333332`, 36.2}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{32.60916666666667, 37.}]}}, 
          RowBox[{"{", 
            RowBox[{"32.60916666666667`", ",", "37.`"}], "}"}]], 
         Annotation[#, {32.60916666666667, 37.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{32.66541666666666, 34.6}]}}, 
          RowBox[{"{", 
            RowBox[{"32.66541666666666`", ",", "34.6`"}], "}"}]], 
         Annotation[#, {32.66541666666666, 34.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{33.20083333333333, 34.9}]}}, 
          RowBox[{"{", 
            RowBox[{"33.20083333333333`", ",", "34.9`"}], "}"}]], 
         Annotation[#, {33.20083333333333, 34.9}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{33.52208333333333, 32.9}]}}, 
          RowBox[{"{", 
            RowBox[{"33.52208333333333`", ",", "32.9`"}], "}"}]], 
         Annotation[#, {33.52208333333333, 32.9}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{42.62625, 48.5}]}}, 
          RowBox[{"{", 
            RowBox[{"42.62625`", ",", "48.5`"}], "}"}]], 
         Annotation[#, {42.62625, 48.5}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{42.45, 50.}]}}, 
          RowBox[{"{", 
            RowBox[{"42.45`", ",", "50.`"}], "}"}]], 
         Annotation[#, {42.45, 50.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{19.405, 19.3}]}}, 
          RowBox[{"{", 
            RowBox[{"19.405`", ",", "19.3`"}], "}"}]], 
         Annotation[#, {19.405, 19.3}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{19.421250000000004`, 23.7}]}}, 
          RowBox[{"{", 
            RowBox[{"19.421250000000004`", ",", "23.7`"}], "}"}]], 
         Annotation[#, {19.421250000000004`, 23.7}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{23.579166666666666`, 25.}]}}, 
          RowBox[{"{", 
            RowBox[{"23.579166666666666`", ",", "25.`"}], "}"}]], 
         Annotation[#, {23.579166666666666`, 25.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{23.350833333333334`, 28.7}]}}, 
          RowBox[{"{", 
            RowBox[{"23.350833333333334`", ",", "28.7`"}], "}"}]], 
         Annotation[#, {23.350833333333334`, 28.7}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{18.79791666666667, 21.5}]}}, 
          RowBox[{"{", 
            RowBox[{"18.79791666666667`", ",", "21.5`"}], "}"}]], 
         Annotation[#, {18.79791666666667, 21.5}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{22.89125, 24.}]}}, 
          RowBox[{"{", 
            RowBox[{"22.89125`", ",", "24.`"}], "}"}]], 
         Annotation[#, {22.89125, 24.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{25.712083333333332`, 25.1}]}}, 
          RowBox[{"{", 
            RowBox[{"25.712083333333332`", ",", "25.1`"}], "}"}]], 
         Annotation[#, {25.712083333333332`, 25.1}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{26.160833333333333`, 23.3}]}}, 
          RowBox[{"{", 
            RowBox[{"26.160833333333333`", ",", "23.3`"}], "}"}]], 
         Annotation[#, {26.160833333333333`, 23.3}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{28.222499999999997`, 22.}]}}, 
          RowBox[{"{", 
            RowBox[{"28.222499999999997`", ",", "22.`"}], "}"}]], 
         Annotation[#, {28.222499999999997`, 22.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{20.163333333333334`, 20.1}]}}, 
          RowBox[{"{", 
            RowBox[{"20.163333333333334`", ",", "20.1`"}], "}"}]], 
         Annotation[#, {20.163333333333334`, 20.1}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{22.786666666666665`, 22.2}]}}, 
          RowBox[{"{", 
            RowBox[{"22.786666666666665`", ",", "22.2`"}], "}"}]], 
         Annotation[#, {22.786666666666665`, 22.2}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{26.0125, 24.8}]}}, 
          RowBox[{"{", 
            RowBox[{"26.0125`", ",", "24.8`"}], "}"}]], 
         Annotation[#, {26.0125, 24.8}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{38.28583333333333, 42.8}]}}, 
          RowBox[{"{", 
            RowBox[{"38.28583333333333`", ",", "42.8`"}], "}"}]], 
         Annotation[#, {38.28583333333333, 42.8}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{38.384166666666665`, 44.}]}}, 
          RowBox[{"{", 
            RowBox[{"38.384166666666665`", ",", "44.`"}], "}"}]], 
         Annotation[#, {38.384166666666665`, 44.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{32.18416666666666, 30.1}]}}, 
          RowBox[{"{", 
            RowBox[{"32.18416666666666`", ",", "30.1`"}], "}"}]], 
         Annotation[#, {32.18416666666666, 30.1}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{21.109583333333333`, 20.7}]}}, 
          RowBox[{"{", 
            RowBox[{"21.109583333333333`", ",", "20.7`"}], "}"}]], 
         Annotation[#, {21.109583333333333`, 20.7}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{25.63625, 25.2}]}}, 
          RowBox[{"{", 
            RowBox[{"25.63625`", ",", "25.2`"}], "}"}]], 
         Annotation[#, {25.63625, 25.2}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{26.22083333333333, 24.4}]}}, 
          RowBox[{"{", 
            RowBox[{"26.22083333333333`", ",", "24.4`"}], "}"}]], 
         Annotation[#, {26.22083333333333, 24.4}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{31.49791666666666, 32.}]}}, 
          RowBox[{"{", 
            RowBox[{"31.49791666666666`", ",", "32.`"}], "}"}]], 
         Annotation[#, {31.49791666666666, 32.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{42.47916666666666, 46.}]}}, 
          RowBox[{"{", 
            RowBox[{"42.47916666666666`", ",", "46.`"}], "}"}]], 
         Annotation[#, {42.47916666666666, 46.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{41.06458333333333, 50.}]}}, 
          RowBox[{"{", 
            RowBox[{"41.06458333333333`", ",", "50.`"}], "}"}]], 
         Annotation[#, {41.06458333333333, 50.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{31.86541666666666, 37.3}]}}, 
          RowBox[{"{", 
            RowBox[{"31.86541666666666`", ",", "37.3`"}], "}"}]], 
         Annotation[#, {31.86541666666666, 37.3}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{22.57125, 23.9}]}}, 
          RowBox[{"{", 
            RowBox[{"22.57125`", ",", "23.9`"}], "}"}]], 
         Annotation[#, {22.57125, 23.9}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{21.24125, 21.7}]}}, 
          RowBox[{"{", 
            RowBox[{"21.24125`", ",", "21.7`"}], "}"}]], 
         Annotation[#, {21.24125, 21.7}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{26.29208333333333, 27.1}]}}, 
          RowBox[{"{", 
            RowBox[{"26.29208333333333`", ",", "27.1`"}], "}"}]], 
         Annotation[#, {26.29208333333333, 27.1}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{20.944583333333334`, 20.3}]}}, 
          RowBox[{"{", 
            RowBox[{"20.944583333333334`", ",", "20.3`"}], "}"}]], 
         Annotation[#, {20.944583333333334`, 20.3}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{24.89708333333333, 22.5}]}}, 
          RowBox[{"{", 
            RowBox[{"24.89708333333333`", ",", "22.5`"}], "}"}]], 
         Annotation[#, {24.89708333333333, 22.5}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{32.30041666666666, 29.}]}}, 
          RowBox[{"{", 
            RowBox[{"32.30041666666666`", ",", "29.`"}], "}"}]], 
         Annotation[#, {32.30041666666666, 29.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{25.319166666666664`, 22.}]}}, 
          RowBox[{"{", 
            RowBox[{"25.319166666666664`", ",", "22.`"}], "}"}]], 
         Annotation[#, {25.319166666666664`, 22.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{25.151249999999997`, 26.4}]}}, 
          RowBox[{"{", 
            RowBox[{"25.151249999999997`", ",", "26.4`"}], "}"}]], 
         Annotation[#, {25.151249999999997`, 26.4}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{19.797083333333333`, 16.1}]}}, 
          RowBox[{"{", 
            RowBox[{"19.797083333333333`", ",", "16.1`"}], "}"}]], 
         Annotation[#, {19.797083333333333`, 16.1}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{23.617083333333333`, 23.1}]}}, 
          RowBox[{"{", 
            RowBox[{"23.617083333333333`", ",", "23.1`"}], "}"}]], 
         Annotation[#, {23.617083333333333`, 23.1}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{24.281666666666666`, 22.6}]}}, 
          RowBox[{"{", 
            RowBox[{"24.281666666666666`", ",", "22.6`"}], "}"}]], 
         Annotation[#, {24.281666666666666`, 22.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{22.5, 19.4}]}}, 
          RowBox[{"{", 
            RowBox[{"22.5`", ",", "19.4`"}], "}"}]], 
         Annotation[#, {22.5, 19.4}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{24.24083333333333, 20.7}]}}, 
          RowBox[{"{", 
            RowBox[{"24.24083333333333`", ",", "20.7`"}], "}"}]], 
         Annotation[#, {24.24083333333333, 20.7}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{19.457500000000003`, 19.5}]}}, 
          RowBox[{"{", 
            RowBox[{"19.457500000000003`", ",", "19.5`"}], "}"}]], 
         Annotation[#, {19.457500000000003`, 19.5}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{19.953333333333333`, 18.7}]}}, 
          RowBox[{"{", 
            RowBox[{"19.953333333333333`", ",", "18.7`"}], "}"}]], 
         Annotation[#, {19.953333333333333`, 18.7}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{25.189999999999998`, 16.5}]}}, 
          RowBox[{"{", 
            RowBox[{"25.189999999999998`", ",", "16.5`"}], "}"}]], 
         Annotation[#, {25.189999999999998`, 16.5}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{30.497499999999995`, 31.2}]}}, 
          RowBox[{"{", 
            RowBox[{"30.497499999999995`", ",", "31.2`"}], "}"}]], 
         Annotation[#, {30.497499999999995`, 31.2}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{19.09375, 17.2}]}}, 
          RowBox[{"{", 
            RowBox[{"19.09375`", ",", "17.2`"}], "}"}]], 
         Annotation[#, {19.09375, 17.2}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{24.634999999999998`, 23.1}]}}, 
          RowBox[{"{", 
            RowBox[{"24.634999999999998`", ",", "23.1`"}], "}"}]], 
         Annotation[#, {24.634999999999998`, 23.1}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{28.227083333333333`, 26.6}]}}, 
          RowBox[{"{", 
            RowBox[{"28.227083333333333`", ",", "26.6`"}], "}"}]], 
         Annotation[#, {28.227083333333333`, 26.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{24.22833333333333, 22.9}]}}, 
          RowBox[{"{", 
            RowBox[{"24.22833333333333`", ",", "22.9`"}], "}"}]], 
         Annotation[#, {24.22833333333333, 22.9}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{25.905833333333334`, 24.1}]}}, 
          RowBox[{"{", 
            RowBox[{"25.905833333333334`", ",", "24.1`"}], "}"}]], 
         Annotation[#, {25.905833333333334`, 24.1}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{21.184916666666666`, 22.7}]}}, 
          RowBox[{"{", 
            RowBox[{"21.184916666666666`", ",", "22.7`"}], "}"}]], 
         Annotation[#, {21.184916666666666`, 22.7}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{21.305833333333336`, 22.6}]}}, 
          RowBox[{"{", 
            RowBox[{"21.305833333333336`", ",", "22.6`"}], "}"}]], 
         Annotation[#, {21.305833333333336`, 22.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{36.13249999999999, 21.9}]}}, 
          RowBox[{"{", 
            RowBox[{"36.13249999999999`", ",", "21.9`"}], "}"}]], 
         Annotation[#, {36.13249999999999, 21.9}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{19.096666666666668`, 23.1}]}}, 
          RowBox[{"{", 
            RowBox[{"19.096666666666668`", ",", "23.1`"}], "}"}]], 
         Annotation[#, {19.096666666666668`, 23.1}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{38.84958333333333, 50.}]}}, 
          RowBox[{"{", 
            RowBox[{"38.84958333333333`", ",", "50.`"}], "}"}]], 
         Annotation[#, {38.84958333333333, 50.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{41.99708333333332, 50.}]}}, 
          RowBox[{"{", 
            RowBox[{"41.99708333333332`", ",", "50.`"}], "}"}]], 
         Annotation[#, {41.99708333333332, 50.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{34.70208333333333, 50.}]}}, 
          RowBox[{"{", 
            RowBox[{"34.70208333333333`", ",", "50.`"}], "}"}]], 
         Annotation[#, {34.70208333333333, 50.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{14.285416666666672`, 13.8}]}}, 
          RowBox[{"{", 
            RowBox[{"14.285416666666672`", ",", "13.8`"}], "}"}]], 
         Annotation[#, {14.285416666666672`, 13.8}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{13.730000000000004`, 13.3}]}}, 
          RowBox[{"{", 
            RowBox[{"13.730000000000004`", ",", "13.3`"}], "}"}]], 
         Annotation[#, {13.730000000000004`, 13.3}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{9.860000000000008, 13.1}]}}, 
          RowBox[{"{", 
            RowBox[{"9.860000000000008`", ",", "13.1`"}], "}"}]], 
         Annotation[#, {9.860000000000008, 13.1}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{8.19333333333334, 8.8}]}}, 
          RowBox[{"{", 
            RowBox[{"8.19333333333334`", ",", "8.8`"}], "}"}]], 
         Annotation[#, {8.19333333333334, 8.8}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{7.342083333333337, 10.5}]}}, 
          RowBox[{"{", 
            RowBox[{"7.342083333333337`", ",", "10.5`"}], "}"}]], 
         Annotation[#, {7.342083333333337, 10.5}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{10.40083333333334, 11.5}]}}, 
          RowBox[{"{", 
            RowBox[{"10.40083333333334`", ",", "11.5`"}], "}"}]], 
         Annotation[#, {10.40083333333334, 11.5}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{16.09208333333334, 15.1}]}}, 
          RowBox[{"{", 
            RowBox[{"16.09208333333334`", ",", "15.1`"}], "}"}]], 
         Annotation[#, {16.09208333333334, 15.1}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{14.183333333333337`, 12.7}]}}, 
          RowBox[{"{", 
            RowBox[{"14.183333333333337`", ",", "12.7`"}], "}"}]], 
         Annotation[#, {14.183333333333337`, 12.7}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{13.942500000000004`, 13.1}]}}, 
          RowBox[{"{", 
            RowBox[{"13.942500000000004`", ",", "13.1`"}], "}"}]], 
         Annotation[#, {13.942500000000004`, 13.1}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{14.55583333333334, 12.5}]}}, 
          RowBox[{"{", 
            RowBox[{"14.55583333333334`", ",", "12.5`"}], "}"}]], 
         Annotation[#, {14.55583333333334, 12.5}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{6.93625000000001, 8.5}]}}, 
          RowBox[{"{", 
            RowBox[{"6.93625000000001`", ",", "8.5`"}], "}"}]], 
         Annotation[#, {6.93625000000001, 8.5}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{15.259166666666673`, 11.9}]}}, 
          RowBox[{"{", 
            RowBox[{"15.259166666666673`", ",", "11.9`"}], "}"}]], 
         Annotation[#, {15.259166666666673`, 11.9}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{21.901666666666667`, 27.9}]}}, 
          RowBox[{"{", 
            RowBox[{"21.901666666666667`", ",", "27.9`"}], "}"}]], 
         Annotation[#, {21.901666666666667`, 27.9}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{13.528750000000008`, 17.9}]}}, 
          RowBox[{"{", 
            RowBox[{"13.528750000000008`", ",", "17.9`"}], "}"}]], 
         Annotation[#, {13.528750000000008`, 17.9}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{7.9162500000000104`, 10.4}]}}, 
          RowBox[{"{", 
            RowBox[{"7.9162500000000104`", ",", "10.4`"}], "}"}]], 
         Annotation[#, {7.9162500000000104`, 10.4}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{8.419166666666676, 8.8}]}}, 
          RowBox[{"{", 
            RowBox[{"8.419166666666676`", ",", "8.8`"}], "}"}]], 
         Annotation[#, {8.419166666666676, 8.8}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{14.668333333333338`, 8.4}]}}, 
          RowBox[{"{", 
            RowBox[{"14.668333333333338`", ",", "8.4`"}], "}"}]], 
         Annotation[#, {14.668333333333338`, 8.4}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{15.660833333333336`, 14.2}]}}, 
          RowBox[{"{", 
            RowBox[{"15.660833333333336`", ",", "14.2`"}], "}"}]], 
         Annotation[#, {15.660833333333336`, 14.2}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{15.268750000000002`, 11.7}]}}, 
          RowBox[{"{", 
            RowBox[{"15.268750000000002`", ",", "11.7`"}], "}"}]], 
         Annotation[#, {15.268750000000002`, 11.7}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{12.75583333333334, 11.}]}}, 
          RowBox[{"{", 
            RowBox[{"12.75583333333334`", ",", "11.`"}], "}"}]], 
         Annotation[#, {12.75583333333334, 11.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{15.004500000000004`, 11.7}]}}, 
          RowBox[{"{", 
            RowBox[{"15.004500000000004`", ",", "11.7`"}], "}"}]], 
         Annotation[#, {15.004500000000004`, 11.7}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{11.944583333333338`, 13.4}]}}, 
          RowBox[{"{", 
            RowBox[{"11.944583333333338`", ",", "13.4`"}], "}"}]], 
         Annotation[#, {11.944583333333338`, 13.4}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{11.62666666666667, 12.8}]}}, 
          RowBox[{"{", 
            RowBox[{"11.62666666666667`", ",", "12.8`"}], "}"}]], 
         Annotation[#, {11.62666666666667, 12.8}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{9.311250000000008, 10.5}]}}, 
          RowBox[{"{", 
            RowBox[{"9.311250000000008`", ",", "10.5`"}], "}"}]], 
         Annotation[#, {9.311250000000008, 10.5}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{9.469166666666675, 10.8}]}}, 
          RowBox[{"{", 
            RowBox[{"9.469166666666675`", ",", "10.8`"}], "}"}]], 
         Annotation[#, {9.469166666666675, 10.8}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{10.673750000000005`, 11.8}]}}, 
          RowBox[{"{", 
            RowBox[{"10.673750000000005`", ",", "11.8`"}], "}"}]], 
         Annotation[#, {10.673750000000005`, 11.8}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{17.096583333333335`, 12.6}]}}, 
          RowBox[{"{", 
            RowBox[{"17.096583333333335`", ",", "12.6`"}], "}"}]], 
         Annotation[#, {17.096583333333335`, 12.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{16.088333333333335`, 13.4}]}}, 
          RowBox[{"{", 
            RowBox[{"16.088333333333335`", ",", "13.4`"}], "}"}]], 
         Annotation[#, {16.088333333333335`, 13.4}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{17.72875, 16.1}]}}, 
          RowBox[{"{", 
            RowBox[{"17.72875`", ",", "16.1`"}], "}"}]], 
         Annotation[#, {17.72875, 16.1}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{20.363333333333333`, 17.8}]}}, 
          RowBox[{"{", 
            RowBox[{"20.363333333333333`", ",", "17.8`"}], "}"}]], 
         Annotation[#, {20.363333333333333`, 17.8}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{15.578333333333337`, 12.7}]}}, 
          RowBox[{"{", 
            RowBox[{"15.578333333333337`", ",", "12.7`"}], "}"}]], 
         Annotation[#, {15.578333333333337`, 12.7}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{16.032000000000004`, 14.9}]}}, 
          RowBox[{"{", 
            RowBox[{"16.032000000000004`", ",", "14.9`"}], "}"}]], 
         Annotation[#, {16.032000000000004`, 14.9}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{17.56575, 20.}]}}, 
          RowBox[{"{", 
            RowBox[{"17.56575`", ",", "20.`"}], "}"}]], 
         Annotation[#, {17.56575, 20.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{18.19916666666667, 17.7}]}}, 
          RowBox[{"{", 
            RowBox[{"18.19916666666667`", ",", "17.7`"}], "}"}]], 
         Annotation[#, {18.19916666666667, 17.7}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{18.911583333333336`, 19.5}]}}, 
          RowBox[{"{", 
            RowBox[{"18.911583333333336`", ",", "19.5`"}], "}"}]], 
         Annotation[#, {18.911583333333336`, 19.5}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{22.437416666666667`, 20.2}]}}, 
          RowBox[{"{", 
            RowBox[{"22.437416666666667`", ",", "20.2`"}], "}"}]], 
         Annotation[#, {22.437416666666667`, 20.2}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{13.67541666666667, 19.1}]}}, 
          RowBox[{"{", 
            RowBox[{"13.67541666666667`", ",", "19.1`"}], "}"}]], 
         Annotation[#, {13.67541666666667, 19.1}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{17.169583333333335`, 19.1}]}}, 
          RowBox[{"{", 
            RowBox[{"17.169583333333335`", ",", "19.1`"}], "}"}]], 
         Annotation[#, {17.169583333333335`, 19.1}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{20.899166666666666`, 19.6}]}}, 
          RowBox[{"{", 
            RowBox[{"20.899166666666666`", ",", "19.6`"}], "}"}]], 
         Annotation[#, {20.899166666666666`, 19.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{19.732916666666668`, 23.2}]}}, 
          RowBox[{"{", 
            RowBox[{"19.732916666666668`", ",", "23.2`"}], "}"}]], 
         Annotation[#, {19.732916666666668`, 23.2}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{14.963750000000006`, 14.6}]}}, 
          RowBox[{"{", 
            RowBox[{"14.963750000000006`", ",", "14.6`"}], "}"}]], 
         Annotation[#, {14.963750000000006`, 14.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{22.360833333333332`, 21.2}]}}, 
          RowBox[{"{", 
            RowBox[{"22.360833333333332`", ",", "21.2`"}], "}"}]], 
         Annotation[#, {22.360833333333332`, 21.2}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{21.91875, 20.6}]}}, 
          RowBox[{"{", 
            RowBox[{"21.91875`", ",", "20.6`"}], "}"}]], 
         Annotation[#, {21.91875, 20.6}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{15.049166666666672`, 15.2}]}}, 
          RowBox[{"{", 
            RowBox[{"15.049166666666672`", ",", "15.2`"}], "}"}]], 
         Annotation[#, {15.049166666666672`, 15.2}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{20.825833333333335`, 18.3}]}}, 
          RowBox[{"{", 
            RowBox[{"20.825833333333335`", ",", "18.3`"}], "}"}]], 
         Annotation[#, {20.825833333333335`, 18.3}, 
          "Tooltip"]& ]}}, {}, {}, {{}, {}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           GrayLevel[0.2], 
           Opacity[0.5], 
           AbsoluteThickness[1.], 
           AbsoluteDashing[{2, 4}]], 
          LineBox[CompressedData["
1:eJxFxW0s1HEcAPC/lu0Oda7L0410K4R5uPN4Ho5DJw+Rh5rEZuzYn5zq6pC6
PLygdun4N1I0D/MwZPKYLHRbN5bsmIjdzTGOskOzplLXwwvf34vPPozUnFj+
IQzDzv/z/604fcXE6kvOwbx8WZcOlwYc7LvgvLaI18OeZD42gXfDbgzs6Bg+
BrNefHg8jCtgptA9YQhXo+fW2a/wHXieWnpKQNcLPNgpjFij4mRYkSSw/SM3
hq0Wb1UpmCbwwBJ71SHGAk5tTxGox63gKRJhozJhwBXYbHE54xSsSuSJsy/b
wNE/qjakWXYwWeN5hye0hyM9SF32rY5w//hgVEy/E9w28uRhy7YLfL1o9aec
woQb3mVplMdZsOmwYQPZ1Q1+PkMnErzd4cxnQfEjlzzgRMNjDtocTzi57oIX
R+QFN6tbaS2V3jDGE9i51rJhcawyuqTeB+Yap4VqX/vCZjsJonyZH8wqyrhp
qfaHrw1ZlZZ958BvacHTproAuONR4DeVJBC+Z1tdx6Vy4TUpV0Em0FtxeZkq
6yAYa0s/GdSE7otf9u9hBsM3Kmm5vQNoWVONjwU7BO470sl/IEd3k0SdkvCz
cFTSZOLTBbS4REQYpfPgQd9P65TPaCJS3nQiNxTO28oqGNlHb6fxVbK752AS
a7NlxiAMdqw4IxGWo+lqScSoFE1y+WpgSKA1k0P3G6vRjaSI0ul6tHlhdrFL
L/pwTk/e5jx6942pt9ciesWoYK9YiR5tDxbRl9G3NbPCsC/oneQ9Qesv9FLn
FeddHXpqf1TL0QuHO2rKrs7po9M/WmTqU9AXT4vtY6joEOHKRi0NzaB2ZLib
o41TKHaFdLSuS6h5b4nW/p5vNrNGKyP9+GkM9F8gDxex
           "]]}, 
         Annotation[#, "Charting`Private`Tag$64899#1"]& ]}}, {}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 52.260846875}, {0, 52.260846875}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, 
     Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, False}, {True, False}}, 
     FrameLabel -> {{
        FormBox["\"actual value\"", TraditionalForm], None}, {
        FormBox["\"predicted value\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 52.260846875}, {0, 52.260846875}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"predictions\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    AbsoluteThickness[1.], 
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    CircleBox[{0, 0}, 
                    Offset[{1.8, 1.8}, {0., 0.}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    AbsoluteThickness[1.], 
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    CircleBox[{0, 0}, 
                    Offset[{1.8, 1.8}, {0., 0.}]]}], ",", "Automatic"}], 
                    "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"perfect prediction line\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0.2]"], Appearance -> None,
                     BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.2], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "4"}], "}"}], "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7181239397009106`*^9},ExpressionUUID->"0f5d4618-d7d0-48d0-a20c-\
50bb275e3962"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<ResidualPlot\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.718123976641343*^9, 
  3.718123998114478*^9}},ExpressionUUID->"ee90fa8b-7ee4-4eb4-8c02-\
0ef3befab2d4"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJztmPtTlNcZxxcRg+slQKNovK03hHDbZdll2UDOQ/BWU62xTYozGpE22qSm
WscYa5yINjpabcoQm8a2NExsJqnNGOtEh2rMecfEJnaspUrV0VFRCAGMlasg
RdLzPO9+F7d/QH/i/MDy2ffdc3nOc573M+/kktWLnh3kcDi6oxwO/mzbNV0X
lefR55lv9JZ8M8EaEnyh8tygAqK7J8uXrYqiw1sWjGvcnUstfF/WUOLLQ0p8
ZJUvS7s7q1t9MOf6xodme4kWVU3cdvOCLnh3xLpLVV6qrE984pU/f6F27jAt
4KXip7i16HWX6N0Rq9y0cFzjh1sWNNv3W146OIKvdOpsr2n7MijAn+0Oawq3
eX6qvWLahGHWbjONtpfN+EU88y69coVpr/momD+ThpKZxJNVE/OpZeNDB+Zc
71GTmLcHyOpMXvLLE41qw0um6SyyuL8r9cpf/Vx0xcgCqjTLOVneoXg6NMdH
1cT/9eiPeZw6olKOz6lG/R5fn5FNxNMf16glfmvNfJg+vK5qOICFOSG+ouW2
hQEiHsd/S2/lr5vM73m4ZWfV6zzu82b+zNda9RgTtfoZueTiz8QO/TIv40YO
kfPCvjX5t5RMMydIFvez5aI6weva7yPXAd6I66rklJmoU5HLhGnXyQnW33je
KTlU2ctX2vQDvIFHcsglG9GsB1eYCHzDT5USiC57POejdFAC2ancvOxJASrl
8aKG0Y/N9gfvmf3mPAjesffrR16qPc2tTv9pv2mD/FTE2z1quMWXvcN85JD2
qXreRKG6wGeHY+HXOp3DUJNNbu7vaJv6lSwwk0p/zRM+oq/xNk13k+M97ni/
avm3aRlZ5JCN/EyXcQCWeag4nwPUohLiTRtrrt/mG2/rWF7v7Axaw+M+d083
8X5UuWmu5F2M5ZR4ZFIt73cwzjrDyxjuoViZr9P6ymTTtp95KJnD8fs+/SWn
9R8yqZLzcFe7/ozPgc9NcZKYTXoYb1Ozh3ZzGm4bZPF2lAzNs89PW4IlaZ8a
DO1Hs5J4+nxUxvz0SHqUl9E5lxw/5w4Oq4+OmTbVT6V8jnZ8qjbx/swz+Ssb
/5XmtF9xxpy3vaYtdtJiTki3P5Rvl1Qe91eRRyTnoklxVj1xxGefvzNdSvIt
EflZa+e/4Yf5+5xk+iuvb37oclk8dZvtSnuKqJLTp6NPSZrvJSLOk8z/KKkf
J4gsOR512hy6zuSFs8jF47+SSL/heebOIrckxkSaa7L2wEovOSTxjup31piN
NPkU4HlPiKeZ3PaY88RxOHbHzp/FOTSNw//sKJrF109n0UXOk4oYkvHq/fZ5
Od4aWm8ulUq86zSnW1pKkIp5Y24MsbgqdAbyqJLHrRtjSf8p2eSQBR/Usn+n
/Ha9O3lDy7Sjg3a9WdGupdtphXY8RyZI2UzzFFKAf79+NEk6JxK5+ML7DkuO
3Xgf9sc+b2/nkkPq52Ut2xwIkksK3z29ntN8syLivI6vVd/lc5U/iyw+DY8M
t+OzYybJubg62Y7LFWWf5+Oj7LJR7rfr3+Od6g4vON+Mz3FackXJsuYFySGF
uMmOb2s2cVq+UFmvpSx/EaAf8hfp0RZPf12S2X++sNJpl7kncymW7/uF05Ky
kWTiLeW3Xcl6T3upmrt7fYQl+VSRQ6Vyfmrt+jg3QLWSLz1ajl2pn6qlnsRa
Mn5+wP79d4Zb2zmNXzT50sELecfuv8NLcfY/mrdxnzuXarn+L59svcbL3PwY
VfJ8NjYo6X+M1+7/W31ajtHbpr7JP91awh7Ms89bbI+W9QbN+ZCD0WnX5y9N
/1wH6nv1nn9ePvR0po9axq6P+Ty/W23mfFvgo4MSmA4l+RX3ONWYbXC+lGbJ
+TTjS92NjiN5jK0qtPdrfhKd5XV+PZOq+PkZ5SJ5TC0uoN08nzczaDrPrzyN
iiUfruluHuDFVLKk3lzWx2UDptJFxptDaaUksIvcUv/q1Fae3zMTqPd3BguH
0k94X/8+jTZIIreq5ZKvbmqRid3W8txdmkbVcv669EkO041UcqXwwpq14/vm
Z+PTycH1b63DeoSH/3gcFfF8Yu6qRo7Tqxm0Sp5vTkuePw0+2sTz6EukqXz/
yFRaxPm4KZ5Gc77un0Sx/P3VaMrjc3LeRVYqH6CLaq/UyXR6k/M2YazVwXV1
USatkedpl/4t15edGVTD+7t7uCXr35pCAalzvbrvj61n5w/KoOKR6YcqVjut
8xzvuhlUJf7TpQplnw3LwWhTezgv3ppCxbKedvUvPrYtUyhZCkunSuMwFE2n
NXK9TT0TtfaDv4zxUMJby79X2htv5fD8R7vpVXlex1ifcPyOekieWw/2aEmD
pdn283XLYKuZz0FyJsWJaD1gnd/QlOSJdVO3+fv++DY9+0j7vZoyD1XPL4kr
+mk0/YDXl5VFJM+fa/ofj23avrQpi1xJG9zfrrmhYh5s2Nmz2k9lV984HGyI
slZJ/UylMl7eoVF2HqZ6QvWwT0kZb8gmS+pehxafOealbk6Pj4ZRAReUW+lk
cd2ec0FL2Jf47f7K2+z6eNM8z3gfxnbqXq6HYzOo9GE+6Z8oGe9cNlXx+cge
bME/HaEG/wTDP8HwTzD8Ewz/BMM/wfDPiPut/uvwTzD8Ewz/BMM/wfBPMPwT
DP8Ewz/B8E8w/BMM/wTDP8HwTzD8Ewz/BMM/wfBPMPwTDP8Ewz/B8E8w/BMM
/wTDPyPGM/4Jhn+C4Z9g+CcY/gmO9E+HA/4Jhn+C4Z/gsH+GWtg/Qw3+CQ77
Z6jBP8HwTzD8Ewz/BMM/wfBPMPwTDP8Ewz/B8E8w/BMc9s9Qg3+C4Z9g+CcY
/gmGf4Lhn2D4Jxj+CYZ/guGfYPgnGP4Jhn+C4Z/gsH+GGvwTDP8Ewz/B8M+I
8er71w//BMM/wfDPiP5T+vMR/gmGf4LhnxH9e/oZ/gmGf4LD/hlq8E8w/BMM
/4yIj/FPMPwTDP8Ewz/BYf+8f/2t/euHf4Lhn2D4Jxj+GbHe0/37Cf8Ewz8d
97fS/vnCP8Fh/7y//45+hn+C4Z8R/Y/pvx/+CYZ/Rqw32H8d/gmGf4Lhn2D4
Jxj+CYZ/guGfYPgnGP4Jhn+C4Z9g+CcY/gmGf4Lhn2D4Jxj+CQ77Z6jBP8Hw
TzD8Ewz/BMM/wfBPMPwTDP8Ewz8j1m/8Ewz/BMM/wfBPMPwTDP8Ewz/B8E8w
/BMM/wTDP8Hwz/D8Qv4Jhn+C4Z9g+CcY/gmGf4Lhn2D4Jxj+CYZ/htcf8k8w
/BMM/4wY79z/+NPA+8+B958D7z8H3n8OvP8ceP858P5z4P3nwPvPgfef/6f3
n/8FakblUQ==
    "], {{{}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{169, 1}], LineBox[{173, 5}], LineBox[{175, 7}], 
       LineBox[{176, 8}], LineBox[{177, 9}], LineBox[{178, 10}], 
       LineBox[{179, 11}], LineBox[{180, 12}], LineBox[{186, 18}], 
       LineBox[{187, 19}], LineBox[{188, 20}], LineBox[{190, 22}], 
       LineBox[{191, 23}], LineBox[{193, 25}], LineBox[{194, 26}], 
       LineBox[{198, 30}], LineBox[{199, 31}], LineBox[{200, 32}], 
       LineBox[{201, 33}], LineBox[{204, 36}], LineBox[{205, 37}], 
       LineBox[{206, 38}], LineBox[{208, 40}], LineBox[{210, 42}], 
       LineBox[{212, 44}], LineBox[{214, 46}], LineBox[{215, 47}], 
       LineBox[{216, 48}], LineBox[{217, 49}], LineBox[{218, 50}], 
       LineBox[{219, 51}], LineBox[{220, 52}], LineBox[{221, 53}], 
       LineBox[{222, 54}], LineBox[{223, 55}], LineBox[{228, 60}], 
       LineBox[{238, 70}], LineBox[{241, 73}], LineBox[{247, 79}], 
       LineBox[{248, 80}], LineBox[{249, 81}], LineBox[{250, 82}], 
       LineBox[{251, 83}], LineBox[{252, 84}], LineBox[{255, 87}], 
       LineBox[{256, 88}], LineBox[{257, 89}], LineBox[{258, 90}], 
       LineBox[{266, 98}], LineBox[{267, 99}], LineBox[{268, 100}], 
       LineBox[{269, 101}], LineBox[{271, 103}], LineBox[{272, 104}], 
       LineBox[{273, 105}], LineBox[{274, 106}], LineBox[{275, 107}], 
       LineBox[{277, 109}], LineBox[{278, 110}], LineBox[{280, 112}], 
       LineBox[{281, 113}], LineBox[{282, 114}], LineBox[{283, 115}], 
       LineBox[{284, 116}], LineBox[{287, 119}], LineBox[{292, 124}], 
       LineBox[{293, 125}], LineBox[{298, 130}], LineBox[{299, 131}], 
       LineBox[{300, 132}], LineBox[{301, 133}], LineBox[{303, 135}], 
       LineBox[{308, 140}], LineBox[{309, 141}], LineBox[{310, 142}], 
       LineBox[{311, 143}], LineBox[{312, 144}], LineBox[{318, 150}], 
       LineBox[{319, 151}], LineBox[{320, 152}], LineBox[{321, 153}], 
       LineBox[{322, 154}], LineBox[{323, 155}], LineBox[{325, 157}], 
       LineBox[{327, 159}], LineBox[{330, 162}], LineBox[{332, 164}], 
       LineBox[{333, 165}], LineBox[{334, 166}], LineBox[{336, 168}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{170, 2}], LineBox[{171, 3}], LineBox[{172, 4}], 
       LineBox[{174, 6}], LineBox[{181, 13}], LineBox[{182, 14}], 
       LineBox[{183, 15}], LineBox[{184, 16}], LineBox[{185, 17}], 
       LineBox[{189, 21}], LineBox[{192, 24}], LineBox[{195, 27}], 
       LineBox[{196, 28}], LineBox[{197, 29}], LineBox[{202, 34}], 
       LineBox[{203, 35}], LineBox[{207, 39}], LineBox[{209, 41}], 
       LineBox[{211, 43}], LineBox[{213, 45}], LineBox[{224, 56}], 
       LineBox[{225, 57}], LineBox[{226, 58}], LineBox[{227, 59}], 
       LineBox[{229, 61}], LineBox[{230, 62}], LineBox[{231, 63}], 
       LineBox[{232, 64}], LineBox[{233, 65}], LineBox[{234, 66}], 
       LineBox[{235, 67}], LineBox[{236, 68}], LineBox[{237, 69}], 
       LineBox[{239, 71}], LineBox[{240, 72}], LineBox[{242, 74}], 
       LineBox[{243, 75}], LineBox[{244, 76}], LineBox[{245, 77}], 
       LineBox[{246, 78}], LineBox[{253, 85}], LineBox[{254, 86}], 
       LineBox[{259, 91}], LineBox[{260, 92}], LineBox[{261, 93}], 
       LineBox[{262, 94}], LineBox[{263, 95}], LineBox[{264, 96}], 
       LineBox[{265, 97}], LineBox[{270, 102}], LineBox[{276, 108}], 
       LineBox[{279, 111}], LineBox[{285, 117}], LineBox[{286, 118}], 
       LineBox[{288, 120}], LineBox[{289, 121}], LineBox[{290, 122}], 
       LineBox[{291, 123}], LineBox[{294, 126}], LineBox[{295, 127}], 
       LineBox[{296, 128}], LineBox[{297, 129}], LineBox[{302, 134}], 
       LineBox[{304, 136}], LineBox[{305, 137}], LineBox[{306, 138}], 
       LineBox[{307, 139}], LineBox[{313, 145}], LineBox[{314, 146}], 
       LineBox[{315, 147}], LineBox[{316, 148}], LineBox[{317, 149}], 
       LineBox[{324, 156}], LineBox[{326, 158}], LineBox[{328, 160}], 
       LineBox[{329, 161}], LineBox[{331, 163}], LineBox[{335, 167}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwVzdlWDQAAQNHrU/okSaFQlyiVi6goJWNJRWahOVHGjBENKMmQqYiQShKV
lB7tHvZa5+2EBUPh6xcEAoE6FopwFhHBYiKJYglLWUY0MSxnBSuJJY4gq1hN
PGtYSwKJrCOJZFKYn4fYwEY2kcpmtpBGOhlsZRuZZLGdbHLYQS472cVu9rCX
feSRz34KOEAhRRRzkEOUcJgjHOUYxznBSU5RymnOcJYyyqmgkiqqqaGWc9Rx
ngvU08BFLnGZK1zlGo1c5wY3ucVt7tDEXe7RzH0e0EIrbbTzkEc8poNOntDF
U7p5xnNe8JIeXvGaN7zlHb308Z4P9PORTwzwmS98ZZBvDDHMCN8Z5Qdj/GSc
X/xmgkmm+MM0f5lhln/M8R+VLG74
        "]]}, {}}}], {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, False},
  AxesLabel->{None, None},
  AxesOrigin->{6.264667968750012, 0.},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"actual value - predicted value\"", TraditionalForm], None}, {
     FormBox["\"predicted value\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{209., Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{6.93625000000001, 49.91749999999998}, {-16.062812500000007`, 
   16.062812500000007`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.718124001864132*^9},ExpressionUUID->"c294fabf-f183-4c70-9ee3-\
d39c1c834d06"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<StandardDeviation\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7181240100183573`*^9, 
  3.7181240450206647`*^9}},ExpressionUUID->"aed1077d-4bd6-49ab-8799-\
cf1da1fe1e37"],

Cell[BoxData["3.396126096494894`"], "Output",
 CellChangeTimes->{
  3.7181240461672163`*^9},ExpressionUUID->"8c974e69-91a4-4b5a-a4a4-\
cf524fba6d0c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<ResidualHistogram\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.718124065387139*^9, 
  3.7181240749948273`*^9}},ExpressionUUID->"6abdd98c-46b9-45dc-884d-\
25e68c1d3211"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.574], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.574], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-16., 0}, {-14., 1.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{37.08000000000003, 47.57000000000002}, {
          30.693000759661384`, 32.87847534880819}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-10., 0}, {-8., 1.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{67.05000000000001, 77.54000000000002}, {
          30.693000759661384`, 32.87847534880819}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-8., 0}, {-6., 3.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{77.04000000000002, 87.53}, {27.322051581367777`, 
          32.87847534880819}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-6., 0}, {-4., 4.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{87.03, 97.52000000000001}, {25.636576992220974`, 
          32.87847534880819}}],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-4., 0}, {-2., 23.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{97.02000000000001, 107.51}, {-6.387440201568289, 
          32.87847534880819}}],
        StatusArea[#, 23]& ,
        TagBoxNote->"23"],
       StyleBox["23", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[23, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-2., 0}, {0., 58.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{107.01, 117.5}, {-65.37905082170641, 
          32.878475348808195`}}],
        StatusArea[#, 58]& ,
        TagBoxNote->"58"],
       StyleBox["58", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[58, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0., 0}, {2., 48.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{117., 127.49}, {-48.52430493023838, 
          32.87847534880819}}],
        StatusArea[#, 48]& ,
        TagBoxNote->"48"],
       StyleBox["48", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[48, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2., 0}, {4., 13.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{126.99, 137.48}, {10.467305689899742`, 
          32.87847534880819}}],
        StatusArea[#, 13]& ,
        TagBoxNote->"13"],
       StyleBox["13", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[13, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{4., 0}, {6., 11.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{136.98, 147.47}, {13.83825486819335, 
          32.87847534880819}}],
        StatusArea[#, 11]& ,
        TagBoxNote->"11"],
       StyleBox["11", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[11, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{6., 0}, {8., 1.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{146.97, 157.45999999999998`}, {30.693000759661384`,
           32.87847534880819}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{8., 0}, {10., 2.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{156.95999999999998`, 167.45}, {29.00752617051458, 
          32.87847534880819}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{10., 0}, {12., 1.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{166.95, 177.44}, {30.693000759661384`, 
          32.87847534880819}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{12., 0}, {14., 1.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{176.94, 187.42999999999998`}, {30.693000759661384`,
           32.87847534880819}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{14., 0}, {16., 1.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{186.92999999999998`, 197.41999999999996`}, {
          30.693000759661384`, 32.87847534880819}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{-16.64, 0},
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"count\"", TraditionalForm], None}, {
     FormBox["\"actual value - predicted value\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{202., Automatic},
  PlotRange->{{-16., 16.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7181240761134605`*^9},ExpressionUUID->"57ed5eb3-d18d-4d2f-b45e-\
ff5d08408af2"]
}, Open  ]],

Cell[TextData[StyleBox["III. Confusion matrix visualisation of a classifier",
 FontColor->RGBColor[1, 0.5, 0]]], "Text",
 CellChangeTimes->{{3.7181243972956944`*^9, 
  3.718124413755663*^9}},ExpressionUUID->"cc19bb1b-dc3e-4239-a7f2-\
b489afe1b844"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"trainingset", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<Satellite\>\""}], "}"}], 
     ",", "\"\<TrainingData\>\""}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"testset", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<Satellite\>\""}], "}"}], 
     ",", "\"\<TestData\>\""}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.718124419366788*^9, 
  3.718124421453948*^9}},ExpressionUUID->"06be1baf-fc12-4931-bb4e-\
947e7b6cf143"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "=", 
  RowBox[{"Classify", "[", "trainingset", "]"}]}]], "Input",
 CellChangeTimes->{{3.718124522681245*^9, 
  3.718124543251298*^9}},ExpressionUUID->"5f0e4249-08b1-4538-bf9b-\
9ba54d227b0d"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "36", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical"}, 10], 
                    "Tooltip"]& ], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of classes: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox["6", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"cotton crop\"", "\"damp gray soil\"", 
                    "\"gray soil\"", "\"red soil\"", 
                    "\"soil with vegetation stubble\"", 
                    "\"very damp gray soil\""}, "RowWithSeparators"], 
                    Short[#, 20]& ]], Annotation[#, 
                    Short[
                    
                    Row[{"cotton crop", "damp gray soil", "gray soil", 
                    "red soil", "soil with vegetation stubble", 
                    "very damp gray soil"}, ","], 20], "Tooltip"]& ], 
                    "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "36", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical"}, 10], 
                    "Tooltip"]& ], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of classes: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox["6", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"cotton crop\"", "\"damp gray soil\"", 
                    "\"gray soil\"", "\"red soil\"", 
                    "\"soil with vegetation stubble\"", 
                    "\"very damp gray soil\""}, "RowWithSeparators"], 
                    Short[#, 20]& ]], Annotation[#, 
                    Short[
                    
                    Row[{"cotton crop", "damp gray soil", "gray soil", 
                    "red soil", "soil with vegetation stubble", 
                    "very damp gray soil"}, ","], 20], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["4435", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7181245469453073`*^9},ExpressionUUID->"e7beb3f1-d196-4f71-850d-\
0e6e40820d22"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cm", "=", 
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{"c", ",", "testset"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.718124554433977*^9, 
  3.7181245762555923`*^9}},ExpressionUUID->"e94de7bb-1f8f-4aab-baee-\
37cd9b8143e0"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierMeasurementsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               
               RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                0.4746151541446917}, {0.7191592194171378, 0.5062062867304069, 
                0.8158644505878024}, {0.47333333333333333`, 
                0.7727052229508918, 
                0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
               ImagePadding -> 0.2, 
               PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
               PlotRangePadding -> Automatic, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2000", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               
               RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                0.4746151541446917}, {0.7191592194171378, 0.5062062867304069, 
                0.8158644505878024}, {0.47333333333333333`, 
                0.7727052229508918, 
                0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
               ImagePadding -> 0.2, 
               PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
               PlotRangePadding -> Automatic, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2000", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of classes: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["6", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Accuracy: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    RowBox[{
                    "0.8874999999999999556`5.8329288171027205", 
                    "\[PlusMinus]", "0.0070673084285472415`2."}], 
                    "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierMeasurementsObject[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.718124578027997*^9},ExpressionUUID->"c6dbfdbc-480d-44c7-83bb-\
2d7012770390"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cm", "[", "\"\<Accuracy\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7181245831524925`*^9, 
  3.71812459099682*^9}},ExpressionUUID->"3cb5231f-0a56-423c-982e-\
634aa96bf544"],

Cell[BoxData["0.8875`"], "Output",
 CellChangeTimes->{
  3.7181245917294283`*^9},ExpressionUUID->"47ef22cc-84af-4f18-9092-\
388f346919be"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cm", "[", "\"\<ConfusionMatrixPlot\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.718124596490058*^9, 
  3.7181246070768747`*^9}},ExpressionUUID->"7355ab5e-f89b-40b8-8f6f-\
863596d730bf"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBgg2IQGwI+2KPT1iaGVXP83tpPnx/E7jb3pf23Fflydx3u
27/8vUmq88Bb++PN8ssPe7+2jztW9FiH4QmGfhhdqzlj+VKmd/bbnv7Umer6
xt4pd3/zz85n9o0Tp+3d+v+dfVJW3aGye3fsGfgX2ki1RtoLhteaHHJ5Z7/U
/cqmNPu39loiPCrHhF/iNL/mi7NoSPM7ewPpM8rXtN/Zbwg7ZH246rW9m1AR
d+Tst/Yb11w5bbv/lX3dCveTKyc9sl91br5j98fX9qc+Kp1I3vzY/kKwYMuS
pH32a9sTKnx039qvNwrus5R4aa83Z+3nFefv4DSfVPfA5B9Wiaxzf3jLngEF
YJpDKo0rXph2pt96//2tvUrsva3Nr+7Z75/q/brySab98aUPVLhT3tlnGQZk
z9v61j7X9Pl6F/dXOM1nulDqwvDwrT3z3Ilphcde2x/crPXJ1f4pTvUB6dPu
M4W/sVd/wZ0pl//UftOsBennLp+x/9A0Jetp7lv7mM5z+2uFX9nv+yok/fby
A5zm4HLnlgPPj4f9eWOvwZepKef0wn51WdKpntab9rv/RTxeP/u1fUbMb/u3
1o/sD9ytVl1jN5dk83Gp/9G0i8tb5Z19pl7S5x1H3tgfUwsRXXvlOU5zAOTo
TPc=
   "], {{0, 0}, {6, 6}}, {0, 1}],
  Epilog->{{
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["215", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "215", "\" examples of \"", "\"cotton crop\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.9817351598173516`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.9598214285714286`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.9706546275395034`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{215, " examples of ", "cotton crop", " correctly classified"}], 
         Row[{"Precision = ", 0.9817351598173516}], 
         Row[{"Recall = ", 0.9598214285714286}], 
         Row[{"FScore = ", 0.9706546275395034}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"damp gray soil\"", 
             "\" misclassified as \"", "\"cotton crop\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          0, " example of ", "damp gray soil", " misclassified as ", 
           "cotton crop"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"gray soil\"", 
             "\" misclassified as \"", "\"cotton crop\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          0, " example of ", "gray soil", " misclassified as ", 
           "cotton crop"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"red soil\"", "\" misclassified as \"",
              "\"cotton crop\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0045662100456621`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0021691973969631237`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          1, " example of ", "red soil", " misclassified as ", 
           "cotton crop"}], 
         Row[{"Column fraction = ", 0.0045662100456621}], 
         Row[{"Row fraction = ", 0.0021691973969631237`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["3", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "3", "\" examples of \"", "\"soil with vegetation stubble\"", 
             "\" misclassified as \"", "\"cotton crop\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0136986301369863`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.012658227848101266`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          3, " examples of ", "soil with vegetation stubble", 
           " misclassified as ", "cotton crop"}], 
         Row[{"Column fraction = ", 0.0136986301369863}], 
         Row[{"Row fraction = ", 0.012658227848101266`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"very damp gray soil\"", 
             "\" misclassified as \"", "\"cotton crop\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          0, " example of ", "very damp gray soil", " misclassified as ", 
           "cotton crop"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"cotton crop\"", 
             "\" misclassified as \"", "\"damp gray soil\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          0, " example of ", "cotton crop", " misclassified as ", 
           "damp gray soil"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["134", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "134", "\" examples of \"", "\"damp gray soil\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.7444444444444445`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.6350710900473934`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.6854219948849105`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          134, " examples of ", "damp gray soil", " correctly classified"}], 
         Row[{"Precision = ", 0.7444444444444445}], 
         Row[{"Recall = ", 0.6350710900473934}], 
         Row[{"FScore = ", 0.6854219948849105}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["13", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "13", "\" examples of \"", "\"gray soil\"", 
             "\" misclassified as \"", "\"damp gray soil\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.07222222222222222`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0327455919395466`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          13, " examples of ", "gray soil", " misclassified as ", 
           "damp gray soil"}], 
         Row[{"Column fraction = ", 0.07222222222222222}], 
         Row[{"Row fraction = ", 0.0327455919395466}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"red soil\"", "\" misclassified as \"",
              "\"damp gray soil\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          0, " example of ", "red soil", " misclassified as ", 
           "damp gray soil"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"soil with vegetation stubble\"", 
             "\" misclassified as \"", "\"damp gray soil\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          0, " example of ", "soil with vegetation stubble", 
           " misclassified as ", "damp gray soil"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["33", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "33", "\" examples of \"", "\"very damp gray soil\"", 
             "\" misclassified as \"", "\"damp gray soil\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.18333333333333332`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.07021276595744681`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          33, " examples of ", "very damp gray soil", " misclassified as ", 
           "damp gray soil"}], 
         Row[{"Column fraction = ", 0.18333333333333332`}], 
         Row[{"Row fraction = ", 0.07021276595744681}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["2", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "2", "\" examples of \"", "\"cotton crop\"", 
             "\" misclassified as \"", "\"gray soil\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.004761904761904762`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.008928571428571428`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          2, " examples of ", "cotton crop", " misclassified as ", 
           "gray soil"}], 
         Row[{"Column fraction = ", 0.004761904761904762}], 
         Row[{"Row fraction = ", 0.008928571428571428}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["32", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "32", "\" examples of \"", "\"damp gray soil\"", 
             "\" misclassified as \"", "\"gray soil\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0761904761904762`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.15165876777251186`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          32, " examples of ", "damp gray soil", " misclassified as ", 
           "gray soil"}], 
         Row[{"Column fraction = ", 0.0761904761904762}], 
         Row[{"Row fraction = ", 0.15165876777251186`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["371", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "371", "\" examples of \"", "\"gray soil\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.8833333333333333`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.9345088161209067`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.9082007343941249`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{371, " examples of ", "gray soil", " correctly classified"}], 
         Row[{"Precision = ", 0.8833333333333333}], 
         Row[{"Recall = ", 0.9345088161209067}], 
         Row[{"FScore = ", 0.9082007343941249}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"red soil\"", "\" misclassified as \"",
              "\"gray soil\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.002380952380952381`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0021691973969631237`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          1, " example of ", "red soil", " misclassified as ", "gray soil"}], 
         Row[{"Column fraction = ", 0.002380952380952381}], 
         Row[{"Row fraction = ", 0.0021691973969631237`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"soil with vegetation stubble\"", 
             "\" misclassified as \"", "\"gray soil\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.002380952380952381`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.004219409282700422`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          1, " example of ", "soil with vegetation stubble", 
           " misclassified as ", "gray soil"}], 
         Row[{"Column fraction = ", 0.002380952380952381}], 
         Row[{"Row fraction = ", 0.004219409282700422}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["13", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "13", "\" examples of \"", "\"very damp gray soil\"", 
             "\" misclassified as \"", "\"gray soil\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.030952380952380953`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.027659574468085105`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          13, " examples of ", "very damp gray soil", " misclassified as ", 
           "gray soil"}], 
         Row[{"Column fraction = ", 0.030952380952380953`}], 
         Row[{"Row fraction = ", 0.027659574468085105`}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"cotton crop\"", 
             "\" misclassified as \"", "\"red soil\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          0, " example of ", "cotton crop", " misclassified as ", 
           "red soil"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"damp gray soil\"", 
             "\" misclassified as \"", "\"red soil\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          0, " example of ", "damp gray soil", " misclassified as ", 
           "red soil"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["2", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "2", "\" examples of \"", "\"gray soil\"", 
             "\" misclassified as \"", "\"red soil\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.004166666666666667`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.005037783375314861`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          2, " examples of ", "gray soil", " misclassified as ", "red soil"}], 
         Row[{"Column fraction = ", 0.004166666666666667}], 
         Row[{"Row fraction = ", 0.005037783375314861}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["459", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "459", "\" examples of \"", "\"red soil\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "0.95625`"}, "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.9956616052060737`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.9755579171094582`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{459, " examples of ", "red soil", " correctly classified"}], 
         Row[{"Precision = ", 0.95625}], 
         Row[{"Recall = ", 0.9956616052060737}], 
         Row[{"FScore = ", 0.9755579171094582}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["19", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "19", "\" examples of \"", "\"soil with vegetation stubble\"", 
             "\" misclassified as \"", "\"red soil\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.03958333333333333`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.08016877637130802`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          19, " examples of ", "soil with vegetation stubble", 
           " misclassified as ", "red soil"}], 
         Row[{"Column fraction = ", 0.03958333333333333}], 
         Row[{"Row fraction = ", 0.08016877637130802}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"very damp gray soil\"", 
             "\" misclassified as \"", "\"red soil\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          0, " example of ", "very damp gray soil", " misclassified as ", 
           "red soil"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["5", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "5", "\" examples of \"", "\"cotton crop\"", 
             "\" misclassified as \"", "\"soil with vegetation stubble\""}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.02564102564102564`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.022321428571428572`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          5, " examples of ", "cotton crop", " misclassified as ", 
           "soil with vegetation stubble"}], 
         Row[{"Column fraction = ", 0.02564102564102564}], 
         Row[{"Row fraction = ", 0.022321428571428572`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["2", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "2", "\" examples of \"", "\"damp gray soil\"", 
             "\" misclassified as \"", "\"soil with vegetation stubble\""}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.010256410256410256`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.009478672985781991`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          2, " examples of ", "damp gray soil", " misclassified as ", 
           "soil with vegetation stubble"}], 
         Row[{"Column fraction = ", 0.010256410256410256`}], 
         Row[{"Row fraction = ", 0.009478672985781991}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"gray soil\"", 
             "\" misclassified as \"", "\"soil with vegetation stubble\""}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          0, " example of ", "gray soil", " misclassified as ", 
           "soil with vegetation stubble"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"red soil\"", "\" misclassified as \"",
              "\"soil with vegetation stubble\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          0, " example of ", "red soil", " misclassified as ", 
           "soil with vegetation stubble"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["180", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "180", "\" examples of \"", "\"soil with vegetation stubble\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.9230769230769231`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.759493670886076`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.8333333333333335`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          180, " examples of ", "soil with vegetation stubble", 
           " correctly classified"}], 
         Row[{"Precision = ", 0.9230769230769231}], 
         Row[{"Recall = ", 0.759493670886076}], 
         Row[{"FScore = ", 0.8333333333333335}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["8", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "8", "\" examples of \"", "\"very damp gray soil\"", 
             "\" misclassified as \"", "\"soil with vegetation stubble\""}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.041025641025641026`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.01702127659574468`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          8, " examples of ", "very damp gray soil", " misclassified as ", 
           "soil with vegetation stubble"}], 
         Row[{"Column fraction = ", 0.041025641025641026`}], 
         Row[{"Row fraction = ", 0.01702127659574468}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["2", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "2", "\" examples of \"", "\"cotton crop\"", 
             "\" misclassified as \"", "\"very damp gray soil\""}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.003952569169960474`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.008928571428571428`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          2, " examples of ", "cotton crop", " misclassified as ", 
           "very damp gray soil"}], 
         Row[{"Column fraction = ", 0.003952569169960474}], 
         Row[{"Row fraction = ", 0.008928571428571428}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["43", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "43", "\" examples of \"", "\"damp gray soil\"", 
             "\" misclassified as \"", "\"very damp gray soil\""}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.08498023715415019`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.2037914691943128`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          43, " examples of ", "damp gray soil", " misclassified as ", 
           "very damp gray soil"}], 
         Row[{"Column fraction = ", 0.08498023715415019}], 
         Row[{"Row fraction = ", 0.2037914691943128}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["11", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "11", "\" examples of \"", "\"gray soil\"", 
             "\" misclassified as \"", "\"very damp gray soil\""}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.021739130434782608`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.027707808564231738`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          11, " examples of ", "gray soil", " misclassified as ", 
           "very damp gray soil"}], 
         Row[{"Column fraction = ", 0.021739130434782608`}], 
         Row[{"Row fraction = ", 0.027707808564231738`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"red soil\"", "\" misclassified as \"",
              "\"very damp gray soil\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          0, " example of ", "red soil", " misclassified as ", 
           "very damp gray soil"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["34", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "34", "\" examples of \"", "\"soil with vegetation stubble\"", 
             "\" misclassified as \"", "\"very damp gray soil\""}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.06719367588932806`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.14345991561181434`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          34, " examples of ", "soil with vegetation stubble", 
           " misclassified as ", "very damp gray soil"}], 
         Row[{"Column fraction = ", 0.06719367588932806}], 
         Row[{"Row fraction = ", 0.14345991561181434`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["416", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "416", "\" examples of \"", "\"very damp gray soil\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.8221343873517787`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.8851063829787233`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.8524590163934427`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          416, " examples of ", "very damp gray soil", 
           " correctly classified"}], 
         Row[{"Precision = ", 0.8221343873517787}], 
         Row[{"Recall = ", 0.8851063829787233}], 
         Row[{"FScore = ", 0.8524590163934427}]}], "Tooltip"]& ]}, 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {6.5, 5.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "224", "\" example\"", "\"s\"", "\" of class \"", 
            "\"cotton crop\""}, "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "0.9598214285714286`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{224, " example", "s", " of class ", "cotton crop"}], 
        Row[{"Recall = ", 0.9598214285714286}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {6.5, 4.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "211", "\" example\"", "\"s\"", "\" of class \"", 
            "\"damp gray soil\""}, "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.6350710900473934`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{211, " example", "s", " of class ", "damp gray soil"}], 
        Row[{"Recall = ", 0.6350710900473934}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {6.5, 3.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "397", "\" example\"", "\"s\"", "\" of class \"", "\"gray soil\""},
            "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.9345088161209067`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{397, " example", "s", " of class ", "gray soil"}], 
        Row[{"Recall = ", 0.9345088161209067}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {6.5, 2.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "461", "\" example\"", "\"s\"", "\" of class \"", "\"red soil\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.9956616052060737`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{461, " example", "s", " of class ", "red soil"}], 
        Row[{"Recall = ", 0.9956616052060737}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {6.5, 1.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "237", "\" example\"", "\"s\"", "\" of class \"", 
            "\"soil with vegetation stubble\""}, "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.759493670886076`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{
         237, " example", "s", " of class ", "soil with vegetation stubble"}], 
        Row[{"Recall = ", 0.759493670886076}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {6.5, 0.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "470", "\" example\"", "\"s\"", "\" of class \"", 
            "\"very damp gray soil\""}, "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.8851063829787233`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{470, " example", "s", " of class ", "very damp gray soil"}], 
        Row[{"Recall = ", 0.8851063829787233}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "219", "\" example\"", "\"s\"", "\" classified as \"", 
            "\"cotton crop\""}, "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.9817351598173516`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{219, " example", "s", " classified as ", "cotton crop"}], 
        Row[{"Precision = ", 0.9817351598173516}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "180", "\" example\"", "\"s\"", "\" classified as \"", 
            "\"damp gray soil\""}, "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.7444444444444445`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{180, " example", "s", " classified as ", "damp gray soil"}], 
        Row[{"Precision = ", 0.7444444444444445}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "420", "\" example\"", "\"s\"", "\" classified as \"", 
            "\"gray soil\""}, "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.8833333333333333`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{420, " example", "s", " classified as ", "gray soil"}], 
        Row[{"Precision = ", 0.8833333333333333}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {3.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "480", "\" example\"", "\"s\"", "\" classified as \"", 
            "\"red soil\""}, "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "0.95625`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{480, " example", "s", " classified as ", "red soil"}], 
        Row[{"Precision = ", 0.95625}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {4.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "195", "\" example\"", "\"s\"", "\" classified as \"", 
            "\"soil with vegetation stubble\""}, "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.9230769230769231`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{
         195, " example", "s", " classified as ", 
          "soil with vegetation stubble"}], 
        Row[{"Precision = ", 0.9230769230769231}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {5.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "506", "\" example\"", "\"s\"", "\" classified as \"", 
            "\"very damp gray soil\""}, "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.8221343873517787`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{506, " example", "s", " classified as ", "very damp gray soil"}], 
        Row[{"Precision = ", 0.8221343873517787}]}], "Tooltip"]& ]},
  Frame->True,
  FrameLabel->{
    FormBox["\"predicted class\"", TraditionalForm], 
    FormBox["\"actual class\"", TraditionalForm]},
  FrameTicks->{{{{5.5, 
       FormBox[
        RotationBox["\"cotton crop\"", BoxRotation -> 0.], 
        TraditionalForm]}, {4.5, 
       FormBox[
        RotationBox["\"damp gray soil\"", BoxRotation -> 0.], 
        TraditionalForm]}, {3.5, 
       FormBox[
        RotationBox["\"gray soil\"", BoxRotation -> 0.], TraditionalForm]}, {
      2.5, 
       FormBox[
        RotationBox["\"red soil\"", BoxRotation -> 0.], TraditionalForm]}, {
      1.5, 
       FormBox[
        RotationBox["\"soil with vegetation stubble\"", BoxRotation -> 0.], 
        TraditionalForm]}, {0.5, 
       FormBox[
        RotationBox["\"very damp gray soil\"", BoxRotation -> 0.], 
        TraditionalForm]}}, {{5.5, 
       FormBox["224", TraditionalForm]}, {4.5, 
       FormBox["211", TraditionalForm]}, {3.5, 
       FormBox["397", TraditionalForm]}, {2.5, 
       FormBox["461", TraditionalForm]}, {1.5, 
       FormBox["237", TraditionalForm]}, {0.5, 
       FormBox["470", TraditionalForm]}}}, {{{0.5, 
       FormBox[
        RotationBox["219", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["180", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["420", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {3.5, 
       FormBox[
        RotationBox["480", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {4.5, 
       FormBox[
        RotationBox["195", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {5.5, 
       FormBox[
        RotationBox["506", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0.5, 
       FormBox[
        RotationBox["\"cotton crop\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"damp gray soil\"", BoxRotation -> 1.5707963267948966`],
         TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["\"gray soil\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {3.5, 
       FormBox[
        RotationBox["\"red soil\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {4.5, 
       FormBox[
        RotationBox[
        "\"soil with vegetation stubble\"", BoxRotation -> 
         1.5707963267948966`], TraditionalForm]}, {5.5, 
       FormBox[
        RotationBox[
        "\"very damp gray soil\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}}},
  FrameTicksStyle->12,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{297., Automatic},
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{
  3.71812460815664*^9},ExpressionUUID->"08b3ecd1-2b98-44b0-a6be-182632fef259"]
}, Open  ]],

Cell[TextData[StyleBox["IV. Forecast temperatures",
 FontColor->RGBColor[1, 0.5, 0]]], "Text",
 CellChangeTimes->{{3.71812465934359*^9, 
  3.718124666724407*^9}},ExpressionUUID->"ab270907-ae1a-4a5c-8774-\
11dae422dc72"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataset", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#2", ",", 
        RowBox[{"ToExpression", "[", "#3", "]"}], ",", "#4"}], "}"}], 
      "\[Rule]", "#1"}], "&"}], "@@@", 
    RowBox[{"ExampleData", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<Statistics\>\"", ",", "\"\<USCityTemperature\>\""}], "}"}],
      "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7181246853857946`*^9, 
  3.718124685401452*^9}},ExpressionUUID->"0bbf00d6-e703-434c-9a5c-\
6e6318c9040f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"Predict", "[", 
   RowBox[{"dataset", ",", 
    RowBox[{"Method", "\[Rule]", "\"\<LinearRegression\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7181247503744726`*^9, 
  3.718124750405759*^9}},ExpressionUUID->"cf9589a7-b635-4fae-848e-\
685ce89adb7b"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{}, {{}, {
                  PointSize[0.125], 
                  GrayLevel[0.55], 
                  
                  PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                    4, 4.}}]}, {
                  GrayLevel[0.7], 
                  AbsoluteThickness[1.5], 
                  
                  BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                   5, 4}}]}}, {}}, Axes -> {False, False}, 
               AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
               BaseStyle -> {FontFamily -> "Arial", 
                 AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {All, All}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
               Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Numerical\"", ",", "\"Nominal\""}],
                     "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"LinearRegression\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{}, {{}, {
                  PointSize[0.125], 
                  GrayLevel[0.55], 
                  
                  PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                    4, 4.}}]}, {
                  GrayLevel[0.7], 
                  AbsoluteThickness[1.5], 
                  
                  BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                   5, 4}}]}}, {}}, Axes -> {False, False}, 
               AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
               BaseStyle -> {FontFamily -> "Arial", 
                 AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {All, All}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
               Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Numerical\"", ",", "\"Nominal\""}],
                     "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["360", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.71812475494843*^9},ExpressionUUID->"9beef726-a993-477f-878d-a8b40ae57cc3"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"months", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<January\>\"", ",", "\"\<February\>\"", ",", "\"\<March\>\"", ",", 
     "\"\<April\>\"", ",", "\"\<May\>\"", ",", "\"\<June\>\"", ",", 
     "\"\<July\>\"", ",", "\"\<August\>\"", ",", "\"\<September\>\"", ",", 
     "\"\<October\>\"", ",", "\"\<November\>\"", ",", "\"\<December\>\""}], 
    "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"distributions", "=", 
   RowBox[{"MapIndexed", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"First", "[", "#2", "]"}], ",", 
        RowBox[{"p", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<Lincoln\>\"", ",", "2020", ",", "#1"}], "}"}], ",", 
          "\"\<Distribution\>\""}], "]"}]}], "}"}], "&"}], ",", "months"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.718124777009226*^9, 
  3.7181247770404787`*^9}},ExpressionUUID->"1256c62b-9ed1-4696-94d1-\
fb681be9fd3f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}], "\n", 
 RowBox[{"ErrorListPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#1", ",", 
         RowBox[{"Mean", "[", "#2", "]"}]}], "}"}], ",", 
       RowBox[{"ErrorBar", "[", 
        RowBox[{"StandardDeviation", "[", "#2", "]"}], "]"}]}], "}"}], "&"}], 
    "@@@", "distributions"}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", "12", "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Rotate", "[", 
              RowBox[{
               RowBox[{"StringTake", "[", 
                RowBox[{"#", ",", "3"}], "]"}], ",", 
               RowBox[{"Pi", "/", "3"}]}], "]"}], "&"}], "/@", "months"}]}], 
          "}"}], "]"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{".5", ",", "12.5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "100"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", "\"\<Temperature (\[Degree]F)\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "14"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7181248001164494`*^9, 
  3.7181248001537795`*^9}},ExpressionUUID->"b3552904-4888-4b1d-aa09-\
f2ccf90ab098"],

Cell[BoxData[
 GraphicsBox[{{}, 
   GraphicsComplexBox[{{1., 35.316624344845565`}, {2., 37.84556339676432}, {
    3., 44.1581593335589}, {4., 52.01477332904421}, {5., 59.76411870150469}, {
    6., 67.35418642159497}, {7., 70.92980718908933}, {8., 
    70.24393811459721}, {9., 64.58470560895388}, {10., 56.46479590240764}, {
    11., 47.63626317103067}, {12., 39.45459274213677}}, {{{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
        12}], {{LineBox[{{1., 42.888540349742556`}, {1., 27.74470833994857}}],
          LineBox[{
          Offset[{1.5, 0}, {1., 42.888540349742556`}], 
           Offset[{-1.5, 0}, {1., 42.888540349742556`}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1., 27.74470833994857}], 
           Offset[{-1.5, 0}, {1., 27.74470833994857}]}]}, {
         LineBox[{{2., 45.41747940166131}, {2., 30.273647391867325`}}], 
         LineBox[{
          Offset[{1.5, 0}, {2., 45.41747940166131}], 
           Offset[{-1.5, 0}, {2., 45.41747940166131}]}], 
         LineBox[{
          Offset[{1.5, 0}, {2., 30.273647391867325`}], 
           Offset[{-1.5, 0}, {2., 30.273647391867325`}]}]}, {
         LineBox[{{3., 51.73007533845589}, {3., 36.58624332866191}}], 
         LineBox[{
          Offset[{1.5, 0}, {3., 51.73007533845589}], 
           Offset[{-1.5, 0}, {3., 51.73007533845589}]}], 
         LineBox[{
          Offset[{1.5, 0}, {3., 36.58624332866191}], 
           Offset[{-1.5, 0}, {3., 36.58624332866191}]}]}, {
         LineBox[{{4., 59.58668933394121}, {4., 44.44285732414721}}], 
         LineBox[{
          Offset[{1.5, 0}, {4., 59.58668933394121}], 
           Offset[{-1.5, 0}, {4., 59.58668933394121}]}], 
         LineBox[{
          Offset[{1.5, 0}, {4., 44.44285732414721}], 
           Offset[{-1.5, 0}, {4., 44.44285732414721}]}]}, {
         LineBox[{{5., 67.33603470640169}, {5., 52.192202696607694`}}], 
         LineBox[{
          Offset[{1.5, 0}, {5., 67.33603470640169}], 
           Offset[{-1.5, 0}, {5., 67.33603470640169}]}], 
         LineBox[{
          Offset[{1.5, 0}, {5., 52.192202696607694`}], 
           Offset[{-1.5, 0}, {5., 52.192202696607694`}]}]}, {
         LineBox[{{6., 74.92610242649197}, {6., 59.78227041669798}}], 
         LineBox[{
          Offset[{1.5, 0}, {6., 74.92610242649197}], 
           Offset[{-1.5, 0}, {6., 74.92610242649197}]}], 
         LineBox[{
          Offset[{1.5, 0}, {6., 59.78227041669798}], 
           Offset[{-1.5, 0}, {6., 59.78227041669798}]}]}, {
         LineBox[{{7., 78.50172319398632}, {7., 63.35789118419234}}], 
         LineBox[{
          Offset[{1.5, 0}, {7., 78.50172319398632}], 
           Offset[{-1.5, 0}, {7., 78.50172319398632}]}], 
         LineBox[{
          Offset[{1.5, 0}, {7., 63.35789118419234}], 
           Offset[{-1.5, 0}, {7., 63.35789118419234}]}]}, {
         LineBox[{{8., 77.8158541194942}, {8., 62.67202210970022}}], 
         LineBox[{
          Offset[{1.5, 0}, {8., 77.8158541194942}], 
           Offset[{-1.5, 0}, {8., 77.8158541194942}]}], 
         LineBox[{
          Offset[{1.5, 0}, {8., 62.67202210970022}], 
           Offset[{-1.5, 0}, {8., 62.67202210970022}]}]}, {
         LineBox[{{9., 72.15662161385087}, {9., 57.01278960405689}}], 
         LineBox[{
          Offset[{1.5, 0}, {9., 72.15662161385087}], 
           Offset[{-1.5, 0}, {9., 72.15662161385087}]}], 
         LineBox[{
          Offset[{1.5, 0}, {9., 57.01278960405689}], 
           Offset[{-1.5, 0}, {9., 57.01278960405689}]}]}, {
         LineBox[{{10., 64.03671190730464}, {10., 48.89287989751064}}], 
         LineBox[{
          Offset[{1.5, 0}, {10., 64.03671190730464}], 
           Offset[{-1.5, 0}, {10., 64.03671190730464}]}], 
         LineBox[{
          Offset[{1.5, 0}, {10., 48.89287989751064}], 
           Offset[{-1.5, 0}, {10., 48.89287989751064}]}]}, {
         LineBox[{{11., 55.20817917592767}, {11., 40.06434716613367}}], 
         LineBox[{
          Offset[{1.5, 0}, {11., 55.20817917592767}], 
           Offset[{-1.5, 0}, {11., 55.20817917592767}]}], 
         LineBox[{
          Offset[{1.5, 0}, {11., 40.06434716613367}], 
           Offset[{-1.5, 0}, {11., 40.06434716613367}]}]}, {
         LineBox[{{12., 47.02650874703376}, {12., 31.882676737239773`}}], 
         LineBox[{
          Offset[{1.5, 0}, {12., 47.02650874703376}], 
           Offset[{-1.5, 0}, {12., 47.02650874703376}]}], 
         LineBox[{
          Offset[{1.5, 0}, {12., 31.882676737239773`}], 
           Offset[{-1.5, 0}, {12., 31.882676737239773`}]}]}}}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
       AbsoluteThickness[1.6], {InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->8.96], 1], {
         LineBox[{{1., 42.888540349742556`}, {1., 27.74470833994857}}], 
         LineBox[{
          Offset[{1.5, 0}, {1., 42.888540349742556`}], 
           Offset[{-1.5, 0}, {1., 42.888540349742556`}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1., 27.74470833994857}], 
           Offset[{-1.5, 0}, {1., 27.74470833994857}]}]}}, {InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->8.96], 2], {
         LineBox[{{2., 45.41747940166131}, {2., 30.273647391867325`}}], 
         LineBox[{
          Offset[{1.5, 0}, {2., 45.41747940166131}], 
           Offset[{-1.5, 0}, {2., 45.41747940166131}]}], 
         LineBox[{
          Offset[{1.5, 0}, {2., 30.273647391867325`}], 
           Offset[{-1.5, 0}, {2., 30.273647391867325`}]}]}}, {InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->8.96], 3], {
         LineBox[{{3., 51.73007533845589}, {3., 36.58624332866191}}], 
         LineBox[{
          Offset[{1.5, 0}, {3., 51.73007533845589}], 
           Offset[{-1.5, 0}, {3., 51.73007533845589}]}], 
         LineBox[{
          Offset[{1.5, 0}, {3., 36.58624332866191}], 
           Offset[{-1.5, 0}, {3., 36.58624332866191}]}]}}, {InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->8.96], 4], {
         LineBox[{{4., 59.58668933394121}, {4., 44.44285732414721}}], 
         LineBox[{
          Offset[{1.5, 0}, {4., 59.58668933394121}], 
           Offset[{-1.5, 0}, {4., 59.58668933394121}]}], 
         LineBox[{
          Offset[{1.5, 0}, {4., 44.44285732414721}], 
           Offset[{-1.5, 0}, {4., 44.44285732414721}]}]}}, {InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->8.96], 5], {
         LineBox[{{5., 67.33603470640169}, {5., 52.192202696607694`}}], 
         LineBox[{
          Offset[{1.5, 0}, {5., 67.33603470640169}], 
           Offset[{-1.5, 0}, {5., 67.33603470640169}]}], 
         LineBox[{
          Offset[{1.5, 0}, {5., 52.192202696607694`}], 
           Offset[{-1.5, 0}, {5., 52.192202696607694`}]}]}}, {InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->8.96], 6], {
         LineBox[{{6., 74.92610242649197}, {6., 59.78227041669798}}], 
         LineBox[{
          Offset[{1.5, 0}, {6., 74.92610242649197}], 
           Offset[{-1.5, 0}, {6., 74.92610242649197}]}], 
         LineBox[{
          Offset[{1.5, 0}, {6., 59.78227041669798}], 
           Offset[{-1.5, 0}, {6., 59.78227041669798}]}]}}, {InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->8.96], 7], {
         LineBox[{{7., 78.50172319398632}, {7., 63.35789118419234}}], 
         LineBox[{
          Offset[{1.5, 0}, {7., 78.50172319398632}], 
           Offset[{-1.5, 0}, {7., 78.50172319398632}]}], 
         LineBox[{
          Offset[{1.5, 0}, {7., 63.35789118419234}], 
           Offset[{-1.5, 0}, {7., 63.35789118419234}]}]}}, {InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->8.96], 8], {
         LineBox[{{8., 77.8158541194942}, {8., 62.67202210970022}}], 
         LineBox[{
          Offset[{1.5, 0}, {8., 77.8158541194942}], 
           Offset[{-1.5, 0}, {8., 77.8158541194942}]}], 
         LineBox[{
          Offset[{1.5, 0}, {8., 62.67202210970022}], 
           Offset[{-1.5, 0}, {8., 62.67202210970022}]}]}}, {InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->8.96], 9], {
         LineBox[{{9., 72.15662161385087}, {9., 57.01278960405689}}], 
         LineBox[{
          Offset[{1.5, 0}, {9., 72.15662161385087}], 
           Offset[{-1.5, 0}, {9., 72.15662161385087}]}], 
         LineBox[{
          Offset[{1.5, 0}, {9., 57.01278960405689}], 
           Offset[{-1.5, 0}, {9., 57.01278960405689}]}]}}, {InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->8.96], 10], {
         LineBox[{{10., 64.03671190730464}, {10., 48.89287989751064}}], 
         LineBox[{
          Offset[{1.5, 0}, {10., 64.03671190730464}], 
           Offset[{-1.5, 0}, {10., 64.03671190730464}]}], 
         LineBox[{
          Offset[{1.5, 0}, {10., 48.89287989751064}], 
           Offset[{-1.5, 0}, {10., 48.89287989751064}]}]}}, {InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->8.96], 11], {
         LineBox[{{11., 55.20817917592767}, {11., 40.06434716613367}}], 
         LineBox[{
          Offset[{1.5, 0}, {11., 55.20817917592767}], 
           Offset[{-1.5, 0}, {11., 55.20817917592767}]}], 
         LineBox[{
          Offset[{1.5, 0}, {11., 40.06434716613367}], 
           Offset[{-1.5, 0}, {11., 40.06434716613367}]}]}}, {InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->8.96], 12], {
         LineBox[{{12., 47.02650874703376}, {12., 31.882676737239773`}}], 
         LineBox[{
          Offset[{1.5, 0}, {12., 47.02650874703376}], 
           Offset[{-1.5, 0}, {12., 47.02650874703376}]}], 
         LineBox[{
          Offset[{1.5, 0}, {12., 31.882676737239773`}], 
           Offset[{-1.5, 0}, {12., 
            31.882676737239773`}]}]}}}, {}}}], {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.56, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Temperature (\[Degree]F)\"", TraditionalForm], None}, {
    None, None}},
  FrameTicks->{{Automatic, None}, {{{1, 
       FormBox[
        RotationBox["\"Jan\"", BoxRotation -> 1.0471975511965976`], 
        TraditionalForm]}, {2, 
       FormBox[
        RotationBox["\"Feb\"", BoxRotation -> 1.0471975511965976`], 
        TraditionalForm]}, {3, 
       FormBox[
        RotationBox["\"Mar\"", BoxRotation -> 1.0471975511965976`], 
        TraditionalForm]}, {4, 
       FormBox[
        RotationBox["\"Apr\"", BoxRotation -> 1.0471975511965976`], 
        TraditionalForm]}, {5, 
       FormBox[
        RotationBox["\"May\"", BoxRotation -> 1.0471975511965976`], 
        TraditionalForm]}, {6, 
       FormBox[
        RotationBox["\"Jun\"", BoxRotation -> 1.0471975511965976`], 
        TraditionalForm]}, {7, 
       FormBox[
        RotationBox["\"Jul\"", BoxRotation -> 1.0471975511965976`], 
        TraditionalForm]}, {8, 
       FormBox[
        RotationBox["\"Aug\"", BoxRotation -> 1.0471975511965976`], 
        TraditionalForm]}, {9, 
       FormBox[
        RotationBox["\"Sep\"", BoxRotation -> 1.0471975511965976`], 
        TraditionalForm]}, {10, 
       FormBox[
        RotationBox["\"Oct\"", BoxRotation -> 1.0471975511965976`], 
        TraditionalForm]}, {11, 
       FormBox[
        RotationBox["\"Nov\"", BoxRotation -> 1.0471975511965976`], 
        TraditionalForm]}, {12, 
       FormBox[
        RotationBox["\"Dec\"", BoxRotation -> 1.0471975511965976`], 
        TraditionalForm]}}, None}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{220., Automatic},
  LabelStyle->14,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.5, 12.5}, {0, 100}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7181248112059903`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
Lj7qP12T/K/jsg/9H+yE9p4=\
\>"],ExpressionUUID->"6f2140b2-c029-431b-9001-3adf0707b7bd"]
}, Open  ]],

Cell[TextData[StyleBox["V. MNIST data of handwritten digits",
 FontColor->RGBColor[1, 0.5, 0]]], "Text",
 CellChangeTimes->{{3.7181248778485775`*^9, 
  3.7181249093508987`*^9}},ExpressionUUID->"2c5d3101-4811-45fe-ab74-\
bc5041232ff9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"digit", " ", "=", " ", 
  RowBox[{"Classify", "[", "\n", "  ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQgyT//6ln1Frx9z8cdDIBQcoPGPenF3dTOTtT3Fso/6FQ2P//HexM+TAF
U1+BNLGyTvmPDAwYpVH46xiF7qEIMDLNR+VLfEPmBqHq38/GMB2Je5yHKRiJ
+8mPSfUigvsxkEkPybDLpkwePxDcmwZMzreQ9AYySZ+AMN+tWrXqVDETU2aZ
qqqqiqqqPJOv80RuJghgdMxve/7z++84Jvnq6sdfvnz5BdEEANRq+sc=
         "], {{0, 20}, {16, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{16, 20},
       PlotRange->{{0, 16}, {0, 20}}], " ", "->", " ", "2"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU/0cCv69cyfZgknmGEDnbZsPMzMTMzHwVKvD3fAMXkMvMJCxh9Aoq9hKk
hMNp1upXCI1pzMwO/TeRDf8/g4lp5X9U0C/EbPQFVeggF7P8e1ShKwJM1ldR
hf6nMzMlTJ069RKS0EsmJkYmIGBoQhIDOk0+XJ6ZSeIMXOzvq1f7Pv7/+IqJ
ufE/OtDDIoZF3UEGpn0w9m0o7cYk/xHKrOcTF8/f+/PveXGmBJiyj+22QLc4
+TMzq19AGPT7qioodJmnwkUAW303kA==
         "], {{0, 20}, {20, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{20, 20},
       PlotRange->{{0, 20}, {0, 20}}], " ", "->", " ", "5"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 45, 1, 66, 255, 255, 255, 255, 
         255, 255, 255}, {255, 255, 255, 255, 112, 3, 2, 127, 255, 255, 255, 
         255, 255, 255, 255}, {255, 255, 255, 111, 4, 2, 70, 252, 255, 255, 
         154, 14, 14, 14, 100}, {255, 255, 214, 20, 2, 34, 148, 255, 255, 152,
          7, 2, 2, 67, 184}, {255, 255, 39, 2, 35, 214, 255, 255, 151, 9, 2, 
         154, 230, 245, 255}, {255, 217, 18, 2, 133, 255, 255, 255, 66, 2, 18,
          201, 255, 255, 255}, {255, 107, 2, 80, 249, 255, 255, 155, 11, 2, 
         158, 255, 255, 255, 255}, {220, 14, 2, 93, 255, 190, 139, 12, 2, 29, 
         217, 255, 255, 255, 255}, {143, 2, 2, 67, 72, 11, 2, 2, 2, 2, 37, 
         188, 255, 255, 255}, {143, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 40, 151, 
         255, 255}, {143, 2, 2, 2, 52, 61, 14, 2, 46, 49, 2, 2, 27, 232, 
         255}, {224, 184, 117, 184, 244, 255, 53, 2, 190, 240, 160, 19, 2, 
         131, 255}, {255, 255, 255, 255, 255, 255, 76, 2, 190, 255, 255, 85, 
         2, 28, 255}, {255, 255, 255, 255, 255, 255, 183, 2, 190, 255, 255, 
         172, 2, 10, 185}, {255, 255, 255, 255, 255, 255, 183, 2, 174, 255, 
         255, 220, 13, 2, 151}, {255, 255, 255, 255, 255, 255, 227, 37, 24, 
         130, 255, 255, 92, 2, 151}, {255, 255, 255, 255, 255, 255, 255, 141, 
         7, 23, 195, 245, 85, 2, 151}, {255, 255, 255, 255, 255, 255, 255, 
         255, 73, 2, 2, 58, 2, 2, 151}, {255, 255, 255, 255, 255, 255, 255, 
         255, 228, 111, 2, 2, 2, 2, 151}, {255, 255, 255, 255, 255, 255, 255, 
         255, 255, 229, 109, 2, 2, 83, 204}}, {{0, 20}, {15, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{15, 20},
       PlotRange->{{0, 15}, {0, 20}}], " ", "->", " ", "8"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwLxfyg4NdWR1xjG+X9muSUbAyMjZ+9rCH8+F6Nc+qzjDeGM5SDu39WM
rPmfQazfGQKngFQXI+NMmF7FoP//bzEy7oUbttX8//9iRlE4//82yVePhVkm
IwS+yPaeYBT5jwTcLU8whiILCKudYFyBLCCkeoKxFIm/m9nyAnsSksA2xob/
qsiGrmdc/l+V9ylCIEbzy/+djIpw/hGFwP///2Qwpj+H8NeogT33SJJRrPj4
rVvLJnPyHQFLvO6TYmEEAfNDcM1bYmwYzTrfg5gAPlYFyw==
         "], {{0, 20}, {17, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{17, 20},
       PlotRange->{{0, 17}, {0, 20}}], " ", "->", " ", "0"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwLxfzC4nZAgKMvGnDAHwj3pqSBbWbf/bJWoyHUQv1k49xZE5o2JPJA8
yjjh338o2MQKJL5t+QLj/7/B+h8VTFJD5e/kPYfCPy0fhcI/qBv0A5k/R2zp
LyTutwrJpcjSzzSVjiFxvy7gTXyExL8VJHLqDxJ/naXKBSTux3YBj5dI/H/h
zF0orjnB2ABlPX369P+X3We3cbLLQoCQkJCsBCPH/4vJxm6JQJBe3wok2w8C
AJoHGZQ=
         "], {{0, 20}, {17, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{17, 20},
       PlotRange->{{0, 17}, {0, 20}}], " ", "->", " ", "2"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 252, 118, 33, 0, 1, 1, 1, 1, 1, 24, 155, 255}, {
         255, 165, 37, 22, 46, 60, 64, 137, 152, 120, 64, 25, 23, 212}, {174, 
         11, 85, 209, 247, 253, 255, 255, 255, 255, 255, 178, 1, 130}, {55, 
         80, 255, 255, 255, 255, 255, 255, 255, 255, 255, 175, 1, 206}, {178, 
         244, 255, 255, 255, 255, 255, 255, 255, 255, 255, 99, 1, 220}, {255, 
         255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 99, 1, 220}, {255, 
         255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 99, 38, 244}, {255,
          255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 42, 55, 255}, {
         255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 208, 5, 55, 255}, {
         255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 174, 1, 133, 
         255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 174, 1, 144,
          255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 168, 1, 
         213, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 86, 1, 
         233, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 86, 1, 
         233, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 252, 34, 1, 
         233, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 78, 1, 
         233, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 251, 13, 36,
          244, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 209, 1, 68,
          255, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 161, 1, 
         135, 255, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 161, 1,
          220, 255, 255}}, {{0, 20}, {14, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{14, 20},
       PlotRange->{{0, 14}, {0, 20}}], " ", "->", " ", "7"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 252, 150, 123, 123, 123, 65, 0, 2, 2, 25, 123, 
         156, 252}, {255, 255, 126, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 150}, {
         255, 255, 74, 3, 3, 3, 3, 20, 38, 39, 39, 39, 39, 39, 214}, {255, 
         255, 74, 3, 3, 3, 99, 211, 255, 255, 255, 255, 255, 255, 255}, {255, 
         220, 23, 3, 23, 63, 237, 255, 255, 255, 255, 255, 255, 255, 255}, {
         255, 206, 3, 3, 88, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
         255}, {255, 166, 3, 3, 88, 255, 255, 255, 255, 255, 255, 255, 255, 
         255, 255}, {255, 86, 3, 3, 191, 255, 255, 255, 255, 255, 255, 255, 
         255, 255, 255}, {239, 50, 3, 3, 207, 255, 255, 255, 255, 255, 255, 
         255, 255, 255, 255}, {218, 3, 3, 3, 52, 134, 134, 134, 133, 145, 255,
          255, 255, 255, 255}, {255, 91, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 88, 
         223, 255}, {255, 211, 27, 9, 3, 3, 3, 3, 2, 3, 3, 3, 3, 184, 255}, {
         255, 255, 255, 181, 159, 159, 159, 159, 153, 39, 34, 3, 3, 30, 
         225}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 243, 59, 3, 
         3, 207}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 200, 26, 
         3, 3, 207}, {255, 255, 255, 164, 103, 244, 255, 255, 255, 248, 71, 3,
          3, 3, 207}, {255, 255, 255, 62, 3, 179, 255, 214, 164, 46, 3, 3, 3, 
         102, 246}, {255, 255, 255, 62, 3, 16, 38, 21, 2, 3, 3, 3, 26, 218, 
         255}, {255, 255, 255, 62, 3, 3, 3, 3, 2, 3, 3, 99, 237, 255, 255}, {
         255, 255, 255, 246, 106, 3, 3, 3, 2, 14, 198, 251, 255, 255, 
         255}}, {{0, 20}, {15, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{15, 20},
       PlotRange->{{0, 15}, {0, 20}}], " ", "->", " ", "5"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 219, 87, 139, 253}, {255, 255, 255, 
         255, 119, 1, 1, 212}, {255, 255, 255, 255, 62, 1, 46, 236}, {255, 
         255, 255, 218, 26, 1, 94, 255}, {255, 255, 255, 177, 1, 1, 206, 
         255}, {255, 255, 255, 68, 1, 1, 206, 255}, {255, 255, 255, 68, 1, 1, 
         206, 255}, {255, 255, 255, 68, 1, 15, 215, 255}, {255, 255, 255, 68, 
         1, 103, 255, 255}, {255, 255, 213, 18, 1, 138, 255, 255}, {255, 255, 
         165, 1, 1, 200, 255, 255}, {255, 255, 74, 1, 1, 200, 255, 255}, {255,
          239, 51, 1, 56, 244, 255, 255}, {255, 205, 1, 1, 69, 255, 255, 
         255}, {255, 205, 1, 1, 69, 255, 255, 255}, {255, 155, 1, 1, 118, 255,
          255, 255}, {255, 80, 0, 0, 193, 255, 255, 255}, {235, 45, 1, 1, 193,
          255, 255, 255}, {211, 1, 1, 60, 252, 255, 255, 255}, {232, 40, 89, 
         218, 255, 255, 255, 255}}, {{0, 20}, {8, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{8, 20},
       PlotRange->{{0, 8}, {0, 20}}], " ", "->", " ", "1"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQgyT/f5a2/vwfCXwQYmz9fuKEsYhjXl77b6DAUUYuRSYmRnERIJH98//f
bkY2xfz8ky+enDypzzTlfzYT40yY3qlMDf83eO2FcY8wqF5EMnkZL2M9Encp
F3/VHzjvcyqX4CGE5F5pJttrcN6XfmmGyk9w7g45Jibp3MVQ3kVVViZWdT4m
9gsQ/iqRzDln/2/jYDqJZNk9oHnvEdyb0gzxEPOuTTnRPiVPnin+I0SmHuhL
JibWdphty8B8J4RTNsTGaMYijAIAQDnsvw==
         "], {{0, 20}, {16, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{16, 20},
       PlotRange->{{0, 16}, {0, 20}}], " ", "->", " ", "3"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 229, 134, 121, 2, 2, 0, 58, 242, 255, 255, 255, 
         255}, {255, 226, 47, 3, 3, 3, 3, 2, 3, 14, 218, 255, 255, 255}, {133,
          22, 3, 3, 3, 3, 3, 96, 57, 3, 67, 235, 255, 255}, {42, 3, 3, 3, 68, 
         216, 145, 255, 182, 54, 3, 69, 234, 255}, {63, 52, 3, 3, 162, 255, 
         255, 255, 255, 186, 13, 3, 189, 255}, {220, 188, 3, 33, 231, 255, 
         255, 255, 255, 255, 70, 3, 91, 255}, {255, 188, 3, 43, 255, 255, 255,
          255, 255, 255, 187, 11, 48, 242}, {255, 174, 3, 43, 255, 255, 255, 
         255, 255, 255, 255, 55, 3, 176}, {255, 55, 3, 43, 255, 255, 255, 255,
          255, 255, 255, 55, 3, 176}, {255, 55, 3, 43, 255, 255, 255, 255, 
         255, 255, 255, 55, 3, 176}, {255, 54, 2, 42, 255, 255, 255, 255, 255,
          255, 255, 54, 2, 175}, {255, 55, 3, 43, 255, 255, 255, 255, 255, 
         255, 255, 55, 3, 120}, {255, 55, 3, 43, 255, 255, 255, 255, 255, 255,
          255, 55, 3, 162}, {255, 98, 3, 9, 134, 255, 255, 255, 255, 255, 229,
          39, 3, 176}, {255, 188, 3, 3, 30, 255, 255, 255, 255, 255, 139, 3, 
         3, 176}, {255, 237, 52, 3, 24, 232, 255, 255, 255, 235, 34, 3, 14, 
         192}, {255, 255, 90, 3, 3, 128, 255, 255, 238, 136, 3, 3, 147, 
         255}, {255, 255, 235, 67, 3, 8, 95, 164, 56, 3, 3, 60, 231, 255}, {
         255, 255, 255, 217, 15, 3, 3, 2, 3, 3, 57, 233, 255, 255}, {255, 255,
          255, 255, 242, 59, 3, 2, 60, 136, 236, 255, 255, 255}}, {{0, 20}, {
         14, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{14, 20},
       PlotRange->{{0, 14}, {0, 20}}], " ", "->", " ", "0"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 246, 172, 89, 50, 1, 1, 0, 1, 76, 199, 255, 255, 
         255}, {178, 33, 1, 2, 41, 62, 127, 135, 75, 5, 71, 248, 255, 255}, {
         199, 135, 240, 240, 250, 255, 255, 255, 255, 130, 5, 227, 255, 
         255}, {255, 255, 255, 255, 255, 255, 255, 255, 226, 27, 60, 255, 255,
          255}, {255, 255, 255, 255, 255, 255, 188, 97, 24, 2, 100, 255, 255, 
         255}, {255, 255, 255, 255, 204, 19, 1, 0, 8, 29, 1, 67, 246, 255}, {
         255, 255, 255, 165, 17, 2, 2, 35, 186, 252, 162, 27, 123, 255}, {255,
          255, 255, 50, 3, 30, 157, 246, 255, 255, 255, 131, 12, 226}, {255, 
         255, 255, 166, 173, 255, 255, 255, 255, 255, 255, 215, 1, 153}, {255,
          255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 45, 92}, {
         255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 75, 
         37}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 76,
          2}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 76,
          2}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 76,
          2}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 54,
          77}, {129, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 149, 0,
          188}, {23, 239, 255, 255, 255, 255, 255, 255, 255, 255, 178, 20, 83,
          247}, {89, 37, 217, 247, 255, 255, 255, 244, 200, 113, 10, 55, 228, 
         255}, {231, 42, 1, 33, 61, 61, 61, 19, 2, 18, 95, 230, 255, 255}, {
         255, 246, 172, 112, 55, 77, 55, 85, 151, 231, 255, 255, 255, 
         255}}, {{0, 20}, {14, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{14, 20},
       PlotRange->{{0, 14}, {0, 20}}], " ", "->", " ", "3"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 232, 127, 0, 2, 136, 255, 255, 255, 255, 
         255, 255}, {255, 255, 242, 46, 3, 2, 3, 68, 223, 255, 255, 255, 255, 
         255}, {255, 195, 46, 3, 3, 2, 3, 3, 116, 255, 255, 255, 255, 255}, {
         255, 14, 3, 3, 3, 115, 40, 3, 15, 255, 255, 255, 255, 255}, {141, 0, 
         2, 11, 180, 251, 76, 11, 68, 255, 255, 255, 255, 255}, {142, 2, 3, 
         162, 255, 226, 116, 149, 217, 255, 217, 86, 161, 255}, {55, 2, 85, 
         242, 217, 173, 236, 255, 179, 157, 46, 3, 78, 255}, {30, 2, 46, 55, 
         18, 17, 117, 30, 6, 2, 3, 3, 3, 204}, {92, 1, 2, 2, 2, 1, 2, 2, 2, 1,
          2, 2, 14, 255}, {217, 109, 21, 3, 28, 52, 3, 47, 84, 2, 3, 3, 140, 
         255}, {255, 255, 217, 199, 224, 248, 199, 242, 142, 2, 3, 3, 227, 
         255}, {255, 255, 255, 255, 255, 255, 255, 255, 92, 2, 3, 128, 252, 
         255}, {255, 255, 255, 255, 255, 255, 255, 195, 14, 1, 8, 205, 255, 
         255}, {255, 255, 255, 255, 255, 255, 255, 58, 3, 2, 84, 255, 255, 
         255}, {255, 255, 255, 255, 255, 255, 255, 58, 3, 24, 236, 255, 255, 
         255}, {255, 255, 255, 255, 255, 255, 255, 58, 3, 30, 255, 255, 255, 
         255}, {255, 255, 255, 255, 255, 255, 255, 57, 2, 141, 255, 255, 255, 
         255}, {255, 255, 255, 255, 255, 255, 217, 21, 3, 142, 255, 255, 255, 
         255}, {255, 255, 255, 255, 255, 255, 242, 46, 3, 142, 255, 255, 255, 
         255}, {255, 255, 255, 255, 255, 255, 255, 58, 3, 192, 255, 255, 255, 
         255}}, {{0, 20}, {14, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{14, 20},
       PlotRange->{{0, 14}, {0, 20}}], " ", "->", " ", "9"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 255, 255, 246, 129, 5, 105, 255, 
         255}, {255, 255, 255, 255, 255, 255, 255, 112, 2, 2, 134, 255, 
         255}, {255, 255, 255, 255, 255, 255, 227, 15, 2, 64, 240, 255, 
         255}, {255, 255, 255, 255, 255, 255, 153, 2, 2, 134, 255, 255, 
         255}, {255, 255, 255, 255, 255, 182, 1, 2, 2, 158, 255, 255, 255}, {
         255, 255, 255, 255, 255, 106, 1, 2, 119, 252, 255, 255, 255}, {255, 
         255, 255, 255, 178, 4, 1, 5, 213, 255, 255, 255, 255}, {255, 255, 
         255, 247, 56, 2, 6, 148, 255, 255, 255, 255, 255}, {255, 255, 251, 
         99, 2, 2, 34, 255, 255, 255, 255, 255, 255}, {255, 255, 195, 2, 2, 2,
          178, 255, 255, 255, 255, 255, 255}, {255, 204, 10, 1, 1, 112, 250, 
         192, 111, 111, 135, 247, 255}, {255, 137, 2, 2, 2, 189, 116, 2, 2, 2,
          2, 100, 249}, {209, 11, 2, 2, 35, 53, 1, 2, 2, 2, 2, 2, 233}, {94, 
         2, 2, 2, 2, 2, 0, 2, 64, 65, 2, 2, 233}, {89, 2, 2, 2, 2, 2, 46, 167,
          240, 98, 2, 2, 233}, {59, 2, 2, 2, 2, 40, 231, 255, 220, 8, 2, 33, 
         241}, {2, 2, 2, 2, 39, 229, 248, 214, 33, 2, 4, 145, 255}, {17, 2, 2,
          2, 32, 100, 44, 2, 2, 5, 139, 255, 255}, {89, 2, 2, 2, 2, 2, 1, 2, 
         2, 139, 255, 255, 255}, {233, 135, 11, 2, 2, 2, 15, 112, 203, 253, 
         255, 255, 255}}, {{0, 20}, {13, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{13, 20},
       PlotRange->{{0, 13}, {0, 20}}], " ", "->", " ", "6"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU/weD122WjPY7/6OAuUxMTIwOX5BEntlxgcSYchFCT62YmLgi0xmZEhBi
XUxMShf+P0YWm8vD5Hb8/58mRqYauJg0E9Pe///vMDEKv4SLVbExrXzxJ5GJ
EcmK/0uLOOQSmZjYd6M4b/81oFsqUZ38P4CRkRFNyJeNickTVWgCB1Ark5T0
5IWvYUK7QD4D+Y2JSVFzIkSVGhNcDOhJMzOzp14gjTZ79+7ds9fVgpeJicOi
vhAowtP7DGrMgfXrd/z/zwBUPh/NGRxMfIvQhP4fa/+ELvQfADqYF6c=
         "], {{0, 20}, {20, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{20, 20},
       PlotRange->{{0, 20}, {0, 20}}], " ", "->", " ", "2"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 255, 255, 244, 163, 41, 2, 173, 
         255, 255}, {255, 255, 255, 255, 255, 255, 173, 82, 3, 2, 3, 12, 215, 
         255}, {255, 255, 255, 255, 234, 123, 2, 1, 2, 1, 2, 1, 104, 255}, {
         255, 255, 255, 234, 52, 2, 3, 2, 125, 104, 23, 2, 104, 255}, {255, 
         255, 234, 123, 2, 1, 42, 214, 255, 224, 22, 1, 164, 255}, {255, 255, 
         153, 2, 3, 83, 245, 255, 255, 204, 3, 22, 225, 255}, {255, 255, 52, 
         1, 22, 255, 255, 255, 255, 255, 214, 21, 103, 173}, {255, 255, 52, 2,
          63, 255, 255, 255, 255, 234, 72, 2, 3, 52}, {255, 255, 72, 1, 2, 
         163, 224, 183, 103, 1, 2, 31, 133, 173}, {255, 255, 153, 2, 3, 2, 23,
          2, 3, 22, 104, 235, 255, 255}, {255, 255, 255, 41, 2, 1, 2, 1, 83, 
         214, 255, 255, 255, 255}, {255, 255, 173, 2, 3, 2, 3, 42, 245, 255, 
         255, 255, 255, 255}, {255, 204, 22, 1, 2, 1, 2, 1, 184, 255, 255, 
         255, 255, 255}, {255, 22, 3, 2, 125, 124, 3, 2, 104, 255, 255, 255, 
         255, 255}, {153, 1, 2, 72, 255, 255, 52, 1, 2, 234, 255, 255, 255, 
         255}, {113, 2, 3, 72, 255, 255, 52, 2, 3, 153, 255, 255, 255, 255}, {
         113, 0, 2, 92, 255, 203, 22, 1, 2, 255, 255, 255, 255, 255}, {235, 2,
          3, 12, 52, 22, 3, 2, 84, 255, 255, 255, 255, 255}, {255, 173, 32, 1,
          2, 1, 2, 52, 194, 255, 255, 255, 255, 255}, {255, 255, 235, 104, 23,
          2, 125, 235, 255, 255, 255, 255, 255, 255}}, {{0, 20}, {14, 0}}, {0,
          255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{14, 20},
       PlotRange->{{0, 14}, {0, 20}}], " ", "->", " ", "8"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU////v7sphIEhc9F/JBDGBAaqD1GFtAr9mZha4UKnWZl073/+/9OQqRgu
tolF9xmQamVn2ofQ++AtiNRjQhYDgy4OJsuvqEKbOZgkDqApq2diykcT8udk
SviMKvRMlEnsDpoySyamIjShjexMTmg635hjKqtkYgpCU/afnYnp2X9MsSuv
geDX/1+vX9/KzMzM+QoSA4Pwgkgoq+V/IBMCsHFwhHV1Hfv/v7OlpQWkJKWl
5RrEOABHySpQ
         "], {{0, 20}, {20, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{20, 20},
       PlotRange->{{0, 20}, {0, 20}}], " ", "->", " ", "2"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxfxh4sz/TkJHB/SVc4JoKExh0wQTexgB5bNJMTHwfoSIFQAH5yRuA
5CIw/1MsKxNT+I3/N/hgIvZMTALFf4EMaajIDqCKXLAUVOStDBOT939kkW6g
odfBAn+lmLg+/P9/mpOJaTlEyWwmJkUgFcnEZP4WLHBKl4mp5P//+cxMTPch
SmyYmHiBzGImJsvvYIE8VibODWAJ1q1ggcmsTNztQPoRB5MMiP++A6i7AMRa
yAQWOZDBxMQZ/R0ucriCn4lJYwPEfKAIqyob0M9G76DBcIcdHFBS1W/ggTdT
lokpdu0TOP8/ADHi5B0=
         "], {{0, 20}, {18, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{18, 20},
       PlotRange->{{0, 18}, {0, 20}}], " ", "->", " ", "0"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQgyRfa8rd/48EbjExHUbjb0Ljz0bj56LxveGc4x+R+ceCeTUeAfmVEO59
XiYmprW5cPuWMTGZMSUnwfifTZhsNjMlJzIyQvgPGBm3WDLehsvnMcnNYDL+
gMQXkWVa+B+Jz8Rk/B6FL7D+P4i/AMT97c/ENAtIH4a4b60eUPl2iPt52uca
MDNahjJ1gNQ1MoGA2dqvr6LYTwAF/syJ0Kp++RPE+vLn/38AlgPa0g==
         "], {{0, 20}, {16, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{16, 20},
       PlotRange->{{0, 16}, {0, 20}}], " ", "->", " ", "6"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwLxfzg4xOD68T8S2CTJxLQdib9CholJ+B6C/1uaiYkpD8H/kcjExMP0
AiGwiIlJ7vzGX3D+Rx4m1hn//39YYnQRIjCRianq/5c57ExMks9B/P1sTKbv
/9QwgUALkP/Tnonv3v82MJ/JBKJh0v81PExMfOvsQAIfRZgE/77SZuLw//pJ
AqQllokp4b8zE5P//y9eTKbf/v93YWK6dYSFyezjfVemyC///z8RYWKaagF0
mB0T98zvQCPfKEGMZxKrewx2w48F7GC+RS/U1X//rwwDCjUe+YEUGCdBSlYh
CXwNYHLa8w/CBgByed3X
         "], {{0, 20}, {17, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{17, 20},
       PlotRange->{{0, 17}, {0, 20}}], " ", "->", " ", "6"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 157, 22, 154}, {255, 255, 255, 255, 1,
          2, 39}, {255, 255, 255, 223, 0, 67, 205}, {255, 255, 221, 36, 1, 
         163, 255}, {255, 255, 162, 2, 1, 163, 255}, {255, 255, 151, 1, 23, 
         255, 255}, {255, 255, 47, 2, 98, 255, 255}, {255, 255, 47, 2, 139, 
         255, 255}, {255, 255, 47, 2, 234, 255, 255}, {255, 191, 6, 2, 255, 
         255, 255}, {255, 69, 1, 1, 255, 255, 255}, {255, 70, 2, 76, 255, 255,
          255}, {242, 51, 2, 118, 255, 255, 255}, {208, 2, 2, 212, 255, 255, 
         255}, {103, 2, 2, 232, 255, 255, 255}, {92, 1, 94, 255, 255, 255, 
         255}, {93, 2, 94, 255, 255, 255, 255}, {93, 2, 94, 255, 255, 255, 
         255}, {187, 2, 94, 255, 255, 255, 255}, {229, 33, 146, 255, 255, 255,
          255}}, {{0, 20}, {7, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{7, 20},
       PlotRange->{{0, 7}, {0, 20}}], " ", "->", " ", "1"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{38, 78, 255, 255, 255, 255, 255, 255}, {39, 2, 143, 255, 
         255, 255, 255, 255}, {39, 1, 41, 229, 255, 255, 255, 255}, {39, 1, 1,
          142, 255, 255, 255, 255}, {189, 18, 1, 41, 230, 255, 255, 255}, {
         255, 159, 1, 1, 190, 255, 255, 255}, {255, 176, 1, 1, 146, 255, 255, 
         255}, {255, 176, 1, 1, 60, 255, 255, 255}, {255, 198, 15, 1, 60, 255,
          255, 255}, {255, 255, 52, 0, 14, 200, 255, 255}, {255, 255, 149, 1, 
         1, 153, 255, 255}, {255, 255, 197, 12, 1, 53, 255, 255}, {255, 255, 
         255, 58, 1, 53, 255, 255}, {255, 255, 255, 58, 1, 18, 203, 255}, {
         255, 255, 255, 58, 1, 1, 160, 255}, {255, 255, 255, 72, 1, 1, 18, 
         202}, {255, 255, 255, 228, 39, 1, 0, 160}, {255, 255, 255, 255, 72, 
         1, 1, 40}, {255, 255, 255, 255, 195, 1, 0, 43}, {255, 255, 255, 255, 
         195, 1, 92, 214}}, {{0, 20}, {8, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{8, 20},
       PlotRange->{{0, 8}, {0, 20}}], " ", "->", " ", "1"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 255, 223, 119, 34, 1, 52, 236}, {
         255, 255, 233, 141, 221, 179, 31, 2, 1, 2, 2, 103}, {255, 255, 64, 2,
          14, 23, 2, 53, 175, 96, 2, 95}, {255, 238, 31, 2, 1, 2, 53, 236, 
         255, 117, 2, 95}, {255, 149, 1, 1, 0, 131, 255, 255, 210, 10, 8, 
         205}, {242, 29, 2, 2, 131, 253, 255, 255, 185, 2, 25, 255}, {102, 2, 
         4, 127, 255, 255, 255, 255, 143, 2, 34, 255}, {1, 2, 127, 255, 255, 
         255, 255, 255, 26, 2, 151, 255}, {104, 121, 238, 255, 255, 255, 255, 
         162, 1, 14, 221, 255}, {255, 255, 255, 255, 255, 255, 255, 113, 1, 
         49, 255, 255}, {255, 255, 255, 255, 255, 255, 252, 64, 1, 124, 255, 
         255}, {255, 255, 255, 255, 255, 255, 198, 2, 1, 207, 255, 255}, {255,
          255, 255, 255, 255, 255, 139, 1, 45, 246, 255, 255}, {255, 255, 255,
          255, 255, 255, 123, 2, 88, 255, 255, 255}, {255, 255, 255, 255, 255,
          250, 43, 2, 162, 255, 255, 255}, {255, 255, 255, 255, 255, 208, 2, 
         36, 230, 255, 255, 255}, {255, 255, 255, 255, 255, 149, 1, 94, 255, 
         255, 255, 255}, {255, 255, 255, 255, 255, 117, 2, 95, 255, 255, 255, 
         255}, {255, 255, 255, 255, 255, 117, 2, 95, 255, 255, 255, 255}, {
         255, 255, 255, 255, 255, 166, 27, 186, 255, 255, 255, 255}}, {{0, 
         20}, {12, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{12, 20},
       PlotRange->{{0, 12}, {0, 20}}], " ", "->", " ", "7"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU/4eC348e1RszMTEd+A8HZ+qZmZmZgLgPyFkGEnkTzAnk+009flyi782q
r5+AQp9smZn5eh7/ATIDNtsyPwYpK2LibjoDMeOTMZPEM7AYs8sPiNAbWybN
N/8hYsz7wIy1Gszc6yCyjzWY+UF6/XmYmbfAXNLOxMTg68vEwMRUD3ddjTXI
LUD3hX5DOPl/Gch9x49/Qog87ZMDij1GUvNpsTqTdCM3E5IY0E3M+i//hzHP
gAtdArqpEGhOGHMJXCyJ2RTsJiSxR0zq78G0OsK8l6LMvseAQJ1Z7CVc71pI
WDKJHURY++NxfXEUc0Y9QtV/ANbjHlo=
         "], {{0, 20}, {20, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{20, 20},
       PlotRange->{{0, 20}, {0, 20}}], " ", "->", " ", "8"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwLxfzB4dnf+/AIzJiaj3v//f+5J9/cXY2ZiBgPlt/+NICyIQFzl5/+8
YJaYhGRJ27mv/4DagQJBy5d//g8DG1iZmS/9RwLpQPWvkAWkgQITbyEJBICM
5Jt6GS7wiRtsi2DCWrjQtgndyspsDExMy5GN2lMizsw57QOy0GERZmbvb8gi
p4WYmZeBGLei9r0EixwXY2bfB6Q/6zKrdAGdfidXlJm5HCSzkIWZWVRcgh9k
PdthkMg8uPeZuU6CBP6sEocKsM2D2vC8vkCFmaew8Pr//wDnH9Oj
         "], {{0, 20}, {17, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{17, 20},
       PlotRange->{{0, 17}, {0, 20}}], " ", "->", " ", "5"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxfwj4yLj///98xtr/cFDExLYrVy2QxQQuksPEOO/F2x+20negAt+8
mBg/AWkXJkOoSBUTk8I3IL2WSewRRIk3E9NUEOMkE9MUsMhBJiZxMOOdBUTk
jjwTM0TqfyBTG4g6xMTE/x8mIgYkbysyMYXBRUCKTRkZpWHuCmAAitxRYGKa
AxWYzMZ78P8dDSamiK8QgWfaTLL//y9kYtL/BFUykUkF6AtzJiYLqMB+Xia/
//9fiDExzYIInHNmcnv1/389E5PBKxD/2lwuJlcQi4+JSaq6PS4ujoGJyfn1
f4gIBDDwt78Da+4Ngwh4tv2Emg8AlT70Eg==
         "], {{0, 20}, {18, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{18, 20},
       PlotRange->{{0, 18}, {0, 20}}], " ", "->", " ", "0"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQgyT/I4Ek4Rcgam3LPwi/kjEQRDkzroLwdzNqAsnfVoxnIfw73CD+C0bG
31ADxDhv/P+/DInPeO7//yBG67/IfFPGtf+R+K/E2e4i82czZvxH5mswJre2
7vwA4St9eyXOCALyrpO3fPolqvY7h5HRe8eOVH9WJkZxU0bGHmnGfIjevZ2B
CoyM0s9W/oUbt4NR8hmyfyH+QeazHUPlM5bi47/W5z8KAD608rc=
         "], {{0, 20}, {16, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{16, 20},
       PlotRange->{{0, 16}, {0, 20}}], " ", "->", " ", "4"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxfyB4GMEQ9R8C9n4AEt+KOMX8WCRXnXDT0hBltnv//38XI2PGvTJp
IXZGMDj4/7+5q1///68r6uvnz56rysh/////ZQ+nt0BNeVjEmA2kfrUL10BF
yhkFH/7/n6zFmAYVOMbOqPX//3Vu7m3/IAJ/7RgZZwH1vPsAVfH/j70D453/
yGA3I2PBLyT+7yl8jOafkQSeOjNyH/2LJHBZmZExEcUMA0YrrefIAtlB9/8g
G/p/o8E+kJ8R4EzRtqXVyAKvzRgdl99FFuli9Jh0GcUeO3sUWwD4cB2A
         "], {{0, 20}, {18, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{18, 20},
       PlotRange->{{0, 18}, {0, 20}}], " ", "->", " ", "7"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 175, 2, 
         174}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 85, 1, 
         143}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 69, 1, 
         113}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 99, 1, 10, 
         190}, {255, 255, 255, 255, 255, 255, 255, 255, 239, 40, 1, 138, 
         255}, {255, 255, 255, 255, 255, 255, 255, 253, 79, 1, 32, 195, 
         255}, {255, 255, 255, 255, 255, 255, 255, 193, 1, 1, 142, 255, 
         255}, {255, 255, 255, 255, 255, 255, 242, 33, 1, 5, 253, 255, 255}, {
         255, 255, 255, 255, 255, 255, 106, 1, 1, 109, 255, 255, 255}, {255, 
         255, 255, 255, 255, 172, 4, 1, 73, 221, 255, 255, 255}, {255, 255, 
         255, 255, 198, 9, 6, 75, 224, 255, 255, 255, 255}, {255, 255, 255, 
         218, 3, 1, 90, 255, 255, 255, 255, 255, 255}, {255, 255, 250, 76, 1, 
         24, 235, 255, 255, 251, 218, 251, 255}, {255, 247, 76, 1, 52, 213, 
         255, 255, 249, 49, 1, 23, 212}, {255, 232, 1, 77, 250, 255, 255, 255,
          95, 3, 98, 3, 143}, {255, 181, 9, 248, 255, 255, 245, 85, 5, 137, 
         236, 202, 245}, {255, 66, 6, 226, 255, 196, 40, 1, 1, 104, 151, 255, 
         255}, {225, 11, 5, 138, 113, 4, 1, 1, 1, 73, 255, 255, 255}, {220, 
         40, 1, 1, 5, 5, 12, 14, 27, 237, 255, 255, 255}, {255, 174, 1, 62, 
         204, 206, 245, 255, 255, 255, 255, 255, 255}}, {{0, 20}, {13, 0}}, {
         0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{13, 20},
       PlotRange->{{0, 13}, {0, 20}}], " ", "->", " ", "6"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 160, 1, 57, 88, 189, 255, 255, 255}, {
         255, 255, 255, 250, 52, 1, 0, 1, 90, 246, 255, 255}, {255, 255, 255, 
         237, 1, 23, 180, 6, 238, 255, 255, 255}, {255, 255, 255, 140, 3, 184,
          255, 205, 90, 255, 255, 255}, {255, 255, 232, 10, 56, 255, 255, 255,
          42, 217, 255, 255}, {255, 255, 143, 10, 204, 255, 255, 255, 148, 92,
          250, 255}, {255, 239, 30, 19, 255, 255, 255, 255, 221, 13, 220, 
         255}, {255, 183, 1, 92, 255, 255, 255, 255, 255, 33, 184, 255}, {255,
          131, 2, 196, 255, 255, 255, 255, 255, 118, 68, 253}, {255, 72, 28, 
         255, 255, 255, 255, 255, 255, 220, 13, 211}, {226, 15, 54, 255, 255, 
         255, 255, 255, 255, 255, 35, 211}, {211, 1, 116, 255, 255, 255, 255, 
         255, 255, 255, 36, 211}, {211, 1, 116, 255, 255, 255, 255, 255, 255, 
         255, 36, 211}, {211, 1, 116, 255, 255, 255, 255, 255, 255, 244, 29, 
         211}, {211, 1, 145, 255, 255, 255, 255, 255, 255, 141, 9, 219}, {211,
          1, 104, 255, 255, 255, 255, 255, 213, 15, 100, 255}, {246, 45, 28, 
         255, 255, 255, 255, 238, 34, 34, 236, 255}, {255, 198, 8, 196, 255, 
         255, 209, 27, 39, 219, 255, 255}, {255, 245, 76, 6, 71, 71, 1, 34, 
         244, 255, 255, 255}, {255, 255, 237, 83, 1, 62, 116, 252, 255, 255, 
         255, 255}}, {{0, 20}, {12, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{12, 20},
       PlotRange->{{0, 12}, {0, 20}}], " ", "->", " ", "0"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJyNUEEKAjEQC548CvoBf+FxPHpd8QG7WBcvFbqCeJqnzdN0OtuWVgQNtDBJ
mobZDrfusgAwLfXq+sc+hP55XOlw8tN19O588Hc3urAbom2jZ63nVSAEMLgi
GDMKR8AnFQdSbxWVVRNaUJ1vYPxDNUXncj9Mworv3al8U4GThdiMJooxbAyJ
LQiSxRRTxvg0BXPeXNMwrleawm8gkfaJ
         "], {{0, 20}, {19, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{19, 20},
       PlotRange->{{0, 19}, {0, 20}}], " ", "->", " ", "2"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxfzj4fXN9rjIjgyaMf67bkQkEos4AOX/TFN20eIE8NuGS+f+AAt+T
mAzdJLh1U2e8hij/m8Sk8+z//TMIA48xsa75jww+uDBloAj838wkcAVdROLy
NzQRJiad2PW/ECLvM8EOs7yLEPr3fl6zIztT4C1U0/ZqMnn8RhVazcR0DFXk
XyRTM5T5GErHwkWsIIqPCjKth4qEsLXcuze7iJcp5h9U5EUI2D1s8ecRZh7P
sxbLu4ywBACzIRxb
         "], {{0, 20}, {18, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{18, 20},
       PlotRange->{{0, 18}, {0, 20}}], " ", "->", " ", "5"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQgyT/A8EsRSam3s//4UCOmZmZSVpOb9V5JD4QM0u9gvC56lbLsYEEn0D4
nTBFT2BGHPBnAoINUN6bWfxA/bzLoFx/PZB5yrtR7GNmtg6b/AfVPqapMCUb
ioojmZgYDJ8hXPnzNFDRCQT/UzIzUyqSL7Yhu+f//0YZZmZHhPQZQST3/T8W
Iwi0rgHI2mxlZWllJQo0Wv8EyDIrqFPk5uwDq+wA84X7YToB5WvL+w==
         "], {{0, 20}, {16, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{16, 20},
       PlotRange->{{0, 16}, {0, 20}}], " ", "->", " ", "3"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 255, 229, 39, 20, 210}, {255, 
         255, 255, 255, 255, 255, 202, 1, 1, 164}, {255, 255, 255, 255, 255, 
         255, 202, 1, 1, 164}, {255, 255, 255, 255, 255, 255, 81, 1, 37, 
         248}, {255, 255, 255, 255, 255, 201, 7, 1, 158, 255}, {255, 255, 255,
          255, 255, 81, 1, 1, 170, 255}, {255, 255, 255, 255, 255, 65, 1, 1, 
         170, 255}, {255, 255, 255, 255, 255, 65, 1, 38, 240, 255}, {255, 255,
          255, 255, 202, 13, 1, 47, 255, 255}, {255, 255, 255, 255, 189, 1, 1,
          147, 255, 255}, {255, 255, 255, 200, 48, 1, 40, 235, 255, 255}, {
         255, 255, 255, 155, 1, 1, 80, 255, 255, 255}, {255, 255, 240, 43, 0, 
         11, 196, 255, 255, 255}, {255, 255, 155, 1, 1, 80, 255, 255, 255, 
         255}, {255, 255, 45, 1, 1, 190, 255, 255, 255, 255}, {255, 202, 18, 
         1, 41, 230, 255, 255, 255, 255}, {255, 159, 1, 6, 148, 255, 255, 255,
          255, 255}, {250, 37, 1, 80, 255, 255, 255, 255, 255, 255}, {162, 1, 
         3, 205, 255, 255, 255, 255, 255, 255}, {162, 1, 146, 255, 255, 255, 
         255, 255, 255, 255}}, {{0, 20}, {10, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{10, 20},
       PlotRange->{{0, 10}, {0, 20}}], " ", "->", " ", "1"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwPx//+T2mSZmJgCHBmYmHSe/QeBRBZmCGACYt4DQJFL3MxIQsx7gUJt
QNo5GASCgs2YnS9BhCRu/IeA16e+/IcIbYUIdLq65p/8CGTMZGXe9u3//+tB
QWCzVoAk+ZmZfZbGq0KNF98HFBJD2MjPw8ys+ev//zPhUCHHjs83U5mZY4HK
zlZZKTIxcRwA2+HCJHAGRP/49unTZ4i1N1WZp/5HA0EYQsv5mXPAjGyfwxCR
t8bMzIJgliszl2vXyT//L/oDbS4GC0WB3eUXBHQ2M/sysNB5KVjgMLPXQE19
N9UDIsRmhrDqRwdIKHchkAkAPQjWGw==
         "], {{0, 20}, {19, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{19, 20},
       PlotRange->{{0, 19}, {0, 20}}], " ", "->", " ", "5"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxfyi4r8104D8yuG/AzJyPIlLHzMzchOD+e5XPxJw9GUlBJTMzk/I1
ZDNkmJkVLyH4P9t1mDmrkVW8d2Rm1kCx5RYTE5MaVHtd6MQP//9vZGaW2AER
aALasOn/KXFm5s0QJdpANzFJbN8GpO5ARJhAIswa25iYDF+DbXBgYEr9z8Ck
BlRTAFYRx8zk9LWJiTkQKJLwCyTixcy0+Wc8E9+hFGZmJ6CN/68qMTsci2d2
2PT/ajwTk85CoIgiEwPQZXlAyV8JzMwcaqpqvEB7mHXBllyr4gDZCvJ//wOo
RxbVg0TCJ38A8wBpr+qS
         "], {{0, 20}, {18, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{18, 20},
       PlotRange->{{0, 18}, {0, 20}}], " ", "->", " ", "6"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQgyRXMjEwRRU9evTmPwTs5WRiZmZmYpa/DBWYDeEzS0P5/x8/7i4p1mBm
PvMfGaxikkXh7+XkPo4iUMa0GoXfh8Y/w2iFwv/PpP8Jlc+MaqAJ81QUfh2T
729k/ktR5lMoCsKY/VD4HczMKPynCkyoNgYzO6PwVzFz7EXmf/XluwAAHgkP
Ag==
         "], {{0, 20}, {16, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{16, 20},
       PlotRange->{{0, 16}, {0, 20}}], " ", "->", " ", "7"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQgyT/Q8AqBsaM71D2/wmFU1iT281tYPx31kxMiw+Gm8P4/6eymIsI+hyG
cT9qh/9/8Qwu+/8GU8//L/m6Be+g/F6mnedUtePFdR7B+B2izi/+P5DVeQyx
j4lJ/TmQfiwWDOY/YVKHmLZI+BWYnj4JovE2Y8d/ZHCbqRmFf4zzIgo/RB+F
e5Jj4f+r037BuLs1Y779L2E6BeUuk6wFkh+W6HrvBSm5rej/DWKJO4t5W4O7
TPADmMbtpkxMkzb+BLMBOPYEGg==
         "], {{0, 20}, {16, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{16, 20},
       PlotRange->{{0, 16}, {0, 20}}], " ", "->", " ", "5"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 235, 49,
          55}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 179, 1, 
         20}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 179, 1, 
         20}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 179, 1, 
         20}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 161, 1, 
         20}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 86, 1, 20}, {
         255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 86, 1, 20}, {255, 
         255, 255, 183, 172, 255, 255, 255, 255, 255, 86, 1, 77}, {255, 255, 
         238, 12, 37, 241, 255, 255, 255, 255, 86, 1, 159}, {255, 255, 201, 1,
          93, 255, 255, 255, 255, 251, 54, 1, 208}, {255, 255, 141, 1, 176, 
         255, 255, 255, 255, 245, 1, 0, 208}, {255, 230, 34, 1, 246, 255, 255,
          255, 255, 161, 1, 44, 250}, {255, 169, 1, 36, 249, 255, 255, 255, 
         236, 55, 1, 52, 255}, {232, 45, 7, 171, 255, 255, 255, 207, 52, 1, 1,
          142, 255}, {179, 1, 20, 255, 255, 255, 184, 7, 1, 1, 1, 142, 255}, {
         179, 1, 98, 255, 215, 61, 13, 37, 163, 47, 1, 219, 255}, {179, 1, 77,
          138, 4, 1, 65, 227, 255, 57, 1, 237, 255}, {224, 33, 1, 1, 14, 148, 
         252, 255, 255, 57, 18, 241, 255}, {255, 216, 124, 155, 226, 255, 255,
          255, 236, 30, 77, 255, 255}, {255, 255, 255, 255, 255, 255, 255, 
         255, 147, 1, 77, 255, 255}}, {{0, 20}, {13, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{13, 20},
       PlotRange->{{0, 13}, {0, 20}}], " ", "->", " ", "4"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 255, 255, 255, 255, 47, 2, 
         191}, {255, 255, 255, 255, 255, 255, 255, 255, 210, 19, 3, 160}, {
         255, 255, 255, 255, 255, 255, 255, 255, 102, 3, 34, 255}, {160, 255, 
         255, 255, 255, 255, 255, 217, 15, 3, 118, 255}, {244, 255, 255, 255, 
         255, 255, 255, 208, 3, 3, 118, 255}, {255, 255, 255, 255, 255, 255, 
         252, 85, 2, 2, 180, 255}, {255, 255, 255, 255, 255, 255, 210, 3, 3, 
         62, 247, 255}, {255, 255, 255, 255, 255, 255, 117, 3, 3, 178, 255, 
         255}, {255, 255, 255, 255, 255, 255, 117, 3, 3, 210, 255, 255}, {255,
          255, 255, 255, 255, 255, 64, 3, 3, 210, 255, 255}, {255, 255, 255, 
         255, 255, 244, 0, 2, 71, 255, 255, 255}, {255, 255, 255, 255, 255, 
         139, 2, 3, 72, 255, 255, 255}, {255, 255, 255, 255, 255, 139, 2, 3, 
         155, 255, 255, 255}, {255, 255, 255, 255, 255, 45, 2, 3, 186, 255, 
         255, 255}, {255, 255, 255, 255, 255, 25, 2, 45, 249, 255, 255, 
         255}, {255, 255, 255, 255, 255, 24, 0, 48, 255, 255, 255, 255}, {255,
          255, 255, 255, 195, 11, 2, 70, 255, 255, 255, 255}, {255, 255, 255, 
         255, 131, 3, 19, 230, 255, 255, 255, 255}, {255, 255, 255, 229, 31, 
         3, 120, 255, 255, 255, 255, 255}, {255, 255, 255, 185, 3, 3, 192, 
         255, 255, 255, 255, 255}}, {{0, 20}, {12, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{12, 20},
       PlotRange->{{0, 12}, {0, 20}}], " ", "->", " ", "1"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 234, 94, 32, 8, 131, 243, 255}, {255, 255, 
         223, 33, 40, 161, 104, 1, 170, 255}, {255, 235, 40, 91, 229, 255, 
         254, 94, 83, 234}, {255, 57, 80, 241, 255, 255, 255, 118, 1, 203}, {
         200, 9, 233, 255, 255, 255, 203, 41, 15, 237}, {128, 85, 255, 255, 
         255, 190, 18, 16, 38, 255}, {128, 159, 255, 247, 106, 7, 166, 90, 
         142, 255}, {141, 43, 124, 26, 56, 199, 232, 11, 170, 255}, {249, 179,
          151, 196, 255, 255, 159, 1, 193, 255}, {255, 255, 255, 255, 255, 
         255, 87, 64, 255, 255}, {255, 255, 255, 255, 255, 255, 3, 127, 255, 
         255}, {255, 255, 255, 255, 255, 176, 30, 240, 255, 255}, {255, 255, 
         255, 255, 245, 41, 104, 255, 255, 255}, {255, 255, 255, 255, 211, 27,
          225, 255, 255, 255}, {255, 255, 255, 254, 70, 87, 255, 255, 255, 
         255}, {255, 255, 255, 178, 13, 204, 255, 255, 255, 255}, {255, 255, 
         255, 68, 52, 255, 255, 255, 255, 255}, {255, 255, 201, 13, 200, 255, 
         255, 255, 255, 255}, {255, 249, 35, 38, 255, 255, 255, 255, 255, 
         255}, {255, 247, 19, 142, 255, 255, 255, 255, 255, 255}}, {{0, 20}, {
         10, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{10, 20},
       PlotRange->{{0, 10}, {0, 20}}], " ", "->", " ", "9"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 233, 141, 19, 1, 2, 2, 99, 212, 255, 
         255}, {255, 255, 255, 255, 128, 3, 3, 2, 3, 3, 3, 3, 82, 234}, {255, 
         255, 255, 255, 128, 3, 20, 128, 129, 110, 3, 3, 2, 139}, {255, 255, 
         255, 255, 204, 66, 241, 255, 255, 128, 3, 3, 2, 157}, {255, 255, 255,
          255, 255, 237, 255, 255, 255, 84, 3, 3, 2, 192}, {255, 255, 255, 
         255, 255, 255, 255, 247, 54, 2, 2, 2, 123, 255}, {255, 255, 255, 255,
          255, 255, 255, 132, 3, 3, 3, 3, 255, 255}, {255, 255, 255, 255, 255,
          249, 233, 54, 3, 3, 8, 156, 255, 255}, {255, 255, 255, 255, 255, 
         191, 3, 2, 3, 43, 192, 255, 255, 255}, {255, 255, 255, 255, 237, 34, 
         3, 2, 3, 173, 255, 255, 255, 255}, {255, 255, 255, 255, 246, 68, 2, 
         0, 37, 159, 241, 255, 255, 255}, {255, 255, 255, 255, 255, 212, 52, 
         2, 3, 3, 44, 109, 255, 255}, {255, 255, 255, 255, 255, 255, 246, 128,
          129, 75, 3, 3, 39, 223}, {255, 255, 255, 255, 255, 255, 255, 255, 
         255, 248, 59, 3, 2, 122}, {255, 255, 255, 255, 255, 255, 255, 255, 
         255, 193, 16, 3, 2, 87}, {255, 255, 255, 255, 255, 255, 255, 247, 
         132, 54, 2, 2, 0, 192}, {127, 109, 126, 234, 212, 170, 170, 54, 3, 3,
          3, 3, 16, 213}, {95, 3, 2, 18, 13, 3, 3, 2, 3, 3, 8, 24, 149, 
         255}, {234, 127, 110, 18, 3, 3, 3, 2, 3, 88, 192, 255, 255, 255}, {
         255, 255, 255, 144, 108, 82, 134, 108, 187, 234, 255, 255, 255, 
         255}}, {{0, 20}, {14, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{14, 20},
       PlotRange->{{0, 14}, {0, 20}}], " ", "->", " ", "3"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU/0cFnx5Nl+JDEbmZb8jELHYEWcRSlJmZqe0WklCjEBOzZsnjbwiRxepM
TAJNyAYdCwOak3cTWWitBjOT9UEU6zbzMDP7fkMR+sTIxI1iEtAsQyan4yDG
mWNA8BQs1sLMDRRaFW/FycTMzKywFyTLydz0/6YWiA/Ges/+//Zh4vs9XYqJ
kcOlr/fmVylGjrP/TzIz9/gwM8us3gcyZyIzU8j//0XMrguYmF0fgES+xvOD
zXZgDtdi8rsCtheonvkZkMHApM6nCQq3k74gMz+BJH2BcgZhYaBws3bfB3Hx
ZXmIG8IXIYXbm+6S4pKS68g+AwCMthGl
         "], {{0, 20}, {20, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{20, 20},
       PlotRange->{{0, 20}, {0, 20}}], " ", "->", " ", "6"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 255, 255, 226, 125, 62, 26, 0, 
         64, 250, 255}, {255, 255, 255, 255, 255, 231, 159, 23, 2, 2, 2, 2, 2,
          148, 255}, {255, 255, 255, 255, 246, 44, 2, 2, 2, 8, 25, 2, 2, 69, 
         255}, {255, 255, 255, 255, 205, 2, 2, 19, 125, 199, 231, 175, 25, 7, 
         194}, {255, 255, 255, 255, 125, 2, 70, 239, 255, 255, 255, 255, 208, 
         14, 77}, {255, 255, 255, 255, 32, 19, 226, 255, 255, 255, 255, 255, 
         255, 27, 69}, {255, 255, 255, 255, 32, 64, 255, 255, 255, 255, 255, 
         255, 243, 25, 69}, {255, 255, 255, 255, 32, 64, 255, 255, 255, 255, 
         255, 229, 73, 7, 157}, {255, 255, 255, 255, 34, 12, 216, 249, 249, 
         232, 181, 37, 13, 67, 255}, {255, 255, 255, 255, 156, 2, 2, 2, 2, 2, 
         2, 2, 71, 205, 255}, {255, 255, 255, 255, 156, 2, 2, 2, 2, 2, 36, 
         155, 240, 255, 255}, {255, 255, 131, 111, 4, 2, 2, 2, 75, 146, 227, 
         255, 255, 255, 255}, {242, 90, 6, 2, 2, 2, 2, 2, 204, 255, 255, 255, 
         255, 255, 255}, {218, 2, 2, 10, 130, 240, 150, 2, 106, 255, 255, 255,
          255, 255, 255}, {218, 2, 95, 203, 255, 255, 251, 32, 70, 253, 255, 
         255, 255, 255, 255}, {218, 2, 123, 255, 255, 255, 255, 150, 2, 156, 
         255, 255, 255, 255, 255}, {243, 47, 10, 155, 191, 255, 255, 175, 2, 
         77, 255, 255, 255, 255, 255}, {255, 118, 2, 2, 4, 37, 37, 15, 2, 43, 
         255, 255, 255, 255, 255}, {255, 255, 111, 2, 2, 2, 2, 2, 2, 43, 255, 
         255, 255, 255, 255}, {255, 255, 250, 179, 14, 2, 2, 2, 42, 172, 255, 
         255, 255, 255, 255}}, {{0, 20}, {15, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{15, 20},
       PlotRange->{{0, 15}, {0, 20}}], " ", "->", " ", "8"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mSAQiwDxfzhYefPm4/P/kUHXMyYlpXIZyxq4yLEw+XomZiBgki/7ChWLAXGZ
IUQcRKg3gYmJiSG9uLi4yJeJqR8kdB6s5MkfEHsVM7MQkKqWYWIW8D4B0QIU
Y/7/9bA8M5PPPphts0BiIIn+z3AXyIHEcpiYHBHOZGAC2SHHLAtTtWdVDBOz
WMbndk7mXqi7p/MD3ed65f//BGbmGZ/ePz0cFgZ20OrjQNk+IMPJhB/iBeF+
iBeYQF5gYvItNi4uvgAx5bMXUEl4RPm3/x8Qtr9ZMfPEf1QAAMkk12Y=
         "], {{0, 17}, {20, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{20, 17},
       PlotRange->{{0, 20}, {0, 17}}], " ", "->", " ", "0"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 255, 255, 221, 144, 69, 2, 2, 40,
          228}, {255, 255, 255, 255, 255, 234, 93, 2, 3, 3, 3, 3, 3, 124}, {
         255, 255, 255, 255, 194, 61, 3, 15, 102, 193, 193, 3, 3, 124}, {255, 
         255, 247, 79, 7, 9, 121, 246, 255, 255, 252, 79, 3, 124}, {255, 242, 
         83, 3, 12, 118, 255, 255, 255, 255, 232, 3, 3, 124}, {247, 83, 3, 3, 
         133, 255, 255, 255, 255, 176, 52, 3, 3, 37}, {131, 3, 3, 119, 246, 
         255, 255, 255, 255, 103, 3, 3, 3, 115}, {56, 3, 18, 237, 255, 255, 
         255, 255, 255, 94, 3, 3, 3, 142}, {13, 3, 64, 248, 255, 255, 255, 
         255, 172, 14, 3, 3, 30, 240}, {109, 3, 3, 132, 144, 144, 144, 144, 
         46, 3, 3, 3, 186, 255}, {187, 13, 2, 2, 2, 2, 2, 0, 2, 2, 2, 9, 207, 
         255}, {255, 181, 69, 69, 69, 69, 69, 68, 23, 3, 3, 87, 255, 255}, {
         255, 255, 255, 255, 255, 255, 255, 241, 49, 3, 21, 240, 255, 255}, {
         255, 255, 255, 255, 255, 255, 255, 154, 3, 3, 34, 255, 255, 255}, {
         255, 255, 255, 255, 255, 255, 255, 2, 3, 3, 158, 255, 255, 255}, {
         255, 255, 255, 255, 255, 255, 216, 2, 3, 37, 248, 255, 255, 255}, {
         255, 255, 255, 255, 255, 255, 92, 2, 3, 102, 255, 255, 255, 255}, {
         255, 255, 255, 255, 255, 241, 29, 2, 3, 169, 255, 255, 255, 255}, {
         255, 255, 255, 255, 255, 177, 3, 2, 23, 225, 255, 255, 255, 255}, {
         255, 255, 255, 255, 255, 211, 17, 2, 117, 255, 255, 255, 255, 
         255}}, {{0, 20}, {14, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{14, 20},
       PlotRange->{{0, 14}, {0, 20}}], " ", "->", " ", "9"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxfxD4cMKbiUG89PZ/CHh3IVaFmZmZiZlZZTlY4I0ziCPjUeMhyqwE
FolmZjYpufQIyCpkZl4ApK5wMpt/gWjfycx8ACTClws175cDkyOYcRUq8P8C
M3PZf2RwM4VZ5jyKiDcz814UgalAJ9gfQBI4w8PABAReb+Aim9nZDA0NZZiE
L8OFDoB03FdkTv+PCi4z89/6/7/8FULkObPSs//rmMy+wAS+mDIF/f8/h5vZ
pPjChacv/3+6YMfEfRwocVwY6BRmJXV3E2AgBYLVLoyDhhgzc+Y7qP4PL7vK
zHzLylaBOAD4LADx
         "], {{0, 20}, {18, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{18, 20},
       PlotRange->{{0, 18}, {0, 20}}], " ", "->", " ", "3"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU/0eAw3vsGRkZtt9BElrNzwQGtnehAj8fWIoB+dw8rExM+yBCT71AKhT9
Pv9vZGVqAwt98QHrygKxuZiYQPre+IFE+PY+AXI+cjIJAKnNIBGe8IMgVTeM
web9BJvVBzG4F8jc971eFUh53/4JFroGtFzgaDlIEedUqJPOMzFJrP3PABIT
hbk7gonJ+v//J0/uysLE3t8UZGJ6DGZuholNB2rx+YUi9hToDv9n/5HFsoAa
g77+h4nxbv7/qdcMqAomBPKHtI8LyKxn8IA7Ig0JONNupNDcVgISCvj4Hxn8
2ucvse85nAsAzOUDGw==
         "], {{0, 20}, {20, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{20, 20},
       PlotRange->{{0, 20}, {0, 20}}], " ", "->", " ", "0"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxVjq9zwjAUx5NvzO6omNiih2TYitnJ2ebmMHCUFFNuZXc7jk1iQeePKLp2
aGqLxhYL+q3pD1ZeLrl88t73m293NPMmYIzN74rDG369RtFwoe4LeA/nUx36
47fw09d+9DKyYw/Ftk2qa6250kne4ADCro+GY3Oi2ANLqFWXPoI27yX7rm6/
JibKpJDHSs3BoSVH7edW7vg51UrXsROPx6vVIU1TBdV2p4wjv3mAMHS+/DOH
oaW67eur5uxxZJQId1enFegT5U/sOSsz9tDZ2p8hnJUxAwdiW4Uvs3F0Vk22
TQAhg0MJf3Bb6HI=
         "], {{0, 20}, {16, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{16, 20},
       PlotRange->{{0, 16}, {0, 20}}], " ", "->", " ", "3"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 231, 150, 107, 75, 36, 28, 76, 163, 255}, {255, 
         148, 17, 2, 2, 1, 20, 2, 2, 2, 215}, {82, 4, 21, 148, 232, 240, 244, 
         226, 2, 2, 180}, {121, 160, 251, 255, 255, 255, 255, 226, 2, 2, 
         237}, {255, 255, 255, 255, 255, 255, 255, 100, 2, 24, 255}, {255, 
         255, 255, 255, 255, 255, 230, 10, 1, 181, 255}, {255, 255, 255, 255, 
         255, 255, 94, 2, 26, 241, 255}, {255, 255, 255, 255, 255, 178, 4, 2, 
         143, 255, 255}, {255, 255, 255, 255, 255, 80, 2, 62, 241, 255, 
         255}, {255, 255, 255, 255, 166, 1, 2, 166, 255, 255, 255}, {255, 255,
          255, 214, 10, 0, 74, 250, 255, 255, 255}, {255, 255, 247, 43, 2, 35,
          221, 255, 255, 255, 255}, {255, 255, 117, 2, 6, 180, 255, 255, 255, 
         255, 255}, {255, 244, 14, 2, 112, 255, 255, 255, 255, 255, 255}, {
         255, 85, 2, 51, 234, 255, 255, 255, 255, 255, 255}, {224, 14, 1, 129,
          255, 255, 255, 255, 255, 255, 255}, {132, 2, 32, 244, 255, 255, 255,
          255, 255, 255, 255}, {50, 2, 118, 255, 255, 255, 255, 255, 255, 255,
          255}, {1, 2, 223, 255, 255, 255, 255, 255, 255, 255, 255}, {45, 59, 
         249, 255, 255, 255, 255, 255, 255, 255, 255}}, {{0, 20}, {11, 0}}, {
         0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{11, 20},
       PlotRange->{{0, 11}, {0, 20}}], " ", "->", " ", "7"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 239, 26, 56, 239, 255, 255, 255, 
         255, 255}, {255, 255, 255, 255, 255, 122, 1, 1, 181, 255, 255, 255, 
         255, 255}, {255, 255, 255, 255, 197, 45, 1, 1, 122, 255, 255, 255, 
         255, 255}, {255, 255, 255, 255, 64, 1, 0, 1, 174, 255, 255, 255, 255,
          255}, {255, 255, 255, 150, 2, 1, 1, 1, 208, 255, 255, 255, 255, 
         255}, {255, 255, 240, 56, 1, 49, 102, 1, 208, 255, 255, 255, 255, 
         255}, {255, 255, 97, 1, 12, 190, 125, 1, 208, 255, 255, 255, 255, 
         255}, {255, 219, 10, 1, 128, 255, 125, 1, 190, 255, 255, 255, 255, 
         255}, {255, 115, 1, 30, 229, 255, 125, 1, 150, 255, 255, 255, 255, 
         255}, {255, 89, 1, 130, 255, 255, 125, 1, 122, 255, 255, 255, 255, 
         255}, {255, 17, 10, 219, 255, 255, 125, 1, 122, 255, 255, 255, 255, 
         255}, {221, 9, 103, 255, 255, 236, 108, 1, 64, 94, 47, 47, 89, 
         245}, {185, 1, 80, 60, 52, 25, 1, 1, 1, 1, 1, 1, 19, 217}, {239, 22, 
         1, 1, 0, 1, 1, 1, 0, 1, 12, 63, 200, 255}, {255, 167, 29, 22, 15, 22,
          4, 17, 149, 195, 221, 255, 255, 255}, {255, 255, 255, 255, 233, 235,
          23, 40, 255, 255, 255, 255, 255, 255}, {255, 255, 255, 255, 255, 
         207, 1, 40, 255, 255, 255, 255, 255, 255}, {255, 255, 255, 255, 255, 
         241, 28, 40, 255, 255, 255, 255, 255, 255}, {255, 255, 255, 255, 255,
          255, 40, 40, 255, 255, 255, 255, 255, 255}, {255, 255, 255, 255, 
         255, 255, 154, 99, 255, 255, 255, 255, 255, 255}}, {{0, 20}, {14, 
         0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{14, 20},
       PlotRange->{{0, 14}, {0, 20}}], " ", "->", " ", "4"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mTAQiwDxf1Tw9CaCvfsSmHpUZgQXusUjB6a7mNnXwMTSmAXBtDkz8yKYWBB+
MQcsYnJQoddeCDHpz///f6rKzZVnZubc9PHf//8tzMzMU//v52SGAqaSj//L
wGLuTDDAAKX5/zMxw9VBaUE8YgKJXcFBmsHB5akgMVWw1EqQQx4D8UmQ2AI2
ILkCHhgf7Zj5Tv6vYVddiRSA6czMEv//r/mAHKgf7Hgu/0cHa1P+AwAwwOhu

         "], {{0, 19}, {20, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{20, 19},
       PlotRange->{{0, 20}, {0, 19}}], " ", "->", " ", "4"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 218, 92, 1, 1, 1, 0, 1, 32, 99, 136, 255, 
         255}, {255, 255, 246, 89, 22, 22, 60, 97, 13, 2, 2, 2, 85, 252}, {
         255, 255, 255, 255, 255, 255, 255, 255, 219, 177, 113, 2, 1, 148}, {
         255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 252, 109, 1, 29}, {
         255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 157, 1, 22}, {
         255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 97, 0, 104}, {
         255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 168, 11, 51, 
         249}, {255, 255, 255, 255, 255, 255, 255, 255, 248, 109, 8, 33, 157, 
         255}, {255, 255, 255, 255, 255, 255, 224, 118, 34, 2, 24, 161, 255, 
         255}, {255, 255, 255, 255, 255, 239, 38, 1, 2, 2, 176, 255, 255, 
         255}, {255, 255, 255, 255, 255, 255, 179, 156, 25, 1, 138, 255, 255, 
         255}, {255, 255, 255, 255, 255, 255, 255, 242, 38, 2, 146, 255, 255, 
         255}, {255, 255, 255, 255, 255, 255, 255, 69, 2, 125, 249, 255, 255, 
         255}, {255, 255, 255, 255, 255, 248, 140, 1, 28, 219, 255, 255, 255, 
         255}, {255, 255, 255, 255, 255, 103, 2, 1, 194, 255, 255, 255, 255, 
         255}, {255, 255, 255, 250, 99, 1, 1, 141, 255, 255, 255, 255, 255, 
         255}, {176, 78, 255, 144, 2, 28, 194, 255, 255, 255, 255, 255, 255, 
         255}, {89, 2, 117, 14, 27, 212, 255, 255, 255, 255, 255, 255, 255, 
         255}, {21, 2, 1, 73, 242, 255, 255, 255, 255, 255, 255, 255, 255, 
         255}, {133, 2, 122, 224, 255, 255, 255, 255, 255, 255, 255, 255, 255,
          255}}, {{0, 20}, {14, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{14, 20},
       PlotRange->{{0, 14}, {0, 20}}], " ", "->", " ", "3"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{213, 24, 0, 57, 158, 255, 255, 255, 255, 255, 255, 255}, {
         90, 1, 1, 1, 4, 77, 222, 255, 253, 192, 230, 255}, {54, 1, 1, 36, 1, 
         1, 14, 186, 152, 1, 41, 243}, {54, 3, 159, 243, 163, 29, 1, 81, 12, 
         1, 58, 251}, {54, 10, 247, 255, 255, 121, 1, 1, 1, 1, 68, 255}, {54, 
         1, 137, 254, 255, 220, 34, 1, 1, 1, 137, 255}, {116, 1, 1, 189, 255, 
         194, 15, 1, 1, 28, 249, 255}, {245, 125, 1, 4, 88, 14, 1, 1, 86, 222,
          255, 255}, {255, 251, 48, 1, 1, 1, 1, 91, 250, 255, 255, 255}, {255,
          255, 219, 4, 1, 1, 1, 150, 255, 255, 255, 255}, {255, 253, 87, 1, 1,
          1, 1, 20, 142, 255, 255, 255}, {255, 208, 1, 1, 1, 64, 26, 1, 2, 
         146, 254, 255}, {255, 124, 1, 1, 45, 246, 210, 57, 1, 1, 180, 255}, {
         255, 68, 1, 1, 176, 255, 255, 249, 77, 1, 68, 255}, {233, 3, 1, 46, 
         248, 255, 255, 255, 161, 1, 4, 234}, {245, 39, 1, 73, 255, 255, 255, 
         226, 71, 1, 1, 214}, {255, 82, 1, 36, 186, 255, 179, 42, 1, 1, 12, 
         224}, {255, 198, 10, 1, 12, 50, 10, 1, 1, 10, 213, 255}, {255, 255, 
         182, 8, 1, 1, 1, 13, 136, 212, 255, 255}, {255, 255, 255, 207, 76, 1,
          86, 211, 255, 255, 255, 255}}, {{0, 20}, {12, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{12, 20},
       PlotRange->{{0, 12}, {0, 20}}], " ", "->", " ", "8"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{254, 146, 22, 2, 2, 145, 240, 176, 146, 192, 255, 255, 
         255, 255, 255}, {130, 3, 3, 3, 3, 2, 33, 13, 3, 111, 255, 255, 255, 
         255, 255}, {34, 3, 3, 3, 3, 2, 3, 3, 3, 95, 250, 255, 255, 255, 
         255}, {65, 3, 87, 3, 3, 2, 3, 3, 3, 2, 96, 214, 255, 255, 255}, {172,
          112, 203, 44, 3, 2, 3, 3, 3, 2, 3, 122, 255, 255, 255}, {255, 255, 
         58, 3, 3, 33, 76, 24, 3, 2, 3, 8, 121, 255, 255}, {254, 156, 13, 3, 
         3, 130, 255, 177, 3, 2, 3, 3, 3, 255, 255}, {254, 3, 3, 3, 87, 255, 
         255, 239, 147, 2, 3, 3, 3, 171, 255}, {254, 2, 2, 18, 193, 255, 255, 
         255, 255, 145, 2, 2, 2, 110, 255}, {213, 3, 3, 40, 255, 255, 255, 
         255, 255, 146, 3, 3, 3, 17, 225}, {111, 3, 3, 143, 255, 255, 255, 
         255, 255, 224, 28, 3, 3, 2, 220}, {111, 3, 3, 101, 255, 255, 255, 
         255, 255, 255, 38, 3, 3, 2, 220}, {110, 2, 2, 23, 208, 255, 255, 255,
          255, 255, 37, 2, 2, 110, 255}, {111, 3, 3, 3, 147, 255, 255, 255, 
         255, 161, 8, 3, 3, 111, 255}, {130, 3, 3, 3, 44, 234, 255, 255, 255, 
         146, 3, 3, 3, 214, 255}, {254, 3, 3, 3, 3, 48, 235, 255, 255, 64, 3, 
         3, 3, 255, 255}, {254, 64, 2, 2, 2, 0, 2, 85, 2, 0, 2, 2, 64, 255, 
         255}, {255, 240, 75, 3, 3, 2, 3, 3, 3, 2, 3, 14, 178, 255, 255}, {
         255, 255, 234, 75, 3, 2, 3, 3, 3, 2, 14, 153, 255, 255, 255}, {255, 
         255, 255, 239, 65, 2, 3, 3, 3, 64, 178, 255, 255, 255, 255}}, {{0, 
         20}, {15, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{15, 20},
       PlotRange->{{0, 15}, {0, 20}}], " ", "->", " ", "0"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwPxfxj4ksXEpPPpPxJ4Z8fEzMz8EknkjDMzmtA6fmZmLhVkoZfcQBXb
4pCEvpgyMdkf+B/LxPQCyWSXd///I1S9AZrMfxYoI83s9hOixhlo8gYg4zkz
cwdE0RyQySDGZmbmS2CRFUxMTGVAG/7/B9rR9fz5vNLSUqAindg4k7g4kFOB
7uWPLoUwYIRG7Nn/t/1APDsZVVMmZpm9l16BDPv18uXLF9/ffexmYq79jwoa
GNgOoAlJMrn9xxBajC7kzGT6DE3oSzbzLggLABFcBvg=
         "], {{0, 20}, {19, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{19, 20},
       PlotRange->{{0, 19}, {0, 20}}], " ", "->", " ", "4"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 115, 1, 0, 54, 167, 255, 255, 255}, {255, 116, 2, 2, 
         2, 4, 144, 255, 255}, {255, 116, 2, 2, 2, 2, 101, 255, 255}, {255, 
         116, 2, 2, 2, 2, 101, 255, 255}, {255, 116, 2, 2, 2, 2, 101, 255, 
         255}, {213, 20, 2, 2, 2, 2, 101, 255, 255}, {205, 2, 2, 2, 2, 2, 101,
          255, 255}, {205, 2, 2, 2, 2, 2, 101, 255, 255}, {205, 2, 2, 2, 2, 2,
          101, 255, 255}, {205, 2, 2, 2, 2, 2, 101, 255, 255}, {205, 2, 2, 2, 
         2, 2, 101, 255, 255}, {205, 2, 2, 2, 2, 2, 101, 255, 255}, {242, 87, 
         2, 2, 2, 2, 91, 248, 255}, {255, 116, 2, 2, 2, 2, 2, 190, 255}, {255,
          137, 6, 2, 2, 2, 2, 190, 255}, {255, 255, 25, 2, 2, 2, 2, 190, 
         255}, {255, 255, 63, 2, 2, 2, 2, 47, 255}, {255, 255, 189, 2, 2, 2, 
         2, 12, 174}, {255, 255, 251, 138, 4, 2, 2, 2, 43}, {255, 255, 255, 
         255, 116, 2, 2, 2, 117}}, {{0, 20}, {9, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{9, 20},
       PlotRange->{{0, 9}, {0, 20}}], " ", "->", " ", "1"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwPxfxjQd5zyCcL6BBOyZmSUtm1sfvQbruj/HTlGMDiAEPq/K80CJKTy
Hxn83a7HyMh6ClnodyVI2UEkkRmOIBGNp3CBo14sIJHUVwg1BhALW5G0gcxR
ZGVkuYQQ+lPosvv9UWdGIyS3gkEtqo1AcIoVXeiuEiMj/y0kgU99skArIhEC
96dJMzIyMDp+hHB/nZtpzw1ylUAPmH9tdxkLxJmyLitBAr1mPBA+k1I41GBL
D9sIRtGMusRNcFMBw38Qig==
         "], {{0, 20}, {19, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{19, 20},
       PlotRange->{{0, 19}, {0, 20}}], " ", "->", " ", "3"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQgyT/g0AWI0PY1f8IEMvExMTh7r4Nxv9So8cMFGJVVDwFE1qXpMsFFFqA
pKuRiUn5DxJ/BhPTbCTuUREm+3cI7ncrJrE3SNKBTExtSNw17EwOv5G4vEzi
JxF669mZmFchZBOBLlkG5/3q4GViKoO75NtqJib+SoTDJjIxSZxF6F3Hw8S0
CcF9p88kdvEvgu/IJHEGyVn/FZkakLn/AVgv/zY=
         "], {{0, 20}, {16, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{16, 20},
       PlotRange->{{0, 16}, {0, 20}}], " ", "->", " ", "7"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 255, 244, 105, 1, 175, 255, 255, 
         255, 255}, {255, 255, 255, 255, 255, 238, 114, 5, 18, 92, 255, 255, 
         255, 255}, {255, 255, 255, 255, 255, 78, 2, 55, 211, 236, 255, 255, 
         255, 255}, {255, 255, 255, 255, 229, 30, 2, 181, 255, 255, 255, 255, 
         255, 255}, {255, 255, 255, 255, 132, 2, 55, 255, 255, 255, 255, 255, 
         255, 255}, {255, 255, 255, 197, 1, 9, 181, 255, 255, 255, 255, 255, 
         255, 255}, {255, 255, 219, 35, 2, 167, 255, 255, 255, 255, 255, 255, 
         255, 255}, {255, 255, 116, 2, 84, 242, 255, 255, 255, 255, 255, 255, 
         255, 255}, {255, 212, 21, 19, 211, 255, 255, 255, 255, 255, 255, 255,
          255, 255}, {255, 87, 1, 48, 255, 255, 255, 255, 255, 255, 255, 255, 
         255, 255}, {246, 21, 1, 171, 255, 255, 255, 252, 210, 116, 158, 242, 
         255, 255}, {162, 2, 24, 255, 255, 255, 233, 136, 2, 2, 2, 43, 255, 
         255}, {130, 2, 108, 255, 255, 255, 108, 1, 14, 155, 66, 2, 138, 
         255}, {47, 2, 139, 255, 255, 255, 24, 9, 176, 255, 238, 115, 15, 
         221}, {47, 2, 139, 255, 255, 118, 4, 181, 255, 255, 255, 87, 1, 
         163}, {161, 1, 127, 255, 255, 46, 106, 242, 236, 238, 147, 1, 97, 
         255}, {221, 16, 9, 175, 255, 47, 2, 42, 18, 26, 2, 23, 255, 255}, {
         255, 139, 0, 14, 70, 14, 2, 0, 2, 2, 2, 201, 255, 255}, {255, 255, 
         137, 2, 2, 2, 2, 1, 2, 27, 189, 251, 255, 255}, {255, 255, 252, 232, 
         148, 75, 108, 117, 191, 239, 255, 255, 255, 255}}, {{0, 20}, {14, 
         0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{14, 20},
       PlotRange->{{0, 14}, {0, 20}}], " ", "->", " ", "6"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 255, 255, 141, 50, 255, 255, 255,
          255}, {255, 255, 255, 255, 255, 255, 255, 119, 2, 255, 255, 255, 
         255}, {255, 255, 255, 255, 255, 255, 255, 119, 2, 188, 255, 255, 
         255}, {255, 255, 255, 255, 255, 255, 255, 119, 2, 249, 255, 255, 
         255}, {255, 68, 255, 255, 255, 255, 255, 118, 1, 176, 255, 255, 
         255}, {218, 21, 255, 255, 255, 255, 255, 119, 2, 176, 255, 255, 
         255}, {176, 21, 255, 255, 255, 255, 255, 119, 2, 243, 255, 255, 
         255}, {176, 9, 219, 255, 255, 255, 255, 94, 2, 255, 255, 255, 255}, {
         176, 0, 157, 252, 255, 255, 255, 40, 1, 255, 255, 255, 255}, {188, 1,
          2, 69, 161, 215, 215, 34, 2, 191, 215, 215, 215}, {255, 104, 2, 2, 
         2, 1, 2, 2, 2, 1, 2, 2, 62}, {255, 253, 175, 92, 80, 50, 2, 2, 2, 80,
          104, 164, 247}, {255, 255, 255, 255, 255, 255, 209, 1, 56, 255, 255,
          255, 255}, {255, 255, 255, 255, 255, 255, 137, 2, 117, 255, 255, 
         255, 255}, {255, 255, 255, 255, 255, 255, 137, 2, 158, 255, 255, 255,
          255}, {255, 255, 255, 255, 255, 255, 90, 2, 158, 255, 255, 255, 
         255}, {255, 255, 255, 255, 255, 255, 59, 1, 212, 255, 255, 255, 
         255}, {255, 255, 255, 255, 255, 255, 60, 11, 239, 255, 255, 255, 
         255}, {255, 255, 255, 255, 255, 244, 29, 127, 255, 255, 255, 255, 
         255}, {255, 255, 255, 255, 255, 247, 38, 138, 255, 255, 255, 255, 
         255}}, {{0, 20}, {13, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{13, 20},
       PlotRange->{{0, 13}, {0, 20}}], " ", "->", " ", "4"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxfzC4FsTECIFa//+/KjQxMeFhYobBa680wTKFM8FgLQPT2kNMzMFn
z36FaP4/k4n5///C1//h4IwYg/1/FJDOLHYWRWAtI5MHisArBSbt1ygi1UyM
S1D1MDHXfEUWOCPGKIZqjx26PQcZmVpQ7TFh0kbVE8Qkj2rxNSbmWBSBL1qM
9mh60O35z8g0E1XgPxPzIQQHAFuMHkc=
         "], {{0, 20}, {18, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{18, 20},
       PlotRange->{{0, 18}, {0, 20}}], " ", "->", " ", "7"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwPxfzBY02bFxMDExNT9HwoeVbAzMzMzATGbE0TkoSEzM1SI2RIiZMfM
LBAcdeNGHULoUqLbShCtDRRa9B8ZPOVlZg58hyzysgio/zKYuXYFmPqby8TM
mwZm7nT7AhaZB7QxA6L+2C4wNRfoCJvPyAZNB7rc6geyyGSg621QRA5xMTNz
bIHxzgLxbmtmZh6YGz9FK/7//0yBmZlvPoj7bM+eKH1mwf//7YH+6AUGx8mJ
OmDvC/7fyg3ybVCQBjgkmLm0a/9PYYYCoBCPXMNGUDhIQkS4+AU7tkPtuCQB
MqDjONxNALyI8OM=
         "], {{0, 20}, {19, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{19, 20},
       PlotRange->{{0, 19}, {0, 20}}], " ", "->", " ", "2"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxf2TwfTsXYz2I8Xw/mH+8yZaJiWkOiLmMufHB7B5dTiCfKegzUGC5
AhMzJxMjE5MoE5PgBaBAvwJITsrCcspZJqbJQDOqWZiYdKLWPADKVTExvfz/
35iJidP4FdjkUwJMhl/+/+dnMrsDtVuXSRmo5P/FvX+gAqt5maJRXPdBl4n7
LIrIPEbGVhSBh0pMTJdRRCYwMtX/RRb4ocyg8gpFSSYTxxwUgfc6TEooAv9m
MjEJ3UIW+Qz0quhDZJGFTEzKR1F0bWViWgDnAAB3qBCc
         "], {{0, 20}, {18, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{18, 20},
       PlotRange->{{0, 18}, {0, 20}}], " ", "->", " ", "7"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxfwj4GsbAyBD58z8C1DOBQN0zuMANAbmSkihWJv9/MJE7c0DkdSnZ
Q//+o4CL0kxtqCL/w5mU0ESeych8QBPS4T2LLoKuC1PkuSyayJ8gpigY+ymY
DGWSug6it9oYGsp6vvr/wo2ZKRPI/2DOAvYlJzcnE5PBc6BILxMCOBwGCjxQ
QxL5CjLEE0mAyQYkkgrlCHrUb9nyByTyuRLIFcvL2w13FADANwKZ
         "], {{0, 20}, {18, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{18, 20},
       PlotRange->{{0, 18}, {0, 20}}], " ", "->", " ", "2"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 96, 39, 99, 143, 196, 228, 232, 173, 107, 237, 255, 
         255, 255, 255}, {194, 7, 2, 1, 2, 2, 23, 26, 1, 2, 177, 255, 255, 
         255, 255}, {255, 119, 2, 20, 81, 56, 33, 63, 80, 126, 231, 255, 255, 
         255, 255}, {255, 200, 2, 60, 255, 249, 243, 250, 255, 255, 255, 255, 
         255, 255, 255}, {255, 155, 2, 60, 255, 255, 255, 255, 255, 255, 255, 
         255, 255, 255, 255}, {255, 193, 1, 59, 227, 196, 143, 136, 209, 255, 
         255, 255, 255, 255, 255}, {255, 119, 2, 33, 38, 2, 2, 2, 10, 124, 
         205, 253, 255, 255, 255}, {255, 51, 2, 1, 2, 27, 96, 140, 62, 2, 2, 
         138, 255, 255, 255}, {255, 21, 2, 1, 126, 242, 255, 255, 250, 183, 
         14, 5, 186, 255, 255}, {255, 96, 2, 159, 246, 255, 255, 255, 255, 
         255, 184, 10, 25, 217, 255}, {255, 239, 157, 255, 255, 255, 255, 255,
          255, 255, 255, 103, 1, 83, 246}, {255, 255, 255, 255, 255, 255, 255,
          255, 255, 255, 255, 188, 29, 1, 209}, {255, 255, 255, 255, 255, 255,
          255, 255, 255, 255, 255, 225, 90, 1, 120}, {255, 255, 255, 230, 249,
          255, 255, 255, 255, 255, 255, 255, 120, 1, 120}, {255, 255, 217, 24,
          51, 195, 255, 255, 255, 255, 255, 255, 82, 1, 120}, {255, 255, 120, 
         0, 29, 195, 255, 255, 255, 255, 255, 255, 120, 0, 81}, {255, 255, 
         164, 1, 20, 138, 246, 255, 255, 255, 255, 229, 48, 1, 164}, {255, 
         255, 255, 100, 2, 2, 44, 154, 255, 255, 230, 83, 2, 42, 243}, {255, 
         255, 255, 250, 183, 29, 2, 2, 20, 21, 15, 2, 18, 202, 255}, {255, 
         255, 255, 255, 255, 237, 107, 25, 1, 2, 2, 55, 197, 255, 255}}, {{0, 
         20}, {15, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{15, 20},
       PlotRange->{{0, 15}, {0, 20}}], " ", "->", " ", "5"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 233, 178, 131, 79, 0, 65, 149, 
         252, 255, 255}, {255, 255, 255, 255, 255, 121, 1, 1, 53, 91, 1, 1, 
         139, 255, 255}, {255, 255, 255, 255, 255, 222, 160, 229, 250, 253, 
         162, 1, 8, 235, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 
         255, 252, 55, 1, 233, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 
         255, 255, 254, 97, 1, 233, 255}, {255, 255, 255, 255, 255, 255, 255, 
         255, 255, 255, 250, 1, 51, 249, 255}, {255, 255, 255, 255, 255, 255, 
         255, 255, 255, 255, 250, 1, 129, 255, 255}, {255, 255, 255, 255, 255,
          255, 255, 255, 255, 255, 137, 1, 245, 255, 255}, {255, 255, 255, 
         255, 255, 255, 255, 255, 255, 238, 6, 69, 251, 255, 255}, {255, 255, 
         255, 255, 255, 255, 255, 255, 255, 142, 4, 215, 255, 255, 255}, {255,
          255, 255, 255, 255, 255, 255, 255, 218, 11, 59, 255, 255, 255, 
         255}, {255, 255, 255, 255, 255, 255, 255, 236, 47, 22, 239, 255, 255,
          255, 255}, {255, 255, 255, 255, 255, 255, 253, 175, 13, 194, 255, 
         255, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 168, 1, 121, 255,
          255, 255, 255, 255, 255}, {255, 255, 255, 255, 255, 187, 11, 1, 93, 
         192, 255, 255, 255, 255, 255}, {255, 255, 250, 166, 82, 9, 1, 1, 1, 
         3, 58, 201, 253, 255, 255}, {255, 176, 52, 1, 1, 13, 94, 130, 130, 
         90, 1, 1, 35, 136, 249}, {232, 23, 1, 1, 50, 219, 255, 255, 255, 251,
          205, 118, 31, 4, 107}, {205, 1, 3, 53, 235, 255, 255, 255, 255, 255,
          255, 255, 255, 117, 190}, {240, 29, 87, 255, 255, 255, 255, 255, 
         255, 255, 255, 255, 255, 255, 255}}, {{0, 20}, {15, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{15, 20},
       PlotRange->{{0, 15}, {0, 20}}], " ", "->", " ", "2"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU/0cFfy4pMs1HFbrSyczM7IskcGlnNCcTM7PMbITQGVugGqBYPEKXMg9Q
yLxMh3ky1OR5ikxMDExGr/7/z2Dq+gMSehkKVKJrUP0MyJ7DrPsZSB0zYmI2
LfoJ0bKRWeb9/3eL5Jm5Sj5Bjf1my9wBNACobxvcqs3MzHP/P2di4mqEC+03
BVm0l5m/Bi50s5iJe9L//4rMHnChN8rMTC1AWox5Gcz4XmVm3bnvgCwm5l0Q
oalezMxJL8FMUyaQcR9OlPIw63W/gkibMcu0X5ioAnSQHtxcR2ZIaMhsuA8X
++AHFOOK3/QIOWh/vewqe4Ua2gDMqh37
         "], {{0, 20}, {20, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{20, 20},
       PlotRange->{{0, 20}, {0, 20}}], " ", "->", " ", "0"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 249, 149, 92, 40, 14, 99, 234, 255}, {
         255, 255, 255, 162, 38, 2, 1, 2, 2, 2, 80, 255}, {255, 255, 149, 7, 
         2, 2, 12, 39, 20, 2, 2, 255}, {255, 158, 6, 2, 4, 86, 216, 255, 199, 
         2, 2, 183}, {255, 27, 2, 2, 118, 255, 255, 255, 218, 2, 2, 164}, {
         106, 0, 1, 96, 255, 255, 255, 255, 218, 1, 1, 163}, {74, 1, 2, 213, 
         255, 255, 255, 184, 17, 2, 2, 164}, {12, 1, 49, 250, 255, 255, 255, 
         97, 2, 2, 2, 83}, {2, 1, 14, 220, 255, 255, 223, 12, 2, 2, 2, 59}, {
         54, 1, 2, 38, 113, 164, 118, 2, 2, 2, 2, 107}, {157, 0, 1, 1, 1, 1, 
         0, 1, 1, 1, 27, 255}, {255, 153, 26, 2, 2, 2, 1, 2, 2, 6, 160, 
         255}, {255, 255, 234, 174, 128, 128, 1, 2, 2, 66, 255, 255}, {255, 
         255, 255, 255, 255, 215, 1, 2, 18, 205, 255, 255}, {255, 255, 255, 
         255, 255, 131, 1, 2, 71, 255, 255, 255}, {255, 255, 255, 255, 178, 1,
          0, 37, 209, 255, 255, 255}, {255, 255, 255, 247, 83, 2, 1, 76, 255, 
         255, 255, 255}, {255, 255, 255, 140, 2, 2, 38, 233, 255, 255, 255, 
         255}, {255, 255, 255, 89, 2, 2, 120, 255, 255, 255, 255, 255}, {255, 
         255, 255, 70, 2, 100, 255, 255, 255, 255, 255, 255}}, {{0, 20}, {12, 
         0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{12, 20},
       PlotRange->{{0, 12}, {0, 20}}], " ", "->", " ", "9"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 250, 128, 24, 61, 172, 255, 255, 255, 255, 
         255, 255}, {255, 255, 220, 52, 2, 2, 18, 18, 56, 249, 255, 202, 202, 
         255}, {255, 255, 31, 2, 27, 132, 237, 166, 8, 201, 242, 42, 19, 
         228}, {255, 164, 1, 13, 212, 255, 255, 205, 96, 255, 73, 2, 11, 
         222}, {255, 157, 1, 22, 255, 255, 255, 255, 255, 156, 7, 2, 135, 
         255}, {255, 217, 0, 9, 207, 255, 255, 255, 175, 1, 1, 122, 255, 
         255}, {255, 209, 1, 2, 29, 183, 160, 115, 23, 2, 2, 197, 255, 255}, {
         255, 187, 1, 2, 2, 2, 2, 1, 2, 2, 45, 215, 255, 255}, {255, 255, 236,
          153, 44, 2, 2, 1, 28, 206, 246, 255, 255, 255}, {255, 255, 255, 255,
          80, 2, 2, 47, 224, 255, 255, 255, 255, 255}, {255, 255, 255, 159, 
         31, 1, 1, 59, 255, 255, 255, 255, 255, 255}, {255, 255, 250, 38, 2, 
         21, 7, 10, 177, 255, 255, 255, 255, 255}, {255, 255, 128, 2, 57, 249,
          127, 1, 52, 255, 255, 255, 255, 255}, {255, 239, 9, 2, 170, 255, 
         210, 1, 19, 243, 255, 255, 255, 255}, {255, 120, 1, 55, 237, 255, 
         255, 77, 2, 140, 255, 255, 255, 255}, {230, 24, 0, 179, 255, 255, 
         255, 99, 1, 80, 255, 255, 255, 255}, {215, 2, 1, 216, 255, 255, 202, 
         16, 4, 169, 255, 255, 255, 255}, {243, 73, 1, 76, 176, 87, 20, 1, 22,
          255, 255, 255, 255, 255}, {255, 172, 1, 2, 2, 2, 2, 48, 185, 255, 
         255, 255, 255, 255}, {255, 255, 174, 17, 2, 55, 137, 232, 255, 255, 
         255, 255, 255, 255}}, {{0, 20}, {14, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{14, 20},
       PlotRange->{{0, 14}, {0, 20}}], " ", "->", " ", "8"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 251, 186, 19, 1, 37, 243, 255, 255, 
         255, 255}, {255, 255, 255, 255, 119, 3, 3, 2, 3, 234, 255, 255, 255, 
         255}, {255, 255, 255, 203, 13, 3, 11, 19, 3, 137, 255, 255, 255, 
         255}, {255, 228, 129, 23, 3, 19, 144, 212, 3, 103, 255, 255, 255, 
         255}, {255, 149, 2, 3, 56, 189, 255, 212, 3, 68, 255, 255, 255, 
         255}, {244, 36, 1, 16, 238, 255, 255, 212, 2, 146, 255, 255, 237, 
         255}, {156, 3, 16, 187, 255, 255, 255, 226, 87, 241, 233, 127, 70, 
         255}, {86, 3, 53, 255, 255, 255, 255, 255, 255, 244, 88, 3, 5, 
         197}, {65, 3, 175, 255, 255, 255, 255, 244, 156, 44, 3, 3, 2, 166}, {
         73, 3, 210, 255, 255, 184, 149, 36, 3, 3, 3, 3, 2, 131}, {86, 2, 18, 
         28, 2, 2, 2, 0, 2, 5, 78, 2, 0, 192}, {122, 3, 2, 3, 3, 3, 3, 2, 66, 
         189, 191, 3, 16, 213}, {249, 103, 23, 24, 33, 129, 129, 146, 250, 
         255, 95, 3, 44, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 
         255, 86, 3, 44, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 
         255, 86, 3, 44, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 
         255, 86, 2, 61, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 
         255, 86, 3, 149, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 
         255, 86, 3, 149, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 
         255, 86, 3, 149, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 
         255, 129, 47, 193, 255}}, {{0, 20}, {14, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{14, 20},
       PlotRange->{{0, 14}, {0, 20}}], " ", "->", " ", "9"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxf2Sw35Sp7AOKSDcTM3M8iogFVOTKdAMguPL/fwc7RKScH0gzM0tc
/W/ADBZZx8TEwAQEDDqlIBbH1f/uzMxgNRCCe+5/sIj+7F27ICKB/8Eiou/+
/3cCi4BYIBG+q//LWcEi28CuYmNi8A4FG29/AOIsV5ihLe+gDn0mjDAUAsAu
BYq4wX3HDtVlCBV4qghzM1MNRGQ33LnMHhCROAyRPQiRIojIryllZUzM5kll
ZV0/ISIAhOa1sw==
         "], {{0, 20}, {18, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{18, 20},
       PlotRange->{{0, 18}, {0, 20}}], " ", "->", " ", "8"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 255, 255, 255, 255, 253, 103, 0, 
         221}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 168, 2, 2, 
         107}, {255, 255, 255, 255, 255, 255, 255, 255, 249, 47, 2, 2, 155}, {
         255, 255, 255, 255, 255, 255, 255, 255, 108, 2, 2, 2, 173}, {255, 
         255, 255, 255, 255, 255, 255, 246, 50, 2, 2, 74, 243}, {255, 255, 
         255, 255, 255, 255, 255, 186, 2, 2, 2, 218, 255}, {255, 255, 255, 
         255, 255, 255, 244, 94, 2, 2, 59, 242, 255}, {255, 255, 255, 255, 
         255, 255, 192, 2, 2, 2, 113, 255, 255}, {255, 255, 255, 255, 255, 
         255, 105, 2, 2, 59, 242, 255, 255}, {255, 255, 255, 255, 255, 183, 
         20, 2, 2, 173, 255, 255, 255}, {255, 255, 255, 255, 255, 75, 2, 2, 
         92, 243, 255, 255, 255}, {255, 255, 255, 255, 215, 18, 2, 2, 200, 
         255, 255, 255, 255}, {255, 255, 255, 241, 80, 2, 2, 24, 217, 255, 
         255, 255, 255}, {255, 255, 255, 168, 2, 2, 23, 194, 255, 255, 255, 
         255, 255}, {255, 255, 177, 14, 2, 2, 110, 255, 255, 255, 255, 255, 
         255}, {255, 242, 58, 2, 2, 100, 247, 255, 255, 255, 255, 255, 255}, {
         244, 71, 2, 2, 22, 212, 255, 255, 255, 255, 255, 255, 255}, {230, 2, 
         2, 2, 51, 255, 255, 255, 255, 255, 255, 255, 255}, {230, 2, 2, 2, 
         109, 255, 255, 255, 255, 255, 255, 255, 255}, {242, 50, 20, 146, 253,
          255, 255, 255, 255, 255, 255, 255, 255}}, {{0, 20}, {13, 0}}, {0, 
         255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{13, 20},
       PlotRange->{{0, 13}, {0, 20}}], " ", "->", " ", "1"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxfwR4t/Se824k/v+T9oz+/1FAHKPUOxSBTCZGxsBvCP4fWxZGLnHG
pwiRSYwMWpsrxd/CBQ6yMvIe/u9eDxf47czIe+P//y/P4CJTGVm3oVhzS5Kx
GUT/OPUAar8fozHI2n5dRlHlnSCBGUzM8f//dxkCHaTGZ/b+//+HvAxAgU28
jPJpBz+aMS78/zqQkXPz/7dsjDlf//9fysh2+f8uRsYp/19bMRb//f//mRBj
2P/vwoyK3///iGTkmnjUS4hRa/v/BQyMTf/v7Z7KCAaFT/7/X8DIKKwiDOay
SEz+DbR6GzMjIwOIr1d2COrgw+6McplNFy9+hfkAAJGd+CI=
         "], {{0, 20}, {18, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{18, 20},
       PlotRange->{{0, 18}, {0, 20}}], " ", "->", " ", "6"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 255, 255, 255, 255, 240, 54, 
         157}, {255, 167, 70, 212, 255, 255, 255, 255, 255, 156, 1, 66}, {253,
          86, 1, 196, 255, 255, 255, 255, 255, 154, 1, 160}, {173, 1, 9, 206, 
         255, 255, 255, 255, 255, 48, 5, 188}, {173, 1, 50, 255, 255, 255, 
         255, 255, 235, 33, 28, 255}, {123, 1, 50, 255, 255, 255, 255, 255, 
         190, 1, 28, 255}, {86, 1, 19, 180, 230, 255, 255, 255, 87, 1, 28, 
         255}, {173, 1, 1, 1, 29, 59, 99, 66, 20, 1, 28, 255}, {248, 229, 58, 
         17, 9, 1, 1, 1, 1, 1, 127, 255}, {255, 255, 255, 255, 210, 163, 78, 
         50, 1, 1, 206, 255}, {255, 255, 255, 255, 255, 255, 255, 233, 1, 1, 
         245, 255}, {255, 255, 255, 255, 255, 255, 255, 233, 1, 1, 245, 
         255}, {255, 255, 255, 255, 255, 255, 255, 233, 1, 1, 173, 255}, {255,
          255, 255, 255, 255, 255, 255, 233, 1, 1, 136, 255}, {255, 255, 255, 
         255, 255, 255, 255, 233, 1, 1, 147, 255}, {255, 255, 255, 255, 255, 
         255, 255, 233, 0, 1, 217, 255}, {255, 255, 255, 255, 255, 255, 255, 
         233, 1, 1, 136, 255}, {255, 255, 255, 255, 255, 255, 255, 235, 12, 1,
          30, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 87, 1, 28, 
         255}, {255, 255, 255, 255, 255, 255, 255, 255, 158, 63, 171, 
         255}}, {{0, 20}, {12, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{12, 20},
       PlotRange->{{0, 12}, {0, 20}}], " ", "->", " ", "4"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHx//8/TaULtm2bGhOTuW3bk/8gsJSJkQkIwASv+mKgSCuSCCOTCFDZ
Qw0gx3BF/uGTjU6MTKxngYqeOjExsa8GMi6KMzK5g03678vI6PTk/2ZRRgbB
pxCRr+FMTI6JrExMqlCB//8fyIJNtv0EE/j/QhEowpr8Hi5Qrga0WPMgnP/E
iREIGCzgAmfVgUYoxDNawgTugwytfbWR0fAnROC3GdB5c77/38DIdg8icgJo
KdC9H8XhuvIYGWP+//+SyciwBibCxKTZPsWOiUn7O1SkGhYQR+FWSYBFBPvh
rvl/e0KsTWzWNYQAAHaK2xo=
         "], {{0, 20}, {18, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{18, 20},
       PlotRange->{{0, 18}, {0, 20}}], " ", "->", " ", "8"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mTAQiwDxfzTw59eD+3DO29h7TxYV+8szMspCRf4uUmMEAQ5e3rgNUEXZQD5L
VMWORwhTeoFCEXtRDfZkZMz4gmrZEka+ouuze12tFiLEchhNuYH2KfHznYAJ
veMFGqew6fv/GYzTYGK/J9UtufgNyPgiGozuh///Jc3/oAs94LECi72+ixCr
YewBUbt0xeBC9635n4FoDkZbmNBZMcYuMMOdsRwq1MPFmP0OzFqm9BRE3Vsd
zqy29y9Edhkjb0JCgjU7I2P2W7h7cwJAoHz9979wuwChbCmh
         "], {{0, 19}, {20, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{20, 19},
       PlotRange->{{0, 20}, {0, 19}}], " ", "->", " ", "5"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU//////2FCyf9GRwm/PsPB1PVmYBAK946Ei60h42JSVrn4s//l8TuQoXu
CDAxmb8CM4NKoWJHmZi4dkGYFlFQMQUmplAIaxczTIwBLjaHCSbGyMRVD2E1
Mbn8hrD0mdgP/wHSZ4O4mJh0tNpvAtk3eZmYTBqOJAsCXTT3bTC7+Vmg4AZW
JjAQS1kO5J3w4rgFpH6t42Vi0a5fDTHrr4rMEyA1m42pGeFVVaY1QNKFSeMD
QmwvkxFYzAsh9P8KExNYTP05XOiqHJMpkFrAzqQxfQ9IYP/sEBkmwd0gZgnI
OapAwMLExGL/GKJhX5G1FdiR2nm7kYz+d3FF9cWLn8BsAKFFFFY=
         "], {{0, 20}, {20, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{20, 20},
       PlotRange->{{0, 20}, {0, 20}}], " ", "->", " ", "8"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxdUDEOwjAMtJgYEeID/ILRjKxFPKAVoWIJUoqEmPw0Py04cRvsWnKUO93F
OR+HV/fYAMC0laPrP+eU+u91J+AWp+cYw/0S32EM6TQU2UF6L52XYgDKtoTw
lEAkxJWAEBxRC7lZRFE0AOynkFJ2LNU7zdK/3BAFUEbzb3W5n86MM6GwRsJr
E9VdYGMYNT3rO1wjaCzU1HY9S3K7Li7JG/oBdlL2Qg==
         "], {{0, 20}, {18, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{18, 20},
       PlotRange->{{0, 18}, {0, 20}}], " ", "->", " ", "0"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwLxf2TwtoVJHJn/0oKJuQvB/V4vxOyz5C+cfzOEmTnlDkL+kj0z96Yf
CP4JYQaBqUjGnRZnNt6NxL/iyCxyCokPNE/4AbL99swiKPxmoHmPald8gfFX
8zJVAw1lKoTyv+gwx50X5eBnCod5gJl5fT/HXH+4wETm6P+OLv91mNZD+Ge5
mK4eYtpVwpQJVbCKmflqtloOM/MOqMBGFuacZGZm5hlwV1QwMzMxc8R+hAv8
7nNwyLmAcCYATP0GOA==
         "], {{0, 20}, {17, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{17, 20},
       PlotRange->{{0, 17}, {0, 20}}], " ", "->", " ", "6"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxfyi432nAyMjIwFgKZG/tFgUCASYIkL71yIGbCQXMn4fKZ1J8sZod
wuJWUckD0dr//6+sUZoBBFv+//8AFYGDleYgkSKEwCsTkEDVX7jAMxuwcScR
ArYgvlzJV7iII0hA8gLCkBUgZ7JdhPO/57OABKIQKtaCDV2GEFgGdnbGL7jA
Ih6QgN03hBJ7kIDEPiTXr+AHeecpksj/OKDIRmSB/++bmTo+I7gA6Xnb6w==

         "], {{0, 20}, {18, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{18, 20},
       PlotRange->{{0, 18}, {0, 20}}], " ", "->", " ", "7"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
         239, 29, 214}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
         255, 229, 1, 57}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
         255, 204, 1, 71}, {255, 255, 157, 249, 255, 255, 255, 255, 255, 255, 
         255, 83, 1, 123}, {255, 255, 25, 156, 255, 255, 255, 255, 255, 255, 
         234, 21, 1, 204}, {255, 246, 22, 86, 255, 255, 255, 255, 255, 255, 
         133, 1, 64, 250}, {255, 179, 1, 86, 255, 255, 255, 255, 255, 249, 57,
          1, 27, 242}, {243, 42, 1, 140, 255, 255, 255, 255, 255, 90, 1, 1, 
         81, 255}, {197, 1, 12, 211, 255, 255, 141, 62, 97, 10, 1, 1, 118, 
         255}, {36, 1, 1, 78, 89, 5, 1, 1, 1, 1, 1, 25, 253, 255}, {78, 1, 1, 
         1, 1, 1, 1, 85, 2, 1, 1, 107, 255, 255}, {239, 19, 8, 61, 61, 61, 
         177, 255, 119, 4, 61, 195, 255, 255}, {255, 228, 220, 255, 255, 255, 
         255, 252, 107, 3, 183, 255, 255, 255}, {255, 255, 255, 255, 255, 255,
          255, 182, 1, 1, 170, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 
         250, 96, 1, 73, 245, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 
         204, 1, 1, 215, 255, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 
         204, 1, 1, 176, 255, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 
         204, 1, 46, 245, 255, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 
         213, 9, 61, 255, 255, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 
         255, 207, 139, 255, 255, 255, 255, 255}}, {{0, 20}, {14, 0}}, {0, 
         255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{14, 20},
       PlotRange->{{0, 14}, {0, 20}}], " ", "->", " ", "4"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 255, 255, 255, 235, 217, 128, 97,
          0, 166}, {255, 255, 255, 255, 255, 255, 206, 139, 35, 2, 2, 2, 54, 
         225}, {255, 255, 255, 255, 253, 97, 13, 2, 2, 3, 49, 172, 245, 
         255}, {255, 255, 255, 255, 149, 2, 2, 2, 42, 140, 255, 255, 255, 
         255}, {255, 255, 255, 239, 41, 2, 19, 122, 251, 255, 255, 255, 255, 
         255}, {255, 255, 254, 151, 2, 2, 107, 255, 255, 255, 255, 255, 255, 
         255}, {255, 255, 244, 2, 2, 2, 142, 255, 255, 255, 255, 255, 255, 
         255}, {255, 255, 244, 2, 2, 2, 14, 60, 60, 131, 238, 255, 255, 
         255}, {255, 255, 144, 2, 2, 2, 2, 2, 2, 2, 18, 137, 249, 255}, {255, 
         255, 207, 22, 20, 155, 163, 163, 109, 20, 2, 2, 92, 245}, {255, 255, 
         255, 222, 220, 255, 255, 255, 255, 219, 125, 2, 2, 212}, {255, 255, 
         255, 255, 255, 255, 255, 255, 255, 255, 157, 2, 2, 157}, {255, 255, 
         255, 255, 255, 255, 255, 255, 255, 255, 131, 2, 2, 129}, {255, 223, 
         161, 255, 255, 255, 255, 255, 255, 164, 11, 2, 2, 212}, {250, 63, 70,
          255, 255, 255, 255, 255, 164, 5, 2, 2, 76, 253}, {137, 2, 121, 255, 
         255, 255, 255, 231, 13, 2, 2, 9, 195, 255}, {104, 2, 77, 255, 255, 
         204, 128, 29, 2, 2, 2, 162, 255, 255}, {163, 2, 2, 6, 6, 4, 2, 2, 2, 
         49, 183, 254, 255, 255}, {242, 77, 2, 2, 2, 2, 2, 57, 173, 229, 255, 
         255, 255, 255}, {255, 208, 68, 150, 110, 162, 218, 247, 255, 255, 
         255, 255, 255, 255}}, {{0, 20}, {14, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{14, 20},
       PlotRange->{{0, 14}, {0, 20}}], " ", "->", " ", "5"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU/4eAL9u2NTHN3bYNzLman59/7f/qeBYWJhYgyDsIFJMGMuapCrNAxZgk
jv//D2GxsBgXFhQmgliSB6FiOTuugQzdYQ7kFv4/pcjExMSQte0qxC4GIG/7
/4MSYL1G+SDjpwFZzg///3/Yxwc1Xk0NyFJuAWuYUWAEt9f5NdTF//PhYlNg
Qtv8QRYxgYm5ENumgZXoTKkHKy4EihwFmcypsfLZ/193ooFiwof+/1cDyZZB
DNkA8tG1/9P4QP74ChJ54i0B1rsNZPKp///vA8MKbAfvjP/+IOMV8/MdoW5h
6f//fwUimIBYLvrOL6Aha4ThYkmF16AOPrRjR3POjh07tu/4ChUBAIxxtyc=

         "], {{0, 20}, {20, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{20, 20},
       PlotRange->{{0, 20}, {0, 20}}], " ", "->", " ", "8"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxf1SwibEUTUSb0R3CWDb5L5g+zAYR+ZEuAVUcyAgRucjIaPAcxHgl
ysiYBaR/BzNq7gIr8WdkFL0OpLMYGXPBAodYGBl7gfRdfkbBG2ARL0ZGxk3/
///LZGScCtT69d8koJIp//7/f8TIyH7naqqHxmsXoJIrQKXmjIzMZryMjBqb
gAISj4EiCoxgYMFuz8jIdxEocIYbxJfKPZuTy8goAzI/GshnXfr49/+TMoyM
c0Ei6xgZo7+CGEArTX+BGM8kQl+B6JuCjAz1EG/fglBzGBklH6EETAwjo9d/
NBH2A6giOxgXQlkAhSL11A==
         "], {{0, 20}, {18, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{18, 20},
       PlotRange->{{0, 18}, {0, 20}}], " ", "->", " ", "4"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU/weBTUuqGMyWHP+PAHe8ebltt4kLyUW/+wgVuqjEFLMXSP/KlWXShgh9
UmISugNhHmLi7v8FYrxjEtoD1fGMiYnpPojxZ5Lff7gYV8ev/6igG2YeHHyX
5FA4gyp0JoFJ8BSaMl4mJuaQNddRxAQF1s3j4tSp+PYTTfHTVD4mn///3z5D
kZjNJLqnW4sJ2e//jzIxLZvCx7QGXez/fCahmqloYn9m8TNx1MDMfKivkvMF
SM8Eer198WywWA0TRM/fD2k+vBzsgiDA6bwFbkxzRiETSPkykEYAXp00Cg==

         "], {{0, 20}, {20, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{20, 20},
       PlotRange->{{0, 20}, {0, 20}}], " ", "->", " ", "3"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{61, 230, 255, 255, 255, 255}, {69, 52, 255, 255, 255, 
         255}, {197, 12, 255, 255, 255, 255}, {220, 43, 182, 255, 255, 255}, {
         93, 4, 156, 255, 255, 255}, {118, 0, 156, 255, 255, 255}, {247, 36, 
         62, 251, 255, 255}, {255, 67, 1, 178, 255, 255}, {255, 147, 1, 100, 
         255, 255}, {255, 249, 1, 100, 255, 255}, {255, 253, 79, 100, 255, 
         255}, {255, 255, 99, 2, 233, 255}, {255, 255, 99, 1, 146, 255}, {255,
          255, 99, 1, 133, 255}, {255, 255, 99, 1, 42, 255}, {255, 255, 192, 
         1, 42, 255}, {255, 255, 202, 1, 14, 213}, {255, 255, 247, 96, 1, 
         193}, {255, 255, 255, 232, 4, 127}, {255, 255, 255, 196, 2, 89}}, {{
         0, 20}, {6, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{6, 20},
       PlotRange->{{0, 6}, {0, 20}}], " ", "->", " ", "1"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU/0cCjxcUFMgwcl8Fcx5Mq/aTlZEVYgSDvSChHn0Ih5FDj9vPreQDUOgF
H5Arx2hQt+ox3JjNjIxpxz6//YFs9BpG5p3/UcEPKUYRNKH/DxgZl6OLTWcU
PvUNQ4yRUX8TqtgVsOv0bMq/Iwl+y7TgBQlHoppw/Xi5AiNjOLpV92MYudHF
/pczOsCYRyaCPfW1iZGxACp0QZXR/+bOlUUajAwy76Bie4AWsjGDrOWvhmm9
IwkJOn7HuQijV8fI2SbU772LZBsANFYpUA==
         "], {{0, 20}, {20, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{20, 20},
       PlotRange->{{0, 20}, {0, 20}}], " ", "->", " ", "5"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{172, 62, 53, 226, 255, 255}, {24, 1, 1, 56, 255, 255}, {
         24, 1, 1, 9, 255, 255}, {45, 1, 1, 9, 255, 255}, {188, 1, 1, 9, 255, 
         255}, {188, 1, 1, 9, 255, 255}, {188, 1, 1, 9, 255, 255}, {188, 1, 1,
          9, 255, 255}, {188, 1, 1, 4, 158, 255}, {188, 1, 1, 1, 100, 255}, {
         233, 67, 1, 1, 100, 255}, {255, 98, 1, 1, 100, 255}, {255, 98, 1, 1, 
         100, 255}, {255, 98, 1, 1, 100, 255}, {255, 98, 1, 1, 100, 255}, {
         255, 98, 1, 1, 100, 255}, {255, 98, 1, 1, 100, 255}, {255, 189, 4, 1,
          100, 255}, {255, 255, 7, 1, 6, 145}, {255, 255, 7, 1, 1, 25}}, {{0, 
         20}, {6, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{6, 20},
       PlotRange->{{0, 6}, {0, 20}}], " ", "->", " ", "1"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 173, 82, 2, 21, 103, 103, 143, 234, 
         255, 255}, {255, 255, 255, 92, 12, 2, 3, 205, 43, 2, 3, 52, 194, 
         255}, {255, 255, 193, 1, 22, 132, 255, 255, 214, 92, 32, 1, 2, 
         255}, {255, 255, 113, 2, 104, 255, 255, 255, 255, 255, 235, 83, 3, 
         173}, {255, 255, 72, 1, 104, 255, 255, 255, 255, 255, 255, 123, 2, 
         113}, {255, 255, 153, 2, 23, 214, 255, 255, 255, 255, 132, 2, 3, 
         235}, {255, 255, 255, 62, 2, 41, 224, 255, 173, 41, 2, 52, 235, 
         255}, {255, 255, 255, 204, 23, 2, 23, 52, 12, 2, 84, 235, 255, 
         255}, {255, 255, 255, 255, 214, 82, 2, 1, 2, 1, 104, 255, 255, 
         255}, {255, 255, 255, 255, 255, 245, 205, 2, 3, 2, 144, 255, 255, 
         255}, {255, 255, 255, 255, 255, 244, 123, 1, 2, 173, 255, 255, 255, 
         255}, {255, 255, 255, 255, 255, 163, 3, 2, 84, 255, 255, 255, 255, 
         255}, {255, 255, 255, 255, 193, 1, 2, 31, 235, 255, 255, 255, 255, 
         255}, {255, 255, 255, 234, 52, 2, 3, 215, 255, 255, 255, 255, 255, 
         255}, {255, 255, 234, 82, 2, 11, 174, 255, 255, 255, 255, 255, 255, 
         255}, {255, 255, 72, 2, 3, 93, 255, 255, 255, 255, 255, 255, 255, 
         255}, {255, 123, 2, 1, 63, 255, 255, 255, 255, 255, 255, 255, 255, 
         255}, {255, 2, 3, 2, 185, 255, 255, 255, 255, 255, 255, 255, 255, 
         255}, {92, 0, 2, 113, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
         255}, {93, 2, 43, 235, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
         255}}, {{0, 20}, {14, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{14, 20},
       PlotRange->{{0, 14}, {0, 20}}], " ", "->", " ", "9"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 111, 99, 0, 9, 61, 114, 241, 255}, {
         255, 255, 253, 137, 8, 22, 81, 120, 52, 4, 152, 255}, {255, 255, 167,
          2, 139, 255, 255, 255, 255, 183, 207, 255}, {255, 223, 30, 139, 253,
          255, 255, 255, 255, 203, 21, 164}, {255, 158, 60, 255, 255, 255, 
         255, 255, 255, 43, 2, 195}, {194, 0, 179, 255, 255, 255, 255, 159, 
         31, 1, 1, 255}, {157, 51, 249, 255, 255, 247, 115, 70, 46, 2, 48, 
         255}, {187, 19, 228, 255, 212, 131, 139, 243, 109, 2, 100, 255}, {
         255, 153, 65, 142, 125, 250, 255, 255, 80, 2, 190, 255}, {255, 255, 
         255, 232, 255, 255, 255, 239, 20, 33, 241, 255}, {255, 255, 255, 255,
          255, 255, 255, 137, 1, 63, 255, 255}, {255, 255, 255, 255, 255, 255,
          255, 137, 2, 146, 255, 255}, {255, 255, 255, 255, 255, 255, 255, 70,
          27, 242, 255, 255}, {255, 255, 255, 255, 255, 255, 147, 5, 96, 255, 
         255, 255}, {255, 255, 255, 255, 255, 255, 99, 10, 207, 255, 255, 
         255}, {255, 255, 255, 255, 255, 194, 0, 81, 255, 255, 255, 255}, {
         255, 255, 255, 255, 255, 113, 6, 167, 255, 255, 255, 255}, {255, 255,
          255, 255, 255, 60, 127, 255, 255, 255, 255, 255}, {255, 255, 255, 
         255, 203, 7, 157, 255, 255, 255, 255, 255}, {255, 255, 255, 255, 119,
          40, 232, 255, 255, 255, 255, 255}}, {{0, 20}, {12, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{12, 20},
       PlotRange->{{0, 12}, {0, 20}}], " ", "->", " ", "9"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxfxj4Nb02iIHBZBuU++d6uRwTGJj+AAt8agRxOERERJiZ1gL5v6ep
gvg124FsNaYDQIF2kALz7WDVU5k+/38JEpCufwbif8wxZ/r8TR0oIL8XrOCD
F5D9+RaQUNwJFnjvDWRLfI0FEk/A/OM+IPN6/gOJuK8HDhxIMwY7J+8XSITT
jAkGVv/8/38mEwJIV4EcfM8XIVIP8dLvKx2Rq1aDBFy/w739/50bUED2HELg
gytI4DxC4P9SoIAMssAjDqDIZiSB/1lMTJKT/iAJfCpkEr+MxAcAUX7Zpg==

         "], {{0, 20}, {18, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{18, 20},
       PlotRange->{{0, 18}, {0, 20}}], " ", "->", " ", "9"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 191, 175, 175, 175, 59, 48, 175, 247, 
         255, 255, 255}, {255, 255, 255, 177, 20, 1, 1, 1, 1, 1, 1, 87, 178, 
         255, 255}, {255, 255, 255, 161, 56, 1, 1, 1, 1, 1, 1, 1, 9, 215, 
         255}, {255, 255, 255, 255, 243, 83, 1, 1, 1, 1, 1, 1, 1, 115, 255}, {
         255, 255, 255, 255, 255, 240, 93, 45, 16, 1, 1, 1, 1, 36, 255}, {255,
          255, 255, 255, 255, 255, 255, 255, 87, 1, 1, 1, 1, 36, 255}, {255, 
         255, 255, 255, 255, 255, 255, 184, 18, 1, 1, 1, 1, 54, 255}, {255, 
         255, 255, 255, 255, 255, 251, 98, 1, 1, 1, 1, 1, 212, 255}, {255, 
         255, 255, 255, 255, 251, 115, 1, 1, 1, 1, 39, 185, 243, 255}, {255, 
         255, 255, 255, 255, 148, 1, 1, 1, 1, 1, 54, 255, 255, 255}, {255, 
         255, 255, 255, 255, 148, 1, 1, 1, 1, 1, 54, 255, 255, 255}, {255, 
         255, 255, 220, 165, 5, 1, 1, 1, 1, 1, 54, 255, 255, 255}, {255, 255, 
         255, 131, 1, 1, 1, 1, 1, 1, 1, 157, 255, 255, 255}, {255, 255, 178, 
         13, 1, 1, 1, 1, 1, 15, 157, 252, 255, 255, 255}, {255, 181, 17, 1, 1,
          1, 1, 1, 1, 34, 123, 123, 123, 140, 255}, {246, 98, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 36, 255}, {193, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          20, 191}, {240, 87, 1, 1, 1, 1, 1, 1, 1, 1, 1, 41, 194, 194, 221}, {
         255, 114, 1, 1, 1, 1, 1, 1, 1, 28, 98, 130, 255, 255, 255}, {255, 
         211, 177, 92, 1, 1, 1, 1, 1, 193, 255, 255, 255, 255, 255}}, {{0, 
         20}, {15, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{15, 20},
       PlotRange->{{0, 15}, {0, 20}}], " ", "->", " ", "2"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQgyT/I4FGhmsg6m/KHDD3jjJTO4huYxK4AaLDGMXOAqmfEoysJ4D0K17G
SBA3gokxDyTtwcS4FUjdZ2ISfwmkH4gyqfwA0mlMTLtAhkYzMdUB6YPMTHK/
QboZmTTeAOm9jIw5IN3TGBkng+h9jEz8Wcc/f9ViZNn9//+PT0A+EKhrMjGy
lO6dZnLgmT4jDDAxMqn8//+kVIobyAIjnnqwwx+tXq3AxOS8etUzuNcEGc1/
Ifn0IQuTHbLP5zMy2uLjOzAyrUPmpzCFQlkAmHHaJA==
         "], {{0, 20}, {16, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{16, 20},
       PlotRange->{{0, 16}, {0, 20}}], " ", "->", " ", "4"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQgyT/w8HvTnYGpTsw3pt+USYg2PL/6GYgsNBSAvGYRE4dFWBCAg7/93KB
aEUVlboVQDr4///JAgLhM74ATfjAxMR2BmH8B3MmptkI7v/HQOV3kfgZTEzh
LxHc60JMKl+RpLOYmOqQuN/tmJi7kfg5TEy8SNzLUkz8x5H4S5mYZP+j8r2Q
+c1MTMuQ+TJofHU0/lImmWsQFgAk0uwa
         "], {{0, 20}, {16, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{16, 20},
       PlotRange->{{0, 16}, {0, 20}}], " ", "->", " ", "7"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHx////f6cu/I8Cnvowh///3xu2a/IbqEgfE7OoVY4oMzOT4xu4CJAH
xsfBAof5GJiY+GQz45kYFZ+BBA6IMjNpJl74/ymYmckarCQMqHo1UKUekOZf
BxLhYWbe+O3/fwewOTxNQBED7i0giSImJiZGILa/8L9mHcR8Uah9CXB33jwO
BK3MTBpv/iODrxuZmJNRffTfnikcTSSSGV2ECV3kDFzkQNFhIPljOhMjx1mY
/0Vrjh3LBLonBBFGEBeGH4eKfIKKmALZACzs8Yc=
         "], {{0, 20}, {18, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{18, 20},
       PlotRange->{{0, 18}, {0, 20}}], " ", "->", " ", "3"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 41, 83, 255}, {255, 255, 2, 3, 255}, {255, 255, 
         21, 2, 153}, {255, 255, 103, 3, 153}, {255, 255, 41, 2, 214}, {255, 
         255, 2, 3, 255}, {255, 214, 1, 2, 255}, {255, 173, 2, 3, 255}, {255, 
         153, 1, 2, 255}, {255, 153, 2, 43, 255}, {255, 153, 1, 104, 255}, {
         255, 153, 2, 104, 255}, {255, 52, 1, 205, 255}, {234, 32, 22, 225, 
         255}, {183, 2, 52, 255, 255}, {103, 3, 52, 255, 255}, {103, 2, 152, 
         255, 255}, {22, 3, 235, 255, 255}, {0, 63, 255, 255, 255}, {2, 144, 
         255, 255, 255}}, {{0, 20}, {5, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{5, 20},
       PlotRange->{{0, 5}, {0, 20}}], " ", "->", " ", "1"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 255, 255, 236, 192, 19, 10, 135, 
         233}, {255, 255, 255, 255, 255, 234, 140, 34, 2, 2, 2, 2, 67}, {255, 
         255, 255, 250, 88, 32, 2, 1, 2, 41, 6, 2, 36}, {255, 255, 208, 20, 2,
          2, 21, 148, 239, 92, 2, 2, 196}, {255, 218, 59, 2, 35, 91, 243, 255,
          116, 2, 2, 111, 236}, {247, 82, 2, 5, 190, 255, 255, 255, 78, 45, 6,
          81, 255}, {131, 2, 2, 167, 255, 255, 245, 229, 41, 2, 2, 62, 255}, {
         122, 2, 2, 233, 227, 128, 14, 1, 2, 2, 2, 167, 255}, {122, 2, 2, 62, 
         27, 2, 2, 140, 58, 2, 18, 232, 255}, {170, 2, 2, 2, 2, 35, 208, 240, 
         45, 2, 168, 255, 255}, {255, 230, 144, 144, 211, 255, 240, 48, 0, 57,
          250, 255, 255}, {255, 255, 255, 255, 255, 234, 59, 0, 19, 189, 255, 
         255, 255}, {255, 255, 255, 255, 237, 109, 2, 1, 159, 255, 255, 255, 
         255}, {255, 255, 255, 254, 96, 2, 2, 148, 251, 255, 255, 255, 255}, {
         255, 255, 255, 147, 2, 19, 153, 255, 255, 255, 255, 255, 255}, {255, 
         255, 224, 15, 2, 118, 255, 255, 255, 255, 255, 255, 255}, {255, 204, 
         15, 2, 28, 221, 255, 255, 255, 255, 255, 255, 255}, {251, 117, 2, 28,
          216, 255, 255, 255, 255, 255, 255, 255, 255}, {150, 2, 2, 205, 255, 
         255, 255, 255, 255, 255, 255, 255, 255}, {228, 64, 150, 252, 255, 
         255, 255, 255, 255, 255, 255, 255, 255}}, {{0, 20}, {13, 0}}, {0, 
         255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{13, 20},
       PlotRange->{{0, 13}, {0, 20}}], " ", "->", " ", "9"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxfyD4OsGbkdF+/6//MHBBmgkIGJkmwwSeqzPJh86fL8Sk+AkmlOj1
HkieFWNaDRN5+w5M5SFEoCCPyR9DxAhDZBaGCJo5n9nQRSoZVeHst4fzgMCE
SfnZs58g/s9OWSaIL4DAOymp8Fc5E5OAkZEsE6OckTS/pGbi+ZNMvNGn/z83
Y0p48P/O6ZsfQXb2/f//zJxJ9RHMWJD/nlkwqT2EW8TElO0uzaR+H+GM6SAr
1JAE/n+q1pKf+x3ZqQDJ/w48
         "], {{0, 20}, {18, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{18, 20},
       PlotRange->{{0, 18}, {0, 20}}], " ", "->", " ", "2"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 219, 33, 2, 2, 0, 75, 148, 250, 255, 255}, {255,
          219, 36, 3, 3, 3, 2, 3, 3, 120, 250, 255}, {255, 85, 3, 3, 28, 72, 
         71, 72, 53, 3, 118, 255}, {160, 2, 3, 28, 205, 255, 255, 255, 185, 3,
          3, 212}, {139, 2, 3, 176, 255, 255, 255, 255, 248, 44, 3, 87}, {24, 
         0, 111, 255, 255, 255, 255, 255, 185, 2, 2, 34}, {25, 2, 163, 255, 
         255, 255, 255, 255, 185, 3, 3, 139}, {25, 2, 163, 255, 255, 255, 255,
          255, 102, 3, 3, 139}, {120, 2, 53, 230, 255, 255, 246, 89, 15, 3, 3,
          139}, {192, 2, 3, 19, 25, 25, 22, 3, 3, 3, 3, 192}, {255, 74, 2, 2, 
         2, 2, 0, 2, 2, 2, 2, 255}, {255, 246, 142, 49, 49, 49, 111, 134, 3, 
         3, 24, 255}, {255, 255, 255, 255, 255, 255, 255, 177, 3, 3, 118, 
         255}, {255, 255, 255, 255, 255, 255, 255, 135, 3, 3, 118, 255}, {255,
          255, 255, 255, 255, 255, 255, 208, 3, 3, 170, 255}, {255, 255, 255, 
         255, 255, 255, 255, 93, 2, 2, 222, 255}, {255, 255, 255, 255, 255, 
         255, 255, 94, 3, 3, 118, 255}, {255, 255, 255, 255, 255, 255, 255, 
         126, 3, 3, 34, 255}, {255, 255, 255, 255, 255, 255, 255, 208, 3, 3, 
         98, 255}, {255, 255, 255, 255, 255, 255, 255, 250, 118, 3, 170, 
         255}}, {{0, 20}, {12, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{12, 20},
       PlotRange->{{0, 12}, {0, 20}}], " ", "->", " ", "9"}], ",", " ", 
     RowBox[{
      GraphicsBox[
       TagBox[
        RasterBox[{{255, 255, 255, 255, 255, 255, 59, 23, 231, 255, 255, 255, 
         255, 255}, {255, 255, 255, 255, 255, 176, 11, 1, 171, 255, 255, 255, 
         255, 255}, {255, 255, 255, 255, 255, 51, 2, 1, 149, 255, 255, 255, 
         255, 255}, {255, 255, 255, 255, 129, 4, 2, 71, 252, 255, 255, 255, 
         255, 255}, {255, 255, 255, 239, 20, 2, 2, 157, 255, 255, 255, 255, 
         255, 255}, {255, 255, 255, 152, 1, 1, 24, 217, 255, 255, 255, 255, 
         255, 255}, {255, 255, 227, 23, 2, 2, 144, 255, 255, 255, 255, 255, 
         255, 255}, {255, 255, 136, 2, 2, 45, 215, 255, 255, 255, 255, 255, 
         255, 255}, {255, 239, 39, 2, 2, 117, 255, 255, 255, 255, 255, 255, 
         255, 255}, {255, 157, 1, 2, 2, 236, 255, 255, 255, 255, 255, 255, 
         255, 255}, {255, 134, 0, 1, 103, 255, 255, 255, 227, 128, 46, 77, 
         121, 246}, {176, 11, 1, 19, 243, 255, 255, 242, 90, 2, 2, 2, 1, 
         133}, {119, 2, 1, 52, 255, 255, 194, 31, 2, 2, 2, 2, 1, 120}, {81, 2,
          24, 224, 255, 181, 29, 1, 2, 2, 2, 2, 24, 186}, {119, 2, 1, 179, 
         255, 43, 2, 1, 2, 2, 2, 2, 84, 246}, {80, 1, 0, 84, 69, 1, 1, 0, 1, 
         1, 1, 122, 255, 255}, {166, 7, 1, 2, 2, 2, 2, 1, 2, 2, 51, 246, 255, 
         255}, {255, 60, 1, 2, 2, 2, 2, 1, 2, 33, 243, 255, 255, 255}, {255, 
         165, 116, 26, 14, 2, 2, 129, 21, 72, 208, 255, 255, 255}, {255, 255, 
         255, 232, 147, 10, 2, 84, 171, 255, 255, 255, 255, 255}}, {{0, 20}, {
         14, 0}}, {0, 255},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{14, 20},
       PlotRange->{{0, 14}, {0, 20}}], " ", "->", " ", "6"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7181249129556513`*^9, 
  3.71812491297128*^9}},ExpressionUUID->"f853c31b-21ea-47e3-8882-\
6c8d13c4de59"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Image\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of classes: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox["10", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "0", "1", "2", "3", "4", "5", "6", "7", "8",
                     "9"}, "RowWithSeparators"], Short[#, 20]& ]], 
                    Annotation[#, 
                    Short[
                    Row[{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, ","], 20], 
                    "Tooltip"]& ], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Image\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of classes: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox["10", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "0", "1", "2", "3", "4", "5", "6", "7", "8",
                     "9"}, "RowWithSeparators"], Short[#, 20]& ]], 
                    Annotation[#, 
                    Short[
                    Row[{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, ","], 20], 
                    "Tooltip"]& ], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["100", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7181249333085833`*^9, 
  3.7181250044212008`*^9},ExpressionUUID->"9013994a-a511-4d19-894d-\
fd12a9cbbb32"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"digit", "[", 
  RowBox[{
   GraphicsBox[
    TagBox[
     RasterBox[{{255, 255, 255, 255, 255, 255, 232, 173, 54, 80, 255, 255, 
      255, 255}, {255, 255, 255, 255, 255, 251, 108, 1, 19, 198, 255, 255, 
      255, 255}, {255, 255, 255, 255, 255, 148, 2, 20, 198, 255, 255, 255, 
      255, 255}, {255, 255, 255, 255, 197, 18, 18, 202, 255, 255, 255, 255, 
      255, 255}, {255, 255, 255, 247, 50, 2, 175, 255, 255, 255, 255, 255, 
      255, 255}, {255, 255, 255, 40, 1, 101, 255, 255, 255, 255, 255, 255, 
      255, 255}, {255, 255, 115, 8, 2, 184, 255, 255, 255, 255, 255, 255, 255,
       255}, {255, 255, 1, 2, 125, 249, 255, 255, 255, 255, 255, 255, 255, 
      255}, {248, 103, 1, 13, 219, 255, 255, 255, 255, 255, 255, 255, 255, 
      255}, {215, 2, 1, 134, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
      255}, {193, 1, 14, 225, 255, 255, 255, 255, 255, 255, 185, 61, 158, 
      246}, {73, 2, 68, 255, 255, 255, 255, 255, 253, 137, 5, 2, 1, 141}, {21,
       2, 157, 255, 255, 255, 255, 206, 88, 2, 2, 2, 72, 243}, {21, 2, 195, 
      255, 255, 233, 140, 9, 2, 2, 2, 2, 172, 255}, {59, 2, 37, 142, 195, 74, 
      2, 1, 2, 2, 55, 175, 255, 255}, {224, 37, 0, 1, 1, 1, 1, 0, 59, 187, 
      255, 255, 255, 255}, {255, 240, 92, 2, 2, 13, 134, 216, 249, 255, 255, 
      255, 255, 255}, {255, 255, 99, 2, 27, 212, 255, 255, 255, 255, 255, 255,
       255, 255}, {255, 255, 1, 28, 212, 255, 255, 255, 255, 255, 255, 255, 
      255, 255}, {255, 255, 1, 194, 255, 255, 255, 255, 255, 255, 255, 255, 
      255, 255}}, {{0, 20}, {14, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    BaseStyle->"ImageGraphics",
    ImageSizeRaw->{14, 20},
    PlotRange->{{0, 14}, {0, 20}}], ",", " ", "\"\<TopProbabilities\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.718125034992773*^9, 
  3.7181250350084066`*^9}},ExpressionUUID->"fc123ce3-0fa6-45b5-bbf3-\
b090add2a88f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"4", "\[Rule]", "0.375915394250394`"}], ",", 
   RowBox[{"6", "\[Rule]", "0.3546565289543567`"}], ",", 
   RowBox[{"0", "\[Rule]", "0.23530504737644292`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7181250369423685`*^9},ExpressionUUID->"539f9308-cec8-4870-80af-\
f2a137b0d922"]
}, Open  ]],

Cell["VI. Visualise the probability distributions of classifier", "Text",
 CellChangeTimes->{{3.7181254200702624`*^9, 
  3.7181254462309113`*^9}},ExpressionUUID->"8b098910-9da0-4f0a-8535-\
65419396ec49"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sampledata", "[", "center_", "]"}], ":=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"MultinormalDistribution", "[", 
      RowBox[{"center", ",", 
       RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "]"}], ",", "30"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"clusters", "=", 
   RowBox[{"sampledata", "/@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "3"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "0"}]}], "}"}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"colors", "=", 
   RowBox[{"{", 
    RowBox[{"Yellow", ",", "Blue", ",", "Green", ",", "Red"}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"clusters", ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Darker", "@", "colors"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.718125448903524*^9, 
  3.718125448903524*^9}},ExpressionUUID->"39638d31-b85f-4199-99ab-\
af1adc46df0f"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[
      NCache[
       Rational[2, 3], 0.6666666666666666], 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], PointSize[
     0.009166666666666668], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAaiPAD8rgBkC2Bn9w7XIBQO4Iei+z
BwlAVjWf8mUgAkButXFB/vb3P+zLIoflTApAwM3T45cw4D/W0alSVY4BQOhE
aL81R+0/faBFUMLo8z+b/+8PPIPyP8QtFH3IcQlAE50fqc3WAkCyGykKCY8H
QJnhh8gBGwdAXeNFh9V3B0AAAlVdTKQOQFiYKOuPiAVAQKghqidVAEArrx0M
O90QQFyS64+3kApAsGpOboly7j9zNb46e6UDQPoGvXxz0PM/WFGakbvH+j9o
lcDjCdELQGoxSX/qLwdAcHo3/dlmyT9Jfdr6zxH/P7gQQnVz7tA/E7erkeqq
AUCFuHmDmvL6P6B3mqtpmwZAGqJiHEmL7z/mjeAYyVH3PwjwL5gwbfs/yrYU
lJJx/z8k5t+cAs/zP0ILCmF/9vI/owt9rWDlA0DVkCVkvZQKQKQ3LAOkNwdA
hloxbA1I/z+SIUZLTrYDQG9DxenccQVAUL5ySscGCkAoA20GdGb+P8+rOr90
vf8/QoLJNCijBUBOzwBue5MFQMabITnnxfw/3CYjXKugEEDGoP9kRRr/PxDZ
Ao/gucw/WOpvhdlGB0Ba1JlpQ/EBQM5E4gx7XeY/BMdgs4UC3D/nKSG1w/b9
P7mXDTRm4PA/W0TcyA==
      "]]}, 
    {RGBColor[0, 0, 
      NCache[
       Rational[2, 3], 0.6666666666666666]], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAyGjrNiKuw79HqOlQaVbzP+B3c/Kl
g+m/rlmtPCnO+z8OlFBsRuThvwD0+0FE3Nc/CMl3AOVfzb+3Ufb+Me/+P8yx
dM4rPPW/FCrolBK59T/39bv6eKD5v9lOj/tgCP0/16a8KbsJB8CMq25Vh7b0
P3Ts1ORZRATAWUbb70nIBEBGZzk5dpUMwNIPc5aUpwxATojbF5PBBsB+xmD7
F2QDQDB7i+lzdOG/P8lqLJiU/z9W8tVe0u/7v/ReS5rGcQpAKu+TtUTmBMDo
UQHnBSHVv8DSTXTR+5i/DtbwAcoI+j8PhTMaGIX7v3jW+KmbCPE/HotopbGP
AMB4xk9qowf+P13OMcJONPq/jC6+gJeoDUBge4VyVYyzP4iTMPa/VgtANEal
WhNaC8CucXO6wWsAQHdyZvLPogTAfJF+yuTPBECEWoy7yAAJwPnK9dDvZvg/
1OLgTgcNA8ALw7U5Z9f6P3Vmo4FnSv+/wZTOyLFn+z9N8KCIrz8EwHqFdY32
WAxANx18eJdK+r/sdho1QozyPyzy3HSQnwTAhKEaGGRnDUByTJGlUDTjvwUD
826rvgZAcysvEP1x/b/2ngvPAl/3PyhhrzZtHwXAUS+7Q5f+CUBJY/MOVbn6
vxuuOmoyBglAFRD2qw==
      "]]}, 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], PointSize[
     0.009166666666666668], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAin5pmmQX8D+2mSrHJYwMwDa+eF2U
Kt4/HMNZn7ei6b8HEjzyUBPDv52wAJ+9Lfe/3X3lIoM087/sA/fdIxYRwIJG
a58kcMo/8nvRdng5DsBmcY5buqzGv2N1KiDcMgPA3ZAEvhSb4D/VWj7a924L
wC25X9b3A8O/AjLxY0S9BcDbHkl5TDfEv32eGbLksg3AUMr5NIfF9r9d8LaU
4O38vxVSlp/Xefg/opD0BN5N+r/R4lbYFXPIvyVqBtnGFQbAptcB/66Fzr+J
HlaIPckJwDvd8/T5ieY/k2lEhUzB/L8XiczXtkPkP8PTcTjZYQjACRTJf7bV
9T9/T7u8eW8JwKB863rI6dk/0F95ZejXBMD8qmUGwBzzv+SscgA+vgvA0rgL
+WO43D+IJrC/k375v9lIhya0ePM/D6fQIML7/r+eItWuv1cCwMuuAcbiKwvA
FFLpKMuX+T9/T5y2Y/QNwPDw+oazAeq/u1lCC9GHD8DzqgIkDUfov5ffXFOa
oAnAS8TER5Lr0r+Qr+j7x/rmv9n1BZVUWgBA11mLQ47kCsDNENPzUXrZP4Q7
x9fSmxPADFxdVPgd5T8kAxtKsMwEwDuJNhCoMOO/fDlR8qnW67/2C4O5yq/v
vzaEucM3SwLACrgEvw==
      "]]}, 
    {RGBColor[
      NCache[
       Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
     0.009166666666666668], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAbUCvotCUtT8Lk/RnDZjcP2vMasnC
AOW/TOeDtv53lj/Ujs3fkG+pPz9LH/wcQPc//535O30B2z+mlLd9mZ7eP79M
wqhsMfU/UA2hCduFvT8EP4gTt2Phv9itJc30XvA/XK02uB+c2r/9ngC7yu7K
v63RVhYVGeA/EXcAnaiytD+fIy71ioPdP/sJr253E+0/QIoh+Wdz9b91X+DS
mVLxP3Ys+PNdDpQ/yOXEJGYGwT/R3wXJhErvP/WSaenQnfE/fkb1KJmD6b+C
HOfxDw3kP2EIQlf07NK/F6Ch234a0T/eHqj7HYnFP/461mWB6uQ/afTm+xTh
5T/OsfEwJDPLv79qRC6OuMU/khYTQ0emAkCBuAjhb36HP1GDjVWQato/U9RU
9AJg4b9vThc3cg8DQBaJifjzM/C/FxIEzSM6/r9uLx/XLtHvP787AnhnouI/
k4v+NTjv7b+RXltLnAXwP86x8CSp4rG/4ShXhzCE6L8TQe0DLjvPv/WqM+cO
utM/vn86Fd5ptz9/XKKbaHvCvx3BkoBO0tY/smRaks1azT99O8n85G7gv2M9
8hINYu0/bsxMkGwuxL/f4h0yyXzpP2e46mFq+dC/A6nyckkH0j/+eXcJgk7f
P/R8+XzPVcQ/SYL9MQ==
      "]]}, {}}, {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{206., Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3.572979399742425, 3.8302237788741422`}, {-4.902171489272295, 
   4.216045560180457}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7181254780269194`*^9},ExpressionUUID->"0d879763-6a71-4093-8b87-\
bc4e0e23bb06"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"plotprobabilities", "[", "method_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", ",", "proba"}], "}"}], ",", 
     RowBox[{
      RowBox[{"c", "=", 
       RowBox[{"Classify", "[", 
        RowBox[{
         RowBox[{"<|", 
          RowBox[{"Thread", "[", 
           RowBox[{"colors", "\[Rule]", "clusters"}], "]"}], "|>"}], ",", 
         RowBox[{"Method", "\[Rule]", "method"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"proba", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Append", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", "y"}], "}"}], ",", "#"}], "]"}], "&"}], "/@", 
          RowBox[{"Lookup", "[", 
           RowBox[{
            RowBox[{"c", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x", ",", "y"}], "}"}], ",", "\"\<Probabilities\>\""}],
              "]"}], ",", "colors"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"-", "4"}], ",", "4", ",", ".5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", 
           RowBox[{"-", "5"}], ",", "4", ",", ".5"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"proba", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
        RowBox[{"Transpose", "[", 
         RowBox[{"proba", ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "2", ",", "1", ",", "4"}], "}"}]}], "]"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"ListPlot3D", "[", 
         RowBox[{"proba", ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", "method"}]}], "]"}], ",", 
        RowBox[{"ListPointPlot3D", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Append", "[", 
              RowBox[{"#", ",", "1"}], "]"}], "&"}], ",", "clusters", ",", 
            RowBox[{"{", "2", "}"}]}], "]"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Opacity", "[", "0.5", "]"}], ",", "#"}], "}"}], 
              "&"}], "/@", "colors"}], ")"}]}]}], "]"}]}], "]"}]}]}], "]"}]}],
   ";"}], "\n", 
 RowBox[{"plotprobabilities", "/@", 
  RowBox[{"{", 
   RowBox[{
   "\"\<LogisticRegression\>\"", ",", "\"\<NearestNeighbors\>\"", ",", 
    "\"\<RandomForest\>\"", ",", "\"\<SupportVectorMachine\>\"", ",", 
    "\"\<NaiveBayes\>\"", ",", "\"\<NeuralNetwork\>\""}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.718125493342992*^9, 
  3.718125493342992*^9}},ExpressionUUID->"c090e2b1-2042-4c53-b030-\
20bb457a11c0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
m1y/dDQFdQ/uC1GdCQ9O35jxjd4f2Mrkcnt/N/rGbhvcF6I6vXlHV+Mvcv0/
twyTv2Irzb3eQ+/zFzB1brsXmBgZ0fu1qpj8xPxtEytTPQb3haiO5Xqn3tGm
9Dgrx+TNphdzyPy5g/tCVGfRuFIvkw56P2Qmk0ekqLvNMQ4c3BeiOrtvpBb/
1aGvE5Fn8tmdgUetOOD5jKI6WWOViv2Fjwb3hej1ny0Qvuvav//Eq78vRP4+
9ucvb1Wn73fd3xeiOpPkjq0Z8i29//Pcfx4mytXvnVuoov98cF8Q0nj8mtcz
zQ5y+nNZJt97tkPnuZTC4H10ojp/l9zPqz+c2Z/XMvkIB/1edb+8wX0hqrPe
2Gl+khE9PkozuU1F9kZBss7gvhDVKfKbo9O+o7I/b2Nyln+nRdsCweC+ENU5
uuvwsc3f+8dTQpLJ7RXXdtZXmw/uC1GdafvOvfd7Su876mFyl54XZfetmftp
M3W4lw7aG+rb9dfppuh84/SMBRWjnQb3hahO0+ILx15t6D/v8JJk8tbZ7+K/
v6c/b0KmTojK2ZSoJHrf/l8m3xQb1GRw58LgvhDVsbjqcGPDBYP++tJMvkx/
oolB2LLBfSGq49ji9WDiPnrfYw2TB2ZWBaNDkYP7QlQn8Xf87aEVlvT7wuRr
bkys+l6yfXBfiOrY4LD3b2Pp6whymHzGva8ZciFvBveFqA51YaPL59uu9OeZ
yY2msjyG74D7OqSxu3nPC37Hj8F9IXq93fINiqsP0cfb8vh/f3dRqg78gwKb
ceB8RBpfeJ2mbq9Jf8/T89bS+Neq/xqSlcsG94Wov7riy3LrC/vvM+8ly+Sd
JtMqzu+YC/aXSmMreYezDQ/p6yNqmPzy/S+9p1/1gfFCAns5534b7ta/P9lL
mslf6e9W8DG2BOOFNN61L/uDfip9XvaXyQumf/sV8om+rziLqfP4r8pMifH9
z230kmTybc/PvE8xcRvcF6I6CrNfbxylSc+TdDP5x3MPpdws9Ab3hagO90b0
UotF1/rr9FB0/qnl2qSE3IDBfSGqY/BwyBctanV/HUkmT+m2mpxotH5wX4jq
BKRap27Moe+72Mbk8l4FO6b8SBjcF6I6e6JUb3Ee0fOT0kx+VeHWOO0z4P7t
ojrzjh2Z4nSUvs9zLZOX9B1SMf6UN7gvRHVmPPd3qy+j5wNlmbymxDH7ZN+V
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
Lpg/JPFfJsfFyrbC+IJudtemCce9jpTD/CSJ2yaYjN9+Cc4lQTfrk7WifOqU
WPbPY3yH2/cVi+/Q91FS1+H6tovvjrPPO+DwtIorJvTc/rmF9n7XyZQrUmLN
XADrO+hjIzLd7282IPPw7Hgz47F2nOvzVPq5xumMH3tjhbdokflkEr+7N2CZ
BS/9XN10Rub2LgnbDnC/6GZDFIp0xs2mn+uaztCLDlWt6oH3PXSzW2tWMrbn
k/5gJP5IcLFY9EqIo6ct/GW2fOArvLeip62ynhJfY/mefN8Qb8zzmX7xPzg3
Ez1tqUFn9PArWC9DT3uGL3fDqTfQnwc9rUr1TunBWugzg572xuHmqwtegOeH
P+kMtVJ/i/d20K8GPa1n5aE54uJa3PO31HPHdX7VdYwG+npfOiPp595gn0yI
o6cd5+wt//Yava94M6Njj4XmFnIONXra0Wp9b+rIubfoaVOOTU/YUA/rm1jH
RkZdo+7YHKR9782M21O+nFGcSNanSLywJnBtxAd4PkRPe8Qq9nS8rxvcb0n8
diFr3Mxt0IcQPW2rAR+P7U3Ig56Wx/1tjVcHjI/oaZk92k9vzYL+0uhpjfpD
VYM2kf7/JM/Vt090yt0gD3raJ3xLNNadJ9ehMeTxvO64yNx2Eox3JF4/X8ko
6ngPbXxpZgh3/Hdw3kkYZ9HTlpu8YcTuAFeAnvaz2vzfDxsbYf2UxH+2nTw0
oekRbXxpZuyJV1tb1QEOEz1t5Qstrz543+TwtK1aUrY7Z4CrQU9r4xelzB9z
jDa+NDO8HLcl9GnD+Iue9qFVhUxLIOnLTfIorxuc8N0BXBB62rGWb7vc0xbT
xhfq+iyr+F4mSc5dNYb4riV7qt92g+tDT9vtPsZbtoteF82M4JxLflVkHRY9
7dXZ376dFoZ9NOhpT4yzODnuHVn3J/HY74rWT1LoddHM6Nqb/bdeHPpqoqfV
XT/QMH47zEehp+1TPCbSEUvcAomXJxk+bpWlnx/dzJBY1Kl1zBf6+aOnfZzw
w0pUAlw0etraZ5O17HvB6aGn3bnx7XW9R7T1yhHXLRYwu7oF+gWhp3XIdxsd
cxb2F6CnVQ+3WqvlAHnQ02639ghrzCUu3RjyNMpYviz4Cj4WPe2JpcJtXy7D
fCx62ulpdfPya6E/J3rajC0loWb+xA+TPMo3Dg39kYH9FOhppTXbJJ8O0s//
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
i6sLiiT3K/S05lliQfxk/xF62uTYN78zSRw9bX3FN3ch8ryBnnbNkzy5UBJH
T/un2KO3hMTR09reXmc7m75fj4o/lsmYs4ncz9HThjy8uj59M+lfQf6/roWj
co520OZjqfiXwqVFCX9p3xf1PZ6cdrQs4yl9Plac1ZxtH+xaQRsvqDxKz0tu
PSV50NOWsJyz+//Svl8qj/zupeMzX9PnY8VZ4oOfBF+8p40XVJ6XK02Spch9
AD3thbmxiUbDtOth5Pc/1Kz0l+w7Rk/r6Z2emthCGy+oPP9V9NxbRfKgp32T
//HI7mHa9UPlEf2gKPGKjBfoaQOcTUXwc0ZPm9DXkHeIuHT0tFnWPpGnhmnX
G5WnPmGDzQkyv4GeVrfqw+wAusMfqQu7akVyn+TwtEELte/i/RM9re3krNYc
8lyKnna59TMeLbIvGz3tuz38XeT35PC0h82U3jgO065nKo92BP++WqhfDk8b
OF3DrZPUL3raz+qZelq4n47EbxpZ1uz/Z7+qOKvo/KwpamS/CXra30PDkkWk
jtDT8hRKSx4spI0vVB5VaVaqHXmvRE87+b3SwaE/tLoY8agD7TO7+mA+Ez1t
qvn9oMRx9OcocdaRmV2NbeQ+g5628MDUoOMDtLoY6a94b5RK/TrafCwV//U9
aM8KJ/pzFHW/3XPRSZPcf9DT7pjIfJE4SKsLKk/JnfZCfdhPxOFpl6QEzc+O
pD9HibPkHkeJKJLPEz3t++Hgm3uHaHVB5bGMfXX2FlnHQU9rqBmySSeNVhdU
HuWviTcKSB70tE0TUsS/DtHqgspjn/1jW8ATiKOnzfUMnj/2Ka0uqDyZw7kP
h0ge9LTXJ8c4vBqi1QWVxzu64Z4WzD9weNonM9tera2hP0eJsyyzcr5Y4nsl
/v6q4zQW/LNfdQxrC+/nTdHk/oaeNjDOXjylnlYXI7+nXI9zzT/9DcRZPknT
6rN7aHVB5Xn+LE+ruplWFyN+22FM6ye4L3F42rsF9r3X/oB/QE9rbGxc56UG
4wh6WlPxEn3ZNlpd8AiyZKPubss6C+un6Gm1j0wK4+2gnS9G5dHYMfNtOnmf
RU+7str2xLZvtLqg8vjcUyx5aQnPmYIkbmLfv8DZl7Z+N9LP+Qf/+WLyfIKe
VkFiggr/L1pdUHlazin4RpP/L3raC29Ce+qWkv4zJM9zlw8Wu8hzC3paIV1F
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
      "], {{
        {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
          GrayLevel[1], 3], 
         StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
lLcNKxZtcnzQHvQBukMeZw5PZHFG0TaPGkF70JFqC31UHjWFcjbVC8vcpvLG
FnnsrTq7036tHEP5Q0/HIp0HKp//EX2829/p7x6TRw6mekT7r/J8nSW29ndL
8thbdZao2mS6fVO+P9X+ovxzin1QebX2zY+z2PdHO7Zc7m994D5cmkeOrdxv
RB55rHLpkY4tF+dxzqk4rDNM5ZDKkyfax+vb3/XuZ35e87DFfVYto9xjgr+l
sasPM+2nyu3nOBYp7umctkEWZ8jKgVUjKDce6PY1/53t700cRxRPuhYiTtR3
nOkJehTCDhQrexfCRts5Z1dsbAV6+dlubqOZY1QXx4hdeTynOKDaQXnvpjy+
2czvqI0Sf0PxRnGng7mx+9q9EPFNfWru625+rr3jmvyoLvyGv1nittWH2rZh
1X3Kq1UDKofZ6v2xxONTH2TzdeyPrTw+zYPiWA3H2D5+vo370tz9k52rnjrC
Mbmm/ail+65ntH9V9x7RzfOg9+WbOmPUee9m91lzpf996H8hPVKcRXdyvNL/
EfT/mPIp9lbtuZ867ulcusjxs79jpmKdzn90pl3BdqJ3dZ6m81udz9dwXC12
DnOd8xmdZ+q8Tmeb7RwrFGN19jje39W5q86ydB6r/xn9//87jsk6W9b/CFSb
3ID+Ef4HcPYfuA==
             "]], Polygon3DBox[CompressedData["
1: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
77MsX3IU6t38P216ivoX9YH/ARaAWKg=
             "]]}],
          Lighting->{{"Ambient", 
             RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
            "Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 0, 2}]}}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
          GrayLevel[1], 3], 
         StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNmXf8l2MXx3938b1uZCcRpTIys5IRkfbQ0PJraQ9pa6tUyipUyEpkPvaI
bB4rIyXrkUjDr0VpGWU878/rfLz443w/577v677u6zrXuc451+dbudvAVgNK
FRUVnc9PabBDVlRUjDRG2qSiovvA1uAlyDz09uAP4Ebka+RwrseCR4DHI8PR
TwTrIHPQLwAvRh5FbwVWRq5EPxLsn9Mv370MPJ3rq7hfU+25Ppv7bcFDuB7D
/cPABlzX5H5j8Ciux3G/Gng+Mhn9QrAJz86kzUXgIKQYfaAQOQe9E7gb7S6n
fQKPRcajn6B5FYqKRqLvh14VGYZ+NHgQMhq9fIpx3ox+mr87C722+kMeRu8P
nonM8FzqI/eg1wMbI3PRG4GVkKHoVVLY8AbPUfO93t9qidyL3gz8lbH1Q98F
Hsj1IPRyYFPkNvQm4MnIBI9N96eiXwRORB5Ev1pzYv4dsMNQcA3Xu6GvBdch
u6NvBMvx7DT0s8GJ4FXIYGSI3kMmIROQQX420NfjkZ5IL2Q4spy+SoErwL3p
6xj0MuAErp9kPJPA/bmuxv39wD2Qo9Fz8ApwCnK1ZTIyDPmJdxK4LcU4hvrZ
2VzfRZ9npWivturjIfrqAT4M9kLOQ+8LlkeORS9rP2lsm1yKtEXvAo5GOqKP
0Hv0ezf9nwvW5roG9+uADyDd0R8E+4NXImMtY+TbHuMwj3MUMhLpo3Ego31v
BNLbz2THccgA93e5r9W2n/sdyzheYzxjwIORweiHprDt6+jjwa34ykD0LeAm
ZID2LdgFbI5cipxKu+vAGmBHsCnSCdmb69vBFmBn32uG9EC6IxfLt7Loq7Pb
XwuekiJuzHCsWM73eqNvBrv6my2Qdjx7DGwL/lwIf94BtgS7ZdF2ZyHm9RvY
kHZT7Oc1sXVr2Q38jmftub8SLClE/FpbiDE18xibZDG3Dr7XyfPUt1r5ey08
tuZ+p7nntp2+RoHbwJ+QPtYLjg+7p3i/le1yhvev/HBP5Ar0PVK8O9J2+Brp
hf4j2NM2bZ1FjJ2psSqOIs+iX6HYgzyHPgqsK/9GbwBWQIagVwRraT84FmkM
d3pNOyH3u887kHfQbwdvRd5GvwXsjTyF3ssx6ibHHMXDa9CrO77NRh/ob2mc
53g8tzj2zkIWoc8EO3i/dAaPsR2O035PYc+yKdb0Vs9F853nOfZ2nOwHdnes
6Oa4OtHfVVy90bG0pWOy8lRPx7oeYFeP7W/9Aa0x2Bd5CL1Pirhxg/e1xvw4
erHtNsvtlcumO4ZPR15En5YiJkzLIscNQ15BHwp2QZ7w3Ic4XiqODuH6Ge4P
AC9DnvYcm9gf5aPN8OnqtG2Rx7sTHXsbOXY1BOsh56LXBXfw/qnoZ6IfgVRA
rwqegFRErw5OQZqjXwseiRyGfkwe36qN3hQ8FKmKfrjjXlPFHsVjx+Rj88it
DZ1/FQProZ+nvpFGzrkXO5a2Ak91jK3h/NvEOV0xtj56d+V9jRv9ILBlHnWI
5q58dJBz04fINmzzEfgLUt7xfxGynfsfg+8hW9AXpqgrGjnvKwcdgP614lke
sfS2PPLIweibwU8Ug3h3KXgyzypx/zTlPuQi5R9wluP7TPDePNZkLviFxsS7
X2m/IOWcQ7/h3rfIJvmZ7aY6p6LWAL0yeJxz4onOfeWcH3fPY+7KgyOcT5Ub
ZM+zwFP8bk2vy0muedSP8ml557XfPPffwc+099B/dfysi97BvnSi/aqj17SL
x3m6/eGePHL9HOXuPMYyHvyDvg5EL8qj/8roB9vfuthuByL7om9XntHa2w9n
IN3Qb7avnoR+fB72r26/PSuPOrCG9ePQa9nnq6Af4jx+CHoF7RfkAuV9cDrS
FX0auBeyN/o+4F+Ky+il0EvrGXpBY0T2QT8AHGA/HOz9coL3VDXbSntHfpij
71T8yCMvXw/elEfOvxF8R3Gf9X83xb0xzt+XO7crp/d3raDnGn9Lf/du23CO
fU11ltZAPtwJvMPrcqn9UP7Z0b7d399Q7bDK810J/spY1imfZrHXTuZ+a/B/
PMu8R6Z7DFoXzavYc9FaV7Uv7XQf67OoVTQX1YDX5FHPyw7t86gFZ+dRd2kf
9QRvVYxQnWNfaqf4CI7No+4a73fbyF72NdVKqosm+DuDvCe0N1RnzssjVt6X
R43U13aeZx+7X37hdVTMHFXqn/pLftgKvCWPWm6o28sHWsiOedTDF6JfAp7j
faG4V5LCf74HNyC/K6eDKY8YW7CPVbC//Zdnm2nzNvgWUsT9L1PEENW0ij9q
8xdtPge3gquyiH2rbHd9q1se8V/2VD2vuKoadRPP/qDNFvDbFGukdd+K/In+
aQo/r+i9oH1xOPqeeYxnP/SfHVd1LlC8XZziXKAYu0PfzyJWar5luL8+xXe1
v350LNTzkizGIpvovLgB2ZXFHIQb/awN3z6Fd8/Io/2PWYx1bRb+qv4Unwu0
WQKuyWIc2y2yzeos9prsKdsq7m527H3Pvq092C+PPKj6f2UW9t1i0T79Losa
UWdf5eThtKtD+3ZgQ9UaqtEU6z2f9cZlno/ifHvF6jzsVGJbaP46Ky9XncSz
M2hTH+xh/1ceXGPb7nCfG20n7Yte3guyyZfew+u9B9e57Q+25wbbWM/lJ814
t2sez5fbvp3zyO86C5f4u59nMYbPfL3C9vjJ9t1mX3wCO74EPuW12O7nsucn
bvNGivm+bh9e6furjUudG5UjF9n+37ndw9oD4KMp6pnjGWelPNp//K9xCRd7
nVd4nHelOPvcAy5xf2r7kb+j731h3yqxb5X4erjjgHLHUo9T8xmU4v2nwce0
b9GftC/VdnzY7PmssO8U21dUD78K3gaOc9xWTbXM/qB1U+6u5pz+lX1Ja3i0
/eQoxWevs9a+Sh5nT9UPGVIWfTe/qzVX21f43vvgqynWupZ9YJBrVNXnH9t+
GvN/XNM+Dr6GfOC1+9RrJnuc67U4P499ufZffrjO323kPK56cnaK8+mdKdZA
3/p7TZbYtqobVc+oVlTuUDyeCk7OIz5Pcr7o7vg8l77e4L154HMpzjLzU+yj
Bt5393P9JvcfSsE5qMYTt3Af1y9w/4EUfMjz6FelsOGRrmFUdx1ley5IYe8X
Upyb5qPfncI/l7p/1RKH0v5PcI77vDfFGD7xOF9KYZsXwRkpznQ6cz2ILPR4
nkmx7570/QXoj8huSGn6X60aI8XZ4UbXmYqHm+2Tn3q/TElxrrkWnJziTDfV
8V+1jfJC8xRc3FD3r/pN/IzOLzqPjwBHpjgHiVuYbV+RD4svKuvxLHY+WOJ4
u8j7c5nrjG/kg97/H6Twsfc9r10pajbVTqpRVcupLtW7qqlUS1+Xgk+b5jG/
jH6z89oepaJ/5V/FSOUg+bz2wMsp+Eadf8UtXGN/mGr7v2Ub7nI/WjtxKTqv
iTOZ69ihGKLzmvhPncEVWxbbn7XW79ofJtsnJ3mNFLuu99zFfS30nlrm/ahz
nzg9nQE/9PrKPoqZH3L/TfvMQs9Ftdn+rhPEA+gsfyU4LsV5Vj78hPes9u9J
sjX64BQcizixYtvhaY9NZz3xe6qftdavet317h1Z8LSq2yu5Hp7ivSP+ULyB
uIjbvUYL7G86Fz+CflOK86+4X53Zte/e877QWV5cqHiG51PE4vn23zWONdrX
ykXPpjini9vs7/bvej/qXNZZNbFz4heOjZvM+4jvWuDvat/lKbhi8b2qq1VD
3qWcYm7qG7AoBY/9VyFidTP3/2ch+J0sBW8s7rp0Cl5RnJ54v1WFqAtWg3fm
UQ+rPhf/I36nDLihELzTRvM/bf1d8eHiEMSfi9MWzyBuXHXRBa7Pf6fdZR6b
+Ki+6L94zP09HvUvTns9uK4Q98WDXec6VuegUik4Z81FZ9iurpk1R/FIfxSC
SxQPL25ZfL44N/E2OteIN57pWkjzFe8m7kpcoPirNeaoZYdVHudK20b5UHmx
xHP5vhDviTMTdyZ71EPqZ8HpiWdbATYA2/m+OEHxdC39bT1r6Hfru117o57t
m4L/PCCFDfU/gvhzcemjbcOt5kN3eO062zfEsU/wu9VcJ+t8Ktt2tJ0132LP
pZ7H0SYLTlX7SFyofKyd5zLZ9aFyXF3PV+3F24tz038QGrP+j9grxZmllnOu
+EbZWlyieD/xYOJ79T+CeD9xgDqb6Fwv3l5nkDKu7cXBjqDNPim4OPGH+l9D
XJw4W/3fIQ5W/Ke41gbOp6pR9T+I/lvR/xSH5ZHvVI+Jt9H5UTyJ7utsrjP4
TvO88iXVuuJ56tj3tNbiS1Xnqx5VLVrFOVd1jrg78YF9vGcH2A7iJXQeFF+h
XPm244NqEv2nI05A/+OID9T/QarpPndcUGz5LPunttV91beKn/MdS/X/jjhw
cZL/B8g+fo4=
             "]], Polygon3DBox[CompressedData["
1:eJxNmXnYltMWxt/nlXc/qYQUJZFKKmOTUDRoUApp7mv8qL7mkZKIEpGhQiKl
klmm45xjyhQZj3nmmDPPM5H7Z92uyx/39d7PHtdee++111pv/ZGTek8sFgqF
B7JCoZJ+y/NCoYsKugoniF8lTBGfLKwSX54KhUfUdqNwqfglKuutuuOFS8WX
CRPExwsXi5+nNg+p7YPCOeLnqWys6iqEc8RX5jH2JOFK8bOFAeIDXd9LfS5T
32XC0eJVhZPEZwjbiR8kLBQ/V2guPlRYL36zMFj8co0xRGMNFa7I45sFI+Ny
8dPd/hZhrvgZebSlz2nio/PQRTdhjL+Rr7/1Mz6FbMg4QfxW4UnxJ4T1Kca/
X3yDcKr4heozrhg6WCR+RwpdotN/ifdWWXfVHSUcI36Ryu5W3V3CBeITVHYs
dYwhfnOKurs93xyVHa26npb/YNakujOFNuIj8qijzVDxG1X2guqeF64T/6pU
KMwUP1l4U3yaym4Uv0mYLn6P8Jr4q8wpvsrr4/xc5e9nxZ8RVrB3mqOP5uor
DEDf6FB8lHCq+J0+T48K/xafnUfdiW5P/cuqe8n6maeyMcUYY674FSl0e7/n
a5ribHBGmiFbir1gTx4QP0v4D3OhE/GjNcYRGutwdC5+gsquUd06YYT4TMpU
V+7zjXyspZ/lP8P67CWcKd5DfRao79k+r705g+JXCMeL75eiboHl4/4w9khh
ie/DMPHhvm+L86gbIVwgvk59HlPfTcKaFPdzuOtXix/CHVPdIuFQ8XYp+PnC
4eJr8mjLmGu5iyq7TXW3CqPFWwhzszgzLdGF2kxX22nCOvFaPk+0qSG+lzBf
fJ6wR4rztkR8sfsP8PdSYaB4XcuDjLXFr9OYM4oxx7XiSWWnqW4O9kj8N53B
2eKnCD+L78Md4i4IjcT7pJiLOfp6fNqfKuwuvmuKvrM93wzN0UFzdRROEl/h
+z7M9udBtXlTbd/weWG9k8WnCLuIn6w2ZWo7GJnFz2cNqrve93N2Ctuz3vcd
e3Sl+EphmPjV3s9y6xP9rGUvLf8gYUUWfQa7Pbqf6v1aqrJ7VXefcLH3l7Yr
vN+TUshyne1RF9svbHon8U6cOfoK7bkPPm9DfX7n2F6yxlPEL1GbO7h7tvez
UnDKTrI9aau27ThTtv9ltp/Y14U+n8yxQPwozqz6rhK6iE/LQ5eDeGPyuN/Y
VmzsfPGMNmo7VfhD+z8jha7Wev6l7l/m9+YVlRXEM+FVy0vbqzlDKd4v5L9T
uFz8f8K2altJeBr7J+wiXkv4XLy+xmwo3kjYC93YvvZAZvbf9vg430/ORw/b
V/Q3w+8j9VOx/Xm8bQP8npR7vdiT4eKT8tAFbcaLV+Rh67Evo8RPzIP3tL6x
D4zd2/Zjd6FBMWSuJ16w/JT97vflEPFDebPF++XBD/N6Fno+1nSu7XU/v3fY
2ymej/qJeZyfXn6P2N+qQmPxvYXK7I3tJW/AweKzOIPiR/q7j+9je3Tk9fP2
dfd5aJuHbMh4CHO5nve4h3jrPO4yY/S1frv5/UR/3f3NHegKz8PWc147ix+Z
B+cMd7B+2/k9QN/DvH7WUJbHee3u/Z9u/fWwvOjz2DzWwpvSM4/3+givD331
z8NX6m37U2F5aDPW+m3v9XBeOuZxdzvTRjzPQ7ecx23FdxaaiO8j7CheUzhI
/EChpXgboT5nV/hB+99A3/uKNxP2tH4OFm9jfaJfOGfkGJ+nluIthDrM5fat
2WPrj/H2sz4b58Epa2h9871/Md7XhZLhv1m8wQtSfF9re3VuiveNOtpck0Kf
B3g9nA/ea8Y6wPpt5fOLvM1p6/a02Ve8RR59/xpD/OcUukAnL/Iee72sqal4
7TzW2vwf+tpNvK7X873K9hTfQ6ih76Lr6whbVbclxV1jjl88fmPvz/7WH/vX
2PMdlEddE8tfymMuxtzG+uR7d8YQ316o5+8qnB3vTyufj+utX3zCG1Loh7Gb
+v7slIfsjFHd+qrn9aAf7B1jtbT9aJbHXPWsz12EHThr1t83sslDeduEb0tx
XzirnNnhlq+z7/th9M3Dvu7q88r5hdemTPxDjVlFfDvhPfG3hRriOwlvin+X
oj1jfJ3C3tTydzXx51X2o2T5SXhZ/I0UfZGX9+ALoZp4VeHTFPqu4u8k/oLK
qotvL3zr/aQ/MmA/fxS2ZvHGPMz6U7RlzC9T7E8196/u+1qzGDJW9nlhbVW8
v9vlMXc17+ezGuOHLNbwnPhHKfrvLHwg/m6K/pWF//u9KiG79fGZ3zPKPre+
qMuFn8RfS8Epe9nj8/bR52Pxp/y9jfBkCn0mj/ec5/9Fsv2axf6wX/DfhM3i
jwnFYry/m1K8x+h+B+vr0RR16O8R8ZeEL9X3K+Eh8Y1+v7f6m/3aIv57Fvpl
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
Xd/K/SlrbvvL+1Tb9vhPQRFJ/Q==
             "]]}],
          Lighting->{{"Ambient", 
             RGBColor[
             0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
            "Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{2, 0, 2}]}}]}, 
        {RGBColor[0.560181, 0.691569, 0.194885], EdgeForm[None], Specularity[
          GrayLevel[1], 3], 
         StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
Cp1Z3ffPQj/rfat4Wzm0z+27NZbXKZ+bjbxHoc+mzoXGKNuuWEt2JpONOfzA
e15nRPtNMYziLvlH+aHJubhTVPQ+bGcbonuEcpXKuSn3KHtb2vbzGdAmGzkK
5TyV31OuUrGf7i+KJ99PkV/6IEWucq1txR+Ur+L53xoX6IHelmK/dfe5UL5X
ufGdPo/d0Kt8pjqjp6fISyuPrdyycnrKwytvppyS8tX75SP3q/hcsfEUny+N
d6O/9SH8j/ug+tL93beVKfJpq31+u9lGaf5b2P4od62cvHLL72r86DUp1jTj
da/kGFW2V/ahi+3Jm17r6dZ6d2qKeF55e+Wot6awY5of+YhS9n2at47oJSly
9fqfhf6PoHU5yftnHbjC8/+yzg/6yxQ5cP2/YK/rtPc8yEfofwfKi8q2XGo7
ttvtyA5o7eRH9rlN7fkVKWxgV9s3zVsvP1eOUfko5RuVY9f/FJTDV95e9x3d
sxQPNHNMoD1zuW2v8o1nZiMnqd8VdyvnNYJyJ3hZCp8v3688w1bvq09TtCVf
pPhic4q7mGy1coNtfQaVP5Q9V55Q+VLlxpRvVF5Odls5t7Xeb7Kxysu1zkb+
c5L3v9ZLucqW9jX6Vgf3YYT7L5sw0e8qN7vc51f7WX5K+c7xKeIKrZ1iLu2l
a7z3lLNVvlC5XOUudI9WPkR3Vf1PZ4/72dt7T3lC+XflEtWWYkPFJv8HyDN3
yg==
             "]], Polygon3DBox[CompressedData["
1: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
z+955D9yDzmIeo1+i/p0g+Mf+njW9sr3cV6rS1EjV3X8gfPbWeKnpqidVzke
faY9ZonP5MzEz/b737ofJt5ucP1L/OP8Vrr/rYivexyZThE/0ePscZJ4U8uH
D1JfHeV4vMXng32Q+5+0/e5t+VbaPq6xv5JTyJeHpNDVJuunvvXHmvQ3tVLI
ikxniJ9WRK4kp5xchHzbnA9q2h97Or42KkI/211/I/9lfiaGt3J+QtanvF5z
r8ecFt6PMWoY8vNhKXS52v7T3PkNmVqI78zjrJfbHuknqQWp/+gvqXeoHahB
qU+od+hv6Imoj+lf6KXp4ekv3hHOF68jzExRz1EfUVNTz9BvUxtRI9E/XuH4
Q4ym/+iT4q6ivvAiuTBFbU89vyFFvqB2Geb8gf0zTs1KfUo9ydyu9odhKWJ9
beF18ZFCI/FL/PxCitx3mvdjfzg5hPuSoUI9fEl4ze+zFjlwVIp6nl6+s+MD
8QJOz06/NM7fw30F/TP9MXsjw4IU9dXFWdxp0C98YPkaZ9Evch+ELlhjNLHR
67PnR+JLU/Ty9ICfYS9F5IaRPl/2p3dv5ff3Eb7QWS8VKot3KSL3kfOuL+K+
gv6JM+I+hPxELiHHUD/Rn/LuF/a34x2/lrpf3V9Y5vF97Z/wZfaHnT5/9qAe
Tili32dCefFj/Myax6bIT9QS1BDk/+kp7h64g5iaoh+lvifG0R+iP3rtdtZv
HedXakDqZ/r1puJNsrgvo19vjq6y6O/pl+il6JnXWd/ojzsQ7l+oZ6kdqa+p
b4kv9G6D7L+dnV8HW5/0t8jS3vbbxfOpR6g3Nlle+nf6V+6rOKvWPt/LHD+o
gcn33Ketc7zjvov7Nu6a+K2R9cczdwxH8n3y6fHiE4hp5HJhrPgYYXIe+fNt
8WnOz+Rr+HTnmzl5vMsaM8mNecTqd8hB4u/mMZd3Zou/IYwUHyGMEh/Hb3Bh
rHibFLGMOxvuV0bmMXc4cPz/0fGOfMH9SWOfF/cby/OYyzsjxBd4/dHCwjzs
6V3xec6n2Pt88QW2x5/z4PxGPUN9A3+PmOx8PM/Pe2C7+m12KXLUkjzqg5l+
3i6+VZhcihrpe+uDb0WmedQ+eehqhuXb7OeZri8+z6O24v1POQvt2SwLG+U+
6X399qrGhlIz5HHf08Tj+Hsvx6e65JAU97n03vTI3F+yHndTxORp4sNTxDJi
CvfLvf3MGvRfQ8gxWfRkzzo+1nf8oz+Y7njVMIv7QfoNakt6GO5/qa8ZYw79
4iw/E/O4D+T8uVvjDq+V8wX+18zyDU7hi82dP5CX3NLS8XeCvx+boP9Ybn0x
f4XjYVOvx/3mR3no7jVhcR79S2PHX+L3XinOer7j4TDHZ2SmP6jlePZlKe7f
yAfIwh3yc+JzU+i+np/ph7mb2iOL+8aDUrzLGgeI359ijDnc56/Lw17nUvOI
73A9hM1Rv27Mwx6Zsz6Pegn/HWd7xB/x5bGun8bY/vDB0axlfxxl/9w1Rayl
ni7x7fptouPDXO9P7fyx7Rv7H2f/XyG+TJhSCptdmsd9Justcbyh3vjU8byG
7XdSKfaYT6xwvJn6f/47w/EGf9npep4al3p6dR66meP4tcHz8aHv3E/Msf5K
zkfEwrXOH3zvXOuvvM97qfML/v1HHrL8TyZktT6JJxPziBd8K9/8Sx72hL9P
sj+ucfxDprX299GOr8THCX4mHozP4+8JDewf5K93HJ/R8TTHk/ccvzblcT5D
ShED0N8nedjyMMeLWY7XyD8jj3jaV/wlx991Pt9Jtp+NPo/JXp/13vTzYvdP
s61v+rPVjv8TbZ/kkzm2zxXOJwPFB2ET1t+AUvxGfnlb6FMKmYY73iH767Yf
zpNecZH1R/1AfF5ofyF/vCze3/r7LY+xBT4P9MvYAJ8X9Tn1LD0Y/cx055eR
1g/6Hiz+SinyGfkKXfWzv5DvGBtif8CfGEMG8hf9IrIiM38/mJLHtw/2+fH3
BcboHyt6fJz9E/38BQKw1bc=
             "]]}],
          Lighting->{{"Ambient", 
             RGBColor[0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
            "Directional", 
             RGBColor[
             0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[
             0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[
             0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
             ImageScaled[{2, 0, 2}]}}]}, 
        {RGBColor[0.922526, 0.385626, 0.209179], EdgeForm[None], Specularity[
          GrayLevel[1], 6], 
         StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNmXncVtMWx596zlt69uOaiVKGKEWmklRKuObrmu41ZVbIdBGaU5kioSRT
5hRFoUxFIlPzqNI8D9I8T/f7+6zf+7n3j/X+fvuc85yz99prr+k98pb7Lr+3
bC6Xa8KfPPjPlMtdlOVyl4F9CrncOi6+Bo5ADuD6cPBh7nWAtwY7Ia/CO4J3
gdciLZGxPHcw+Av4EbKJ93wMtuS5tly/G5zN+DD4H+BnyBaeGQbW5t4FXK8F
fs/4QPhIsAbj8+HVwQoludw2eAG8h/GzfucMnjsU/js4GjkI/iP4Gvfegr8K
voy8Ce8NbtY34NvAl5D+8F7gc0gveHfwduRReHNwr2IuNw9eHuzM+DH44+Aa
ZCR8Pfg3pAZ8P/BgnlsIPwBsw7iH9fYec9rIej8A2zF+hettU+j2OXgrcAdY
ZH2pJHR6N9IO2Zd3LQD3Aa/JQu93So/85htwLlgeqS79gNWQ8+BHg3v4Xl34
bnCW93QO+BtyEnzvFPwI+F/gsYxrw48D88hp8LLgUu/vCrAvsoK1vA3O9X4t
AAcg+8DHgeORfeGTwKb8/h/ws1I8UxX+J/gNUgH+dSHmXw9eDpzMeD/4NPA7
pAD/FjyKeyfAjwHPRC6BNwIPRM6WzsEjkL/Dq2ovkJrwQ62HY7yWDXoXfDO4
A6lm/byOrGddb4JfIFvzMbfbuH8FcqX2gt+f4m+dgVwMr69vIpfCzwVX8Zuz
4CfAf4An+CiwTop3nOpnTtaewg9DasEP99z0/vXgcMZD4N+Ay5Bv4SvBdcgX
8MlgFeR4+JHgp8iv8E2ao+YHr5vijF8HvxRcjQyDrwUv1D34Bf7tV/Dp4P7I
cfCDwBd8RoamsLcx8FlgC+Rpn5GayInw42Uv9id1PYcL4SeDXyMfwkfovGDH
v8v2wGmMB8NngAXG0+EVwOsZXwZv5jl8CZ8KPqTzDH8QvBy53r5ri84o52Yz
uBXZqySu6fxOABM4TPYH/wosp2/DS4px3p+C3yYdoPey9nvn2P+cB5bluanw
MuAKxkNlw+AC5DP4YnCO9AifD/7LNv9v+58e9kXVbOfV7Ysm2YdU5r2r4ZXA
/ZFf4Bu4vls25O8O8x5pLz5B3od/DE7RGYZvAbd6j3b4+iztI789ClkiOwGf
SuE/n5Ferf8vwF1aUxbzWMR4BLjUa//RunqX8YvwfmCR8XzrVnv6s3wgeCyy
VOe0GHv6k/d6VYq9kA1XROpoveDpyFXweuB4rU1+I4WPnSi/BI5CBsJHgw2l
X3gD8CdkEPxXn5HxnvNOZLb1UJNvL5NPA2sjy3U2ZYOyS9vz28hH8LdS+GfZ
dke/Zyx8D/iGbfh1sLHf0wR8B1tZia94vxCx4HT74acY7+b6QMfEkiz8v2JB
Bn8XXIxUlr7BZ/38M2A33YN3L8R7/sYzY8DnkT1c7wE+gSyCP1kIP7MD/hP4
FpLPwo8t4do0ZCnSifF88DHFIPlueHv7Pdm84n5nZAHXu4AL7TPl25f5HdOR
35Hl+bimtW93LNBaijy/DOzn+Ugn8+0DtcYy9lc5sCSFP89kSzrP8EvA55w/
dLdO/vJ6H0H+hD8N9nb+8BL4IrIZ/gK4Kh97MQuZmo/1S4+7CuFjdxZi7jPy
EcNWGmfmw4c3tj9cyHhyPvQ73WuXHuchE/KhR+lzLdgRbIPMgbe1DtdZz4v9
jin5iJWKNXOsez0/DpmNjPW4nder9wxBcjz/uePRXlnkS4qPRzq2au1LrYfx
np/e3YHxGu9vb+/fK+Ag289g77PWMRGZlI81L/BcF3n9K62bWb5X+uxiPzfV
9jDj/2yi1EZmWrcz/Nw074fWO8ZrnmsdaO6/+fofxtnm46wbPd/NeZRsfqLn
P8G/n+D1T/LctZ411pXi6bXs603wa8BWWcT125HzU+SfF8lnO2YpVt6TRXxp
htyYxW/vVx6QIve4KkX+qRxGOa1yM+XDpXmxYm5pHned39VCMQG5I4scTnh1
FmekEjivELlnC9/TN29G/pPF++/08w/4+i0ap8g9tC7N8z7kBsu9nv8Q52OD
nUc1yiJnGOScbaB9i2ymp/PAM7PItVYzPgS+thBn9nDF1RRzae15Kg9pmEUO
s60Qeb7OmmK0cqQrUuRpp8IPAR/l3i6+9aFzPPkQ5UjKhRpkkbNtKkRuv9V+
o7J9xdVep2KrdN3GetH+Kp+5zjFCeWDjFPsr3SmO17B/Vq2h+C5dng02SbEv
jR27b/D+jrbfVl2j3O0q24zWWNNzOylF/qm8rqn1pjywcorcu6r9W1P4iWBz
v0cxTDnhOY59LXxN81Aeq9xbOfxUn33VOLLPa22rst8rPR/5TuWot9qub/W4
le8/bGxu3txjzUO1Wzlwgnys75XOpYXH0s951pXsv5n39DTvV33r8g7P/wzb
QyPbj2oT1Q6q9epnkROqpjgWvqQQ+bxsUjXCCMcv1YDKDc7NItbfiXTTN9L/
1vlQFuflDtviJ44Fn4I389wTOkPgA0h3nYcU8XFDPuLvRNu21i5bamt7ap9F
7XW3v9PK37qV3z+pc5eitn0GfleKWmZbPuoUvaOlf6+9qwhOKcS57Ogz2cLz
fsRSuievpKgNlWP8liLnV26j2Cd/2LoQtXP5LNZ4f4p8WDVs10LUL4rdyouU
vylfUmxa7d8qz3mN6++lWGdrnx3Vqppbe/DVQtQ+ihdvKjfiet8U+Yb09jj4
PuPXud4/RU74DvydFGvU+nR+lEvvD35ZiP7BPb7Xgec6gY+BM1PUOLNT5O2q
8VXr63zL1+p90sPH4LgUtX8772NXr6VLinqktW3jW+dy34MVi5HTHuK8V3N+
MsW75VNVz29nPDmLnsC8FPneXNtbG++v8uFx8IUpfif/2zmLGlk2rLq1kfPM
M4uhQ8XDNwqx7mZeu77byeu63jqRjf3s3En5W3tfK70nW1L80P4utP77Odfp
Dw4tRL2sPEHzUkx4MAsfq31XPtnFc37QqDUofqhOV+2vml1zu8n3ejm3ebkQ
+dgS51eqO17i/vMpzpr8hvo83VJ8Q/2T6YWor6f5fJW3/SsWq+ZVn6Grz472
Qj0f5cPq26hHcTR8JvgR996Dfwh+IDvLou5Qr6ardJjC98rPya92sn+QPWwp
RKxRjT/ddqh3PpFi3572M/rWdtv5C7Zh9Y6et81Lt2VswwNS1Br9HZtUI28s
RF9LPYp59iEt7UcG2W4Hgp+nqGsGg8/aF/UAKyBV4ClFb0ExQj2BdYXoKSnm
jkxRV34H/pii3vwhxRkc6LMs/fS0rvRO9XAUo3um6C+p97Wcd+0NX1mIObyR
RQ14I9Ib/iL4aIpaWL2pvvZpsmH9VnFfub36KuotqD+gWng0fHmKvoF8u/pg
v3jvxqToK0qHsiXVd9/5LPdyftvTfuwD+Gcp+nJ94H1S9CtUP6rWVg9B9Zrq
d+m2r/WpXHee83DZjPp4qovHpqiRJ4BLUtSwi63bit471aGKv8pJFK8Vayp5
/p/rXKboOcjnP5LinO7kW78WwlcP8DylQ8Ua9SXUD1EdcZznMNR6GG5fqn1U
30B1vXoFI+0/tae7nAeqPlJvRD3GSbYf9TBVp6suU59TcVP9qzq2YfUNZmRR
g8t3yOfKl9RlvAE8Fdyj84es0TdKAtdmUbOr96IaOV8Sz2cl0ZeYA6/q+l17
p3q8HuON8NPAw5Ap8MPBGu4J1CpG3a0+j2pt1ctb7RvVN1Bdr37mOrBMScxB
fU/1d7dn0b8p7x7ORr63CqzD89WKMeejwbOKES9Ugx9RjHVpnmVL4p16d64Y
fjtfjPf8kUUsyHldqutXWye7s/D/w7Pw85qvYpHmol6Beizqj9Xnt5vgpxej
P6O170oxnxXwpp6n+sbVwQyZ6zloHYpHO7PYi93+9vos5q05Kx6N8jvVk1nt
50r3TL87yv0r9ViqIIut/5x1qfVrXxbBD7V+5lpvVdzLUi+oQTF6ZmeAx3s/
ankf13r+9fx+rbekJOxCe6++tPpX6nXP8ZwVx7Ve9WHK+53qXZ9YjN74ZM/n
pGKsWdcVN7XPDcGzi7H/TX1ftii9KE9Q3159Qum+XEnMpbZt/uRixFXlMPfZ
9u/1uIP9uXIbxTjFfD3b2T5feUg3+0/FhQH2jfLb6vno/x3qC2k+Gzyncu41
ykZH2WaUb0xM0V+Vz9F3FEsVbxR31DfT/w4auD/W0Par9cru67tHp71Qvqqz
q/8LlFjfWndP+z3FDvVvm8Avtn+Tv5IfviFFvnqT/Xkf+y71VBXzVR8pj1Xe
qZ5nF89ReYFyJ/1PQX1a5c/KS29x3FH8/dlr7Acf4t8qp+hqP7PIPkF9Rf3/
Rb3rrT536k9Kb1qHdHcKz80EDyxGP1ZxRL3fU3yOtKday+PSY4pcTj29SrYf
/Z9FPk39cPUe1dPW2drl8yVbWgmeUwzfIj3v8B5Kn7Lj/wLjBcur
             "]], Polygon3DBox[CompressedData["
1:eJwtmXf81+Maxr/5fRKf55NKlCikQUhCEik7M+M4jnk4zl6cgbIqIhKRoqh0
SlGkgUqUUhoa0rAqbe1Fe5Drfe7rj+v1vT7Pvp/nucdzf2vffe8N9xxUKpUm
liuVMv3uSaXSJyKThL3ixxWl0nfiS4Tjxd9Q2eviA4TXxT/IS6XDxasIo8Q/
Udk48Y+Ej8VbqM9u8V3C+eKjVDZYfIgwWvx/wqvivYX+4muFKeKfCt+Lb9aY
x4vXFraIv0of8X5CT/HPVFZRvBCmiQ9TWQ/xl4Th4mvyqKPNWvHFKWRDxm/F
P/J4/YVx4n2EV7JYU1/xRlrzj+I/CKeKj0kxN30+ED9HZTvEtwtNxdtbHsZ4
RPxJ4UXxbsLj4iu8P+OFleI/eT2ThZ/Fq2uMReKLhaPEqwjTxKcLh4svSbG3
jLFU/GWhq/jz3o9vhBHiIy3fc0JH8SeErpyd9iATL0MG8R4q6yneiz0Tn62y
SuKVhc/FewrluBhCD/F3hQriB7O/4l2En8skh9BWfJfGmKG6mcJuyzdffJ7v
01ZhtPgY9lT8Ism0Tny9cLH4xxojFz+UOyT+X7XpJP6UcJ/4JWqzj7HcfrDa
7Nfc+4Q3xO9Xm0dV1054QHxqHnW04X78Q2XPqq6L8HfxPwmdxZ8W/pjifrGX
L3Anxd/PQ/Zyvt9z8pCdPfhC/EG37+r52nu8Z4QOKepZS3vhIfGHU8zV2fdj
vvfzEGFBHvrEXAcJY8X7Cnu09t3Cq+I1ithL9vRo8a0qq85dYT/FN2vML8Tn
CBvEpyGD+HvolO/rKnRLaCbeWPiGuyKcIX6o8JX4l5yxeC23X+n5KgnLxZeh
c+JLNecx1HFnxYdqjmHi76Dj4p+q7EjxI9A58bOLGGuV9QX9466OsD7NFiZg
O4QZ4nWKsD1LhbqsTWVjxT8UvhafIwwSf4PzEC9ze2xWSfyAymaJz/b3H/Td
Rrytz7uBytaIrxbqW172doFwbBH3g7YPCn/2+Iz1uZCJj1fZW+JvZ2HvsH/w
ocIk8e15nE0NYUce9o56+vS1fFvEN2dhX7EPjD/L+j3f/av7vi32fr2LjOL7
89h7zuAn8SoqO0m8AfZC/Ms8bDM2+ivxhSl0c4b3bwc2PIs9fVd8XgpbM836
uSqFLcY+LU9hv2lLn24pzoOxPnP/8bZPnM+H2PIUtm6c94P5qaPNItsD5poq
bBJflmKuSZZvZApbMdrnO9b9WQP+Y5/lYb/2i1csYizGPEx8Y4pvfMq6FPd7
iufLxcsVMR8yHiRevgg+xfd/cIq7zHkOwt+kuJvINNX2Fl8yEZ0R76893lsW
OvtaHvYMTtkE8UmuxyZNFh9k+0TZAPHeeeg+NqCX+Id56D5jYA8X5WEbc+vb
S9hc1e0UXhRf7f1mjWvwVXnYesbsI97d9uyA2r8gvt7yTLC9+DGFLMi0M4U9
mWD5tojPdT1ln4ufKDQVP0c4CV3QmBs19ib7g6H2D8z3jviIPDhrGCk+MMXe
ohP9fV+G2n5M9X7Dh9kenFKE7cEG4Y9r2J6sEKoV4a+X+/t08apFcMoqi9cr
QtexfyfY/uF/1gqnidcuom6V9f+CIupoc2ER8cwat28pfkQRvot67GfzImKd
ncJ5RfjzjeytsF3rP0bfm7Iow7+fJSzMwudvt3zEGlvZT/EzhW1ZxCDIg/0k
1qCsifi5RcxFDNLM692TRczF+hp6/az5ZK9vtb/Pd3/kXe319rE9Iz57xfoG
f8v6TLxA/Pam8C/xXq6njPjhPWKSLGIK6hekaDvY9mKEMNzn+Y74CylsNzZ8
uO0/dcN9v9baf42y/qLPo2wPsBeTU/g27OFE7moKjo0cZ/tFPWMQT47Ow9fi
c9/LI54b4fnex5Z4fNpPtz1iPMZYbn8z2uuZZX2g7wjrP/Eytpwzrin+tedD
Z7/Jw1+iu0lYJl5bfU4Vb8h9FK+Xgp8m1Bc/JAWnrDz6qT5niDfOIh6uyJxZ
xMgz8oiXqTvd3+OEqlnYf+KJ5Xn4YnzyCvHvXE/ZEvGdwplZzLGNuhScsiPE
f1ZZXfF6wgFsVQpeXygTX6eyE/29WrwWdzoLGY+1Pzohi3h+nvhxKmsifjYy
eHy+zxL2eXzqmng+1s98db3e6UI1yzNFfKLlQ6bxecSz7A17NITYV+PVFK/l
/Vxk/1nD57M7D07ZnjzOj298MPFZKYWvZYxy4ivz4Mf4POfmIRtzEj9/7/in
mvdjo3BYFjH2EMeT1V0/S3xmHrE0NvPpPM6b8U7weWA/K7s/9vR9+3fKRtre
Uscc9Of9U8vrXeX10baK93+d9481bPJ9YG/rCAu9Xw19fsh7cIqz5YwrpPA/
q7XWNcLL4nV8XviEuuJPqWyl6lYJz+ThH9eJr7e/w//BNzh+78aelcWY+LPO
+DzxxUIb8efyGIs2XcUfZs3iS4RH8oj3C+sX/nW0/SM+dIz9KbqITo6xfuAb
y3xfJtpf8kYiXn1TKO/vgXnEs/Dyvm+v2D/vsvzT3f5gn+ewPDhlb3u9m+0f
HxJ/NI+1LxXaibfPgy8TOoh35A6I/yA8nsd9Q7bC50n8f5LPg/MjHkTfTvb9
zVPU0eYw8cfyGGurx6+Roi19jk5x//kmfiRefd7r3eJ4gfXCN3u/ef9t8vez
3q/t4jvKQl76H/B9pp75kW255ZlkebCJxEe8T7eVxRgDfd47/M396ef9oA3v
196WhzLim6c8P/WdxL/Nw/ZV9X0+sQjfSszNe4Jv3hbEFPjbjinebrwPnxD/
i795rxH/d0nxfnxOeDbFe7Orv/8j/lqKtyPv/X7c/xRj0edp9j9FHW3aiT/q
9rwheR/+ze2Z86/i9yTPJfwzRTxAPEPMg/9vorJzxc/DhmKbUthO7GVN8eop
bDdlR4nvzYNTtku8scqaZTHGGeLPez5k6m59b2r7jH0/0vPRh/fFqcIF4i25
c+Kdhe5Z5Dw6Wd4O4o9lkf/A/7+WRQ4Ff8t7sW8WZcQDA1Lklvp7/4i/+2TR
Zoj3lzryL7zPyX/0c3/W+5YwMIsc1Zsp3r9wyqZ7fY9nkRN5xvv9kPjDWeQD
/i3cJ36/8FufD2/3Dj4vzuORLHIMnDf5nf/LZnl5X/K+J1/xe/E2KThlbS1f
N+8P+bO7XU+O43fid6XgT3r+K1LsLXt8ZYp44Xzx5ln4U877UvFLfL7YI2zx
WucLHrR+brT9JJ7AHxwrHCq+Pg9OGfmxq1V2vfh1no/8A2Ot83vmPJXdpLpf
C+eI35aiLX1uF79QaC1+jdAihT3bavvRzvZwh98rw70+bPt3todPCivKwmd0
sv3DVlD2RB75p522t8RvPT0+NqCX/cdO25+uHm+b7QP9u9t+0Yd8Fu+Xy7XW
Vln4K/TpKmS3Plzv76uFG8QbCReJXyycLp4oyyJGYz8bpOCNrA/EU/juOtY3
7BGcMt7j5Aewtdhn8jfEC/hXYhzis71uj08mHiL+wBdjr3nvd7H+9LF9QT8Z
DxteTfwO7hh3y+fTNMVdudTnd20KWZHxuhTx9ADrz6eW/3bx21z/G+FO7qZw
k3gr4Rbxm7mD4pVSxJ/EjJVT3Bfmuow7myJ/yVudNzvv/wnWZ+Ykfuc92Nvy
DPJ+/4q9FwpsmXBjFmXs/zXcuSzOhPqZ1n/eE8Tn+D/eptiwCtYn7uu1rClF
fpX819dZ5AuOLCKXQU5jfor3E3W04X14S4q+jHErtjPF3WD/zrb+YjsesD63
ZM+y0Jnm3n90BxnO8n629npuZq88PmUXoespdIk5zmUvPB9lNzKW61v7PLAn
zN3G9qeB83nIwPuPfAm5Zd6b5Gd578/NImfI+578Hpyyys6PkAsjJ0Z+mvc0
deQgqzlfQq6QNuRPyCeQeyQ/Rv4h+b2Ojz2kiP8X5nl88gvbUuQe2V/y2+Qv
6EsObKX7z/H6Cr/fmQ+ZyNeRb0aWhT4v8n3k/pCRfBDvbThlvMcq+jzpT/6n
QhHzzfH6KjgeIIeYOR+AbMxJvgB7hy7d5fO/OMXd54wv8PnckYXOYC/IN+Nb
8Bn4b+IJcon4HPw7/1dwV7mzb6eIn1tZX3gPVbe+Ym94f5E/5r8F8vVtrW/c
fXRgQx76QdtLfL94X11mfSceIB5Bt9Ax4puO1jf+syBfzf87+CZ8OP4T/8Vc
vOfJv9+b4r8V/mPh/wT+X+jh9vhT/G931yNPL/dnzeQTyOczFjmCO5krha/r
5O+GKd6ujS1PS6+/lff3KnQ4C5vV2vrSIgsfiT7jf/CPLaw/9VxPGe9r9Jez
u9P6hv5gy+6wPmG/W7p/fc93axY27vIU9hJbeKvnRz+be/wWtgfEYs2tr7Vc
T9nRvi/Igs/BXp5iefgmf4Y9hV/h+YjHiG2w8cSbVX2+nDn2tYbnIybD3hPP
Xen+p3l87F8zf5MfhlPGe4D/X/gvhZwR+a1fAImo4fE=
             "]]}],
          Lighting->{{"Ambient", 
             RGBColor[0.30756835, 0.18676585, 0.147065275]}, {"Directional", 
             RGBColor[0.2306315, 0.0964065, 0.05229475], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             GrayLevel[0.3], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[0.2306315, 0.0964065, 0.05229475], 
             ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}, {}, {}}, {
        {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0L0uw1EYwOHjo61vrRuQViJmrSrVaqsiVgmrMCAGRsbGpHEFuomtvQQm
toYbkNTAztAL4PmH4ZfnJCfnnJw3fXi+czYQQjjQoKL1jGZjIcyxwly0z01e
cY/3POYzL/nJJlvqKBEP4ZELfOU233nKb97E/x7rMMUuM8wqpyXltayCVrSq
otZUUlnrqqiqmja0qDf3pdlmkk3+ePKEX9xij/N8YYwPbOtWff+55gcv+MQj
3nGXDda5zyzLzDClpKY1pUlNaFxjGtVINB9FI3AsDGvof/6/GFgkeQ==
          "]]}, 
        {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0DkvxEEYwOF3FShkaURrP4DIKkTtvtaxuyJKYpU2Crvu+yrp1jdARUul
phMdH4FKlHj+UfzyzGQmk5nJLJTzy6mImNeAQb9m9FEfscR0Q0SVnTzjFC+5
whte8IF3fOa7PvVq/stvttRFtDVGZNjDLs6xj+ssssYSK6pqLVnThja1pW3t
aFd72teBDnWkY51oVVfOW0zOYYGz7GU3s2xlO7/cr5kv/EnerTc9mj/xlvc8
5zXLrHGCp+xghU0ssaiC8ppO/kuTyX7lNK4xjWpEwxrSYOr///8A5SYvjw==

          "]]}, 
        {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0LsuA1AYwPFPiWDgBcRlECsPIMLAXjtxiZEFI5NrUdfWKgb1Btq6q/sb
YBMbTyAVv8bwzy/nDF/O+drHppNTVRExqpVExLIOVKyLOOE7CyzzhS317tjL
b47wlwtsqo5oU7eOnPtZ4hA/OcHahohZdnKJg8xykjnmVVBRZzrXhS51pWvd
6LYyW3e614Me9aRTzZl3zAFm2MFF1nCGH94zXpnFJA/Zxy61Ku3cyHmW/W+Y
X+zhG5v5zB97yfOVOWaV0b72tKsdbWtLaW1qQ+tKaU2rif/9/wHO2Dql
          "]]}, 
        {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0L0uw1EYwOG3/q2P/lsTK7ETBhdAYmTQ3aB2jXAJDDaRcAmITQxcgqrP
qo/WHbQ2MWnxJIZfnrwnOeck70S5UlrPRMSqaknEtd61m4/44Cl7rHE464zj
LKYRM5ziPJdY4pq2tGHe4T4Pec5jNnjJL1Y5WohocZYddtXTj34VuYiM+pQo
q5z6NaBBDSmvVAV9u7fgvTZH2OSn/65Y5wXPeMQ9HrDCbW6qrBXzMhc5x0lO
M+UY2/ZQZJVd+zlhhy019aZXvehZDT2prkc96F53utVN8r//P9rAOMg=
          "]]}, 
        {GrayLevel[0.2], 
         Line3DBox[{1311, 1293, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 
          1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1312, 1315, 1316, 
          1319, 1320, 1323, 1324, 1327, 1328, 1331, 1332, 1335, 1336, 1339, 
          1340, 1342}], 
         Line3DBox[{1344, 1294, 1313, 1314, 1317, 1318, 1321, 1322, 1325, 
          1326, 1329, 1330, 1333, 1334, 1337, 1338, 1341, 1345, 1348, 1349, 
          1352, 1353, 1356, 1357, 1360, 1361, 1364, 1365, 1368, 1369, 1372, 
          1373, 1375}], 
         Line3DBox[{1377, 1310, 1346, 1347, 1350, 1351, 1354, 1355, 1358, 
          1359, 1362, 1363, 1366, 1367, 1370, 1371, 1374, 1378, 1381, 1382, 
          1385, 1386, 1389, 1390, 1393, 1394, 1397, 1398, 1401, 1402, 1405, 
          1406, 1408}], 
         Line3DBox[{1410, 1343, 1379, 1380, 1383, 1384, 1387, 1388, 1391, 
          1392, 1395, 1396, 1399, 1400, 1403, 1404, 1407, 1411, 1414, 1415, 
          1418, 1419, 1422, 1423, 1426, 1427, 1430, 1431, 1434, 1435, 1438, 
          1439, 1441}], 
         Line3DBox[{1443, 1376, 1412, 1413, 1416, 1417, 1420, 1421, 1424, 
          1425, 1428, 1429, 1432, 1433, 1436, 1437, 1440, 1444, 1447, 1448, 
          1451, 1452, 1455, 1456, 1459, 1460, 1463, 1464, 1467, 1468, 1471, 
          1472, 1474}], 
         Line3DBox[{1475, 1409, 1445, 1446, 1449, 1450, 1453, 1454, 1457, 
          1458, 1461, 1462, 1465, 1466, 1469, 1470, 1473, 1476, 1479, 1480, 
          1483, 1484, 1487, 1488, 1491, 1492, 1495, 1496, 1499, 1500, 1503, 
          1504, 1506}], 
         Line3DBox[{1507, 1442, 1477, 1478, 1481, 1482, 1485, 1486, 1489, 
          1490, 1493, 1494, 1497, 1498, 1501, 1502, 1505, 1508, 1509, 1510, 
          1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 
          1522, 1523}], 
         Line3DBox[{154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 
          165, 166, 167, 168, 169, 170}], 
         Line3DBox[{1541, 1572, 1571, 1568, 1567, 1564, 1563, 1560, 1559, 
          1556, 1555, 1552, 1551, 1548, 1547, 1544, 1540, 1539, 1538, 1537, 
          1536, 1535, 1534, 1533, 1532, 1531, 1530, 1529, 1528, 1527, 1526, 
          1524, 1543}], 
         Line3DBox[{1574, 1605, 1604, 1601, 1600, 1597, 1596, 1593, 1592, 
          1589, 1588, 1585, 1584, 1581, 1580, 1577, 1573, 1570, 1569, 1566, 
          1565, 1562, 1561, 1558, 1557, 1554, 1553, 1550, 1549, 1546, 1545, 
          1525, 1576}], 
         Line3DBox[{1607, 1638, 1637, 1634, 1633, 1630, 1629, 1626, 1625, 
          1622, 1621, 1618, 1617, 1614, 1613, 1610, 1606, 1603, 1602, 1599, 
          1598, 1595, 1594, 1591, 1590, 1587, 1586, 1583, 1582, 1579, 1578, 
          1542, 1609}], 
         Line3DBox[{1640, 1671, 1670, 1667, 1666, 1663, 1662, 1659, 1658, 
          1655, 1654, 1651, 1650, 1647, 1646, 1643, 1639, 1636, 1635, 1632, 
          1631, 1628, 1627, 1624, 1623, 1620, 1619, 1616, 1615, 1612, 1611, 
          1575, 1642}], 
         Line3DBox[{1673, 1704, 1703, 1700, 1699, 1696, 1695, 1692, 1691, 
          1688, 1687, 1684, 1683, 1680, 1679, 1676, 1672, 1669, 1668, 1665, 
          1664, 1661, 1660, 1657, 1656, 1653, 1652, 1649, 1648, 1645, 1644, 
          1608, 1675}], 
         Line3DBox[{1706, 1736, 1735, 1732, 1731, 1728, 1727, 1724, 1723, 
          1720, 1719, 1716, 1715, 1712, 1711, 1708, 1705, 1702, 1701, 1698, 
          1697, 1694, 1693, 1690, 1689, 1686, 1685, 1682, 1681, 1678, 1677, 
          1641, 1707}], 
         Line3DBox[{1738, 1674, 1709, 1710, 1713, 1714, 1717, 1718, 1721, 
          1722, 1725, 1726, 1729, 1730, 1733, 1734, 1737, 1739, 1740, 1741, 
          1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 
          1753, 1754}], 
         Line3DBox[{1773, 1755, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 
          1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1777, 1778, 
          1781, 1782, 1785, 1786, 1789, 1790, 1793, 1794, 1797, 1798, 1801, 
          1802, 1804}], 
         Line3DBox[{1806, 1756, 1775, 1776, 1779, 1780, 1783, 1784, 1787, 
          1788, 1791, 1792, 1795, 1796, 1799, 1800, 1803, 1807, 1810, 1811, 
          1814, 1815, 1818, 1819, 1822, 1823, 1826, 1827, 1830, 1831, 1834, 
          1835, 1837}], 
         Line3DBox[{1839, 1772, 1808, 1809, 1812, 1813, 1816, 1817, 1820, 
          1821, 1824, 1825, 1828, 1829, 1832, 1833, 1836, 1840, 1843, 1844, 
          1847, 1848, 1851, 1852, 1855, 1856, 1859, 1860, 1863, 1864, 1867, 
          1868, 1870}], 
         Line3DBox[{1872, 1805, 1841, 1842, 1845, 1846, 1849, 1850, 1853, 
          1854, 1857, 1858, 1861, 1862, 1865, 1866, 1869, 1873, 1876, 1877, 
          1880, 1881, 1884, 1885, 1888, 1889, 1892, 1893, 1896, 1897, 1900, 
          1901, 1903}], 
         Line3DBox[{1905, 1838, 1874, 1875, 1878, 1879, 1882, 1883, 1886, 
          1887, 1890, 1891, 1894, 1895, 1898, 1899, 1902, 1906, 1909, 1910, 
          1913, 1914, 1917, 1918, 1921, 1922, 1925, 1926, 1929, 1930, 1933, 
          1934, 1936}], 
         Line3DBox[{1937, 1871, 1907, 1908, 1911, 1912, 1915, 1916, 1919, 
          1920, 1923, 1924, 1927, 1928, 1931, 1932, 1935, 1938, 1941, 1942, 
          1945, 1946, 1949, 1950, 1953, 1954, 1957, 1958, 1961, 1962, 1965, 
          1966, 1968}], 
         Line3DBox[{1969, 1904, 1939, 1940, 1943, 1944, 1947, 1948, 1951, 
          1952, 1955, 1956, 1959, 1960, 1963, 1964, 1967, 1970, 1971, 1972, 
          1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 
          1984, 1985}], 
         Line3DBox[{477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 
          488, 489, 490, 491, 492, 493}], 
         Line3DBox[{2003, 2034, 2033, 2030, 2029, 2026, 2025, 2022, 2021, 
          2018, 2017, 2014, 2013, 2010, 2009, 2006, 2002, 2001, 2000, 1999, 
          1998, 1997, 1996, 1995, 1994, 1993, 1992, 1991, 1990, 1989, 1988, 
          1986, 2005}], 
         Line3DBox[{2036, 2067, 2066, 2063, 2062, 2059, 2058, 2055, 2054, 
          2051, 2050, 2047, 2046, 2043, 2042, 2039, 2035, 2032, 2031, 2028, 
          2027, 2024, 2023, 2020, 2019, 2016, 2015, 2012, 2011, 2008, 2007, 
          1987, 2038}], 
         Line3DBox[{2069, 2100, 2099, 2096, 2095, 2092, 2091, 2088, 2087, 
          2084, 2083, 2080, 2079, 2076, 2075, 2072, 2068, 2065, 2064, 2061, 
          2060, 2057, 2056, 2053, 2052, 2049, 2048, 2045, 2044, 2041, 2040, 
          2004, 2071}], 
         Line3DBox[{2102, 2133, 2132, 2129, 2128, 2125, 2124, 2121, 2120, 
          2117, 2116, 2113, 2112, 2109, 2108, 2105, 2101, 2098, 2097, 2094, 
          2093, 2090, 2089, 2086, 2085, 2082, 2081, 2078, 2077, 2074, 2073, 
          2037, 2104}], 
         Line3DBox[{2135, 2166, 2165, 2162, 2161, 2158, 2157, 2154, 2153, 
          2150, 2149, 2146, 2145, 2142, 2141, 2138, 2134, 2131, 2130, 2127, 
          2126, 2123, 2122, 2119, 2118, 2115, 2114, 2111, 2110, 2107, 2106, 
          2070, 2137}], 
         Line3DBox[{2168, 2198, 2197, 2194, 2193, 2190, 2189, 2186, 2185, 
          2182, 2181, 2178, 2177, 2174, 2173, 2170, 2167, 2164, 2163, 2160, 
          2159, 2156, 2155, 2152, 2151, 2148, 2147, 2144, 2143, 2140, 2139, 
          2103, 2169}], 
         Line3DBox[{2200, 2136, 2171, 2172, 2175, 2176, 2179, 2180, 2183, 
          2184, 2187, 2188, 2191, 2192, 2195, 2196, 2199, 2201, 2202, 2203, 
          2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 
          2215, 2216}], 
         Line3DBox[{2235, 2217, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 
          2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2236, 2239, 2240, 
          2243, 2244, 2247, 2248, 2251, 2252, 2255, 2256, 2259, 2260, 2263, 
          2264, 2266}], 
         Line3DBox[{2268, 2218, 2237, 2238, 2241, 2242, 2245, 2246, 2249, 
          2250, 2253, 2254, 2257, 2258, 2261, 2262, 2265, 2269, 2272, 2273, 
          2276, 2277, 2280, 2281, 2284, 2285, 2288, 2289, 2292, 2293, 2296, 
          2297, 2299}], 
         Line3DBox[{2301, 2234, 2270, 2271, 2274, 2275, 2278, 2279, 2282, 
          2283, 2286, 2287, 2290, 2291, 2294, 2295, 2298, 2302, 2305, 2306, 
          2309, 2310, 2313, 2314, 2317, 2318, 2321, 2322, 2325, 2326, 2329, 
          2330, 2332}], 
         Line3DBox[{2334, 2267, 2303, 2304, 2307, 2308, 2311, 2312, 2315, 
          2316, 2319, 2320, 2323, 2324, 2327, 2328, 2331, 2335, 2338, 2339, 
          2342, 2343, 2346, 2347, 2350, 2351, 2354, 2355, 2358, 2359, 2362, 
          2363, 2365}], 
         Line3DBox[{2367, 2300, 2336, 2337, 2340, 2341, 2344, 2345, 2348, 
          2349, 2352, 2353, 2356, 2357, 2360, 2361, 2364, 2368, 2371, 2372, 
          2375, 2376, 2379, 2380, 2383, 2384, 2387, 2388, 2391, 2392, 2395, 
          2396, 2398}], 
         Line3DBox[{2399, 2333, 2369, 2370, 2373, 2374, 2377, 2378, 2381, 
          2382, 2385, 2386, 2389, 2390, 2393, 2394, 2397, 2400, 2403, 2404, 
          2407, 2408, 2411, 2412, 2415, 2416, 2419, 2420, 2423, 2424, 2427, 
          2428, 2430}], 
         Line3DBox[{2431, 2366, 2401, 2402, 2405, 2406, 2409, 2410, 2413, 
          2414, 2417, 2418, 2421, 2422, 2425, 2426, 2429, 2432, 2433, 2434, 
          2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 
          2446, 2447}], 
         Line3DBox[{800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 
          811, 812, 813, 814, 815, 816}], 
         Line3DBox[{2465, 2496, 2495, 2492, 2491, 2488, 2487, 2484, 2483, 
          2480, 2479, 2476, 2475, 2472, 2471, 2468, 2464, 2463, 2462, 2461, 
          2460, 2459, 2458, 2457, 2456, 2455, 2454, 2453, 2452, 2451, 2450, 
          2448, 2467}], 
         Line3DBox[{2498, 2529, 2528, 2525, 2524, 2521, 2520, 2517, 2516, 
          2513, 2512, 2509, 2508, 2505, 2504, 2501, 2497, 2494, 2493, 2490, 
          2489, 2486, 2485, 2482, 2481, 2478, 2477, 2474, 2473, 2470, 2469, 
          2449, 2500}], 
         Line3DBox[{2531, 2562, 2561, 2558, 2557, 2554, 2553, 2550, 2549, 
          2546, 2545, 2542, 2541, 2538, 2537, 2534, 2530, 2527, 2526, 2523, 
          2522, 2519, 2518, 2515, 2514, 2511, 2510, 2507, 2506, 2503, 2502, 
          2466, 2533}], 
         Line3DBox[{2564, 2595, 2594, 2591, 2590, 2587, 2586, 2583, 2582, 
          2579, 2578, 2575, 2574, 2571, 2570, 2567, 2563, 2560, 2559, 2556, 
          2555, 2552, 2551, 2548, 2547, 2544, 2543, 2540, 2539, 2536, 2535, 
          2499, 2566}], 
         Line3DBox[{2597, 2628, 2627, 2624, 2623, 2620, 2619, 2616, 2615, 
          2612, 2611, 2608, 2607, 2604, 2603, 2600, 2596, 2593, 2592, 2589, 
          2588, 2585, 2584, 2581, 2580, 2577, 2576, 2573, 2572, 2569, 2568, 
          2532, 2599}], 
         Line3DBox[{2630, 2660, 2659, 2656, 2655, 2652, 2651, 2648, 2647, 
          2644, 2643, 2640, 2639, 2636, 2635, 2632, 2629, 2626, 2625, 2622, 
          2621, 2618, 2617, 2614, 2613, 2610, 2609, 2606, 2605, 2602, 2601, 
          2565, 2631}], 
         Line3DBox[{2662, 2598, 2633, 2634, 2637, 2638, 2641, 2642, 2645, 
          2646, 2649, 2650, 2653, 2654, 2657, 2658, 2661, 2663, 2664, 2665, 
          2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 
          2677, 2678}], 
         Line3DBox[{2697, 2679, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 
          2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2698, 2701, 2702, 
          2705, 2706, 2709, 2710, 2713, 2714, 2717, 2718, 2721, 2722, 2725, 
          2726, 2728}], 
         Line3DBox[{2730, 2680, 2699, 2700, 2703, 2704, 2707, 2708, 2711, 
          2712, 2715, 2716, 2719, 2720, 2723, 2724, 2727, 2731, 2734, 2735, 
          2738, 2739, 2742, 2743, 2746, 2747, 2750, 2751, 2754, 2755, 2758, 
          2759, 2761}], 
         Line3DBox[{2763, 2696, 2732, 2733, 2736, 2737, 2740, 2741, 2744, 
          2745, 2748, 2749, 2752, 2753, 2756, 2757, 2760, 2764, 2767, 2768, 
          2771, 2772, 2775, 2776, 2779, 2780, 2783, 2784, 2787, 2788, 2791, 
          2792, 2794}], 
         Line3DBox[{2796, 2729, 2765, 2766, 2769, 2770, 2773, 2774, 2777, 
          2778, 2781, 2782, 2785, 2786, 2789, 2790, 2793, 2797, 2800, 2801, 
          2804, 2805, 2808, 2809, 2812, 2813, 2816, 2817, 2820, 2821, 2824, 
          2825, 2827}], 
         Line3DBox[{2829, 2762, 2798, 2799, 2802, 2803, 2806, 2807, 2810, 
          2811, 2814, 2815, 2818, 2819, 2822, 2823, 2826, 2830, 2833, 2834, 
          2837, 2838, 2841, 2842, 2845, 2846, 2849, 2850, 2853, 2854, 2857, 
          2858, 2860}], 
         Line3DBox[{2861, 2795, 2831, 2832, 2835, 2836, 2839, 2840, 2843, 
          2844, 2847, 2848, 2851, 2852, 2855, 2856, 2859, 2862, 2865, 2866, 
          2869, 2870, 2873, 2874, 2877, 2878, 2881, 2882, 2885, 2886, 2889, 
          2890, 2892}], 
         Line3DBox[{2893, 2828, 2863, 2864, 2867, 2868, 2871, 2872, 2875, 
          2876, 2879, 2880, 2883, 2884, 2887, 2888, 2891, 2894, 2895, 2896, 
          2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 2906, 2907, 
          2908, 2909}], 
         Line3DBox[{1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 
          1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139}], 
         Line3DBox[{2927, 2958, 2957, 2954, 2953, 2950, 2949, 2946, 2945, 
          2942, 2941, 2938, 2937, 2934, 2933, 2930, 2926, 2925, 2924, 2923, 
          2922, 2921, 2920, 2919, 2918, 2917, 2916, 2915, 2914, 2913, 2912, 
          2910, 2929}], 
         Line3DBox[{2960, 2991, 2990, 2987, 2986, 2983, 2982, 2979, 2978, 
          2975, 2974, 2971, 2970, 2967, 2966, 2963, 2959, 2956, 2955, 2952, 
          2951, 2948, 2947, 2944, 2943, 2940, 2939, 2936, 2935, 2932, 2931, 
          2911, 2962}], 
         Line3DBox[{2993, 3024, 3023, 3020, 3019, 3016, 3015, 3012, 3011, 
          3008, 3007, 3004, 3003, 3000, 2999, 2996, 2992, 2989, 2988, 2985, 
          2984, 2981, 2980, 2977, 2976, 2973, 2972, 2969, 2968, 2965, 2964, 
          2928, 2995}], 
         Line3DBox[{3026, 3057, 3056, 3053, 3052, 3049, 3048, 3045, 3044, 
          3041, 3040, 3037, 3036, 3033, 3032, 3029, 3025, 3022, 3021, 3018, 
          3017, 3014, 3013, 3010, 3009, 3006, 3005, 3002, 3001, 2998, 2997, 
          2961, 3028}], 
         Line3DBox[{3059, 3090, 3089, 3086, 3085, 3082, 3081, 3078, 3077, 
          3074, 3073, 3070, 3069, 3066, 3065, 3062, 3058, 3055, 3054, 3051, 
          3050, 3047, 3046, 3043, 3042, 3039, 3038, 3035, 3034, 3031, 3030, 
          2994, 3061}], 
         Line3DBox[{3092, 3122, 3121, 3118, 3117, 3114, 3113, 3110, 3109, 
          3106, 3105, 3102, 3101, 3098, 3097, 3094, 3091, 3088, 3087, 3084, 
          3083, 3080, 3079, 3076, 3075, 3072, 3071, 3068, 3067, 3064, 3063, 
          3027, 3093}], 
         Line3DBox[{3124, 3060, 3095, 3096, 3099, 3100, 3103, 3104, 3107, 
          3108, 3111, 3112, 3115, 3116, 3119, 3120, 3123, 3125, 3126, 3127, 
          3128, 3129, 3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3138, 
          3139, 3140}]}, 
        {GrayLevel[0.2], 
         Line3DBox[{2, 19, 1295, 36, 1313, 53, 1346, 70, 1379, 87, 1412, 104, 
          1445, 121, 1477, 138, 155, 172, 1526, 189, 1545, 206, 1578, 223, 
          1611, 240, 1644, 257, 1677, 274, 1709, 291, 308}], 
         Line3DBox[{3, 20, 1297, 37, 1317, 54, 1350, 71, 1383, 88, 1416, 105, 
          1449, 122, 1481, 139, 156, 173, 1528, 190, 1549, 207, 1582, 224, 
          1615, 241, 1648, 258, 1681, 275, 1713, 292, 309}], 
         Line3DBox[{4, 21, 1299, 38, 1321, 55, 1354, 72, 1387, 89, 1420, 106, 
          1453, 123, 1485, 140, 157, 174, 1530, 191, 1553, 208, 1586, 225, 
          1619, 242, 1652, 259, 1685, 276, 1717, 293, 310}], 
         Line3DBox[{5, 22, 1301, 39, 1325, 56, 1358, 73, 1391, 90, 1424, 107, 
          1457, 124, 1489, 141, 158, 175, 1532, 192, 1557, 209, 1590, 226, 
          1623, 243, 1656, 260, 1689, 277, 1721, 294, 311}], 
         Line3DBox[{6, 23, 1303, 40, 1329, 57, 1362, 74, 1395, 91, 1428, 108, 
          1461, 125, 1493, 142, 159, 176, 1534, 193, 1561, 210, 1594, 227, 
          1627, 244, 1660, 261, 1693, 278, 1725, 295, 312}], 
         Line3DBox[{7, 24, 1305, 41, 1333, 58, 1366, 75, 1399, 92, 1432, 109, 
          1465, 126, 1497, 143, 160, 177, 1536, 194, 1565, 211, 1598, 228, 
          1631, 245, 1664, 262, 1697, 279, 1729, 296, 313}], 
         Line3DBox[{8, 25, 1307, 42, 1337, 59, 1370, 76, 1403, 93, 1436, 110, 
          1469, 127, 1501, 144, 161, 178, 1538, 195, 1569, 212, 1602, 229, 
          1635, 246, 1668, 263, 1701, 280, 1733, 297, 314}], 
         Line3DBox[{9, 26, 1309, 43, 1341, 60, 1374, 77, 1407, 94, 1440, 111, 
          1473, 128, 1505, 145, 162, 179, 1540, 196, 1573, 213, 1606, 230, 
          1639, 247, 1672, 264, 1705, 281, 1737, 298, 315}], 
         Line3DBox[{10, 27, 1315, 44, 1348, 61, 1381, 78, 1414, 95, 1447, 112,
           1479, 129, 1509, 146, 163, 180, 1547, 197, 1580, 214, 1613, 231, 
          1646, 248, 1679, 265, 1711, 282, 1740, 299, 316}], 
         Line3DBox[{11, 28, 1319, 45, 1352, 62, 1385, 79, 1418, 96, 1451, 113,
           1483, 130, 1511, 147, 164, 181, 1551, 198, 1584, 215, 1617, 232, 
          1650, 249, 1683, 266, 1715, 283, 1742, 300, 317}], 
         Line3DBox[{12, 29, 1323, 46, 1356, 63, 1389, 80, 1422, 97, 1455, 114,
           1487, 131, 1513, 148, 165, 182, 1555, 199, 1588, 216, 1621, 233, 
          1654, 250, 1687, 267, 1719, 284, 1744, 301, 318}], 
         Line3DBox[{13, 30, 1327, 47, 1360, 64, 1393, 81, 1426, 98, 1459, 115,
           1491, 132, 1515, 149, 166, 183, 1559, 200, 1592, 217, 1625, 234, 
          1658, 251, 1691, 268, 1723, 285, 1746, 302, 319}], 
         Line3DBox[{14, 31, 1331, 48, 1364, 65, 1397, 82, 1430, 99, 1463, 116,
           1495, 133, 1517, 150, 167, 184, 1563, 201, 1596, 218, 1629, 235, 
          1662, 252, 1695, 269, 1727, 286, 1748, 303, 320}], 
         Line3DBox[{15, 32, 1335, 49, 1368, 66, 1401, 83, 1434, 100, 1467, 
          117, 1499, 134, 1519, 151, 168, 185, 1567, 202, 1600, 219, 1633, 
          236, 1666, 253, 1699, 270, 1731, 287, 1750, 304, 321}], 
         Line3DBox[{16, 33, 1339, 50, 1372, 67, 1405, 84, 1438, 101, 1471, 
          118, 1503, 135, 1521, 152, 169, 186, 1571, 203, 1604, 220, 1637, 
          237, 1670, 254, 1703, 271, 1735, 288, 1752, 305, 322}], 
         Line3DBox[{325, 342, 1757, 359, 1775, 376, 1808, 393, 1841, 410, 
          1874, 427, 1907, 444, 1939, 461, 478, 495, 1988, 512, 2007, 529, 
          2040, 546, 2073, 563, 2106, 580, 2139, 597, 2171, 614, 631}], 
         Line3DBox[{326, 343, 1759, 360, 1779, 377, 1812, 394, 1845, 411, 
          1878, 428, 1911, 445, 1943, 462, 479, 496, 1990, 513, 2011, 530, 
          2044, 547, 2077, 564, 2110, 581, 2143, 598, 2175, 615, 632}], 
         Line3DBox[{327, 344, 1761, 361, 1783, 378, 1816, 395, 1849, 412, 
          1882, 429, 1915, 446, 1947, 463, 480, 497, 1992, 514, 2015, 531, 
          2048, 548, 2081, 565, 2114, 582, 2147, 599, 2179, 616, 633}], 
         Line3DBox[{328, 345, 1763, 362, 1787, 379, 1820, 396, 1853, 413, 
          1886, 430, 1919, 447, 1951, 464, 481, 498, 1994, 515, 2019, 532, 
          2052, 549, 2085, 566, 2118, 583, 2151, 600, 2183, 617, 634}], 
         Line3DBox[{329, 346, 1765, 363, 1791, 380, 1824, 397, 1857, 414, 
          1890, 431, 1923, 448, 1955, 465, 482, 499, 1996, 516, 2023, 533, 
          2056, 550, 2089, 567, 2122, 584, 2155, 601, 2187, 618, 635}], 
         Line3DBox[{330, 347, 1767, 364, 1795, 381, 1828, 398, 1861, 415, 
          1894, 432, 1927, 449, 1959, 466, 483, 500, 1998, 517, 2027, 534, 
          2060, 551, 2093, 568, 2126, 585, 2159, 602, 2191, 619, 636}], 
         Line3DBox[{331, 348, 1769, 365, 1799, 382, 1832, 399, 1865, 416, 
          1898, 433, 1931, 450, 1963, 467, 484, 501, 2000, 518, 2031, 535, 
          2064, 552, 2097, 569, 2130, 586, 2163, 603, 2195, 620, 637}], 
         Line3DBox[{332, 349, 1771, 366, 1803, 383, 1836, 400, 1869, 417, 
          1902, 434, 1935, 451, 1967, 468, 485, 502, 2002, 519, 2035, 536, 
          2068, 553, 2101, 570, 2134, 587, 2167, 604, 2199, 621, 638}], 
         Line3DBox[{333, 350, 1777, 367, 1810, 384, 1843, 401, 1876, 418, 
          1909, 435, 1941, 452, 1971, 469, 486, 503, 2009, 520, 2042, 537, 
          2075, 554, 2108, 571, 2141, 588, 2173, 605, 2202, 622, 639}], 
         Line3DBox[{334, 351, 1781, 368, 1814, 385, 1847, 402, 1880, 419, 
          1913, 436, 1945, 453, 1973, 470, 487, 504, 2013, 521, 2046, 538, 
          2079, 555, 2112, 572, 2145, 589, 2177, 606, 2204, 623, 640}], 
         Line3DBox[{335, 352, 1785, 369, 1818, 386, 1851, 403, 1884, 420, 
          1917, 437, 1949, 454, 1975, 471, 488, 505, 2017, 522, 2050, 539, 
          2083, 556, 2116, 573, 2149, 590, 2181, 607, 2206, 624, 641}], 
         Line3DBox[{336, 353, 1789, 370, 1822, 387, 1855, 404, 1888, 421, 
          1921, 438, 1953, 455, 1977, 472, 489, 506, 2021, 523, 2054, 540, 
          2087, 557, 2120, 574, 2153, 591, 2185, 608, 2208, 625, 642}], 
         Line3DBox[{337, 354, 1793, 371, 1826, 388, 1859, 405, 1892, 422, 
          1925, 439, 1957, 456, 1979, 473, 490, 507, 2025, 524, 2058, 541, 
          2091, 558, 2124, 575, 2157, 592, 2189, 609, 2210, 626, 643}], 
         Line3DBox[{338, 355, 1797, 372, 1830, 389, 1863, 406, 1896, 423, 
          1929, 440, 1961, 457, 1981, 474, 491, 508, 2029, 525, 2062, 542, 
          2095, 559, 2128, 576, 2161, 593, 2193, 610, 2212, 627, 644}], 
         Line3DBox[{339, 356, 1801, 373, 1834, 390, 1867, 407, 1900, 424, 
          1933, 441, 1965, 458, 1983, 475, 492, 509, 2033, 526, 2066, 543, 
          2099, 560, 2132, 577, 2165, 594, 2197, 611, 2214, 628, 645}], 
         Line3DBox[{648, 665, 2219, 682, 2237, 699, 2270, 716, 2303, 733, 
          2336, 750, 2369, 767, 2401, 784, 801, 818, 2450, 835, 2469, 852, 
          2502, 869, 2535, 886, 2568, 903, 2601, 920, 2633, 937, 954}], 
         Line3DBox[{649, 666, 2221, 683, 2241, 700, 2274, 717, 2307, 734, 
          2340, 751, 2373, 768, 2405, 785, 802, 819, 2452, 836, 2473, 853, 
          2506, 870, 2539, 887, 2572, 904, 2605, 921, 2637, 938, 955}], 
         Line3DBox[{650, 667, 2223, 684, 2245, 701, 2278, 718, 2311, 735, 
          2344, 752, 2377, 769, 2409, 786, 803, 820, 2454, 837, 2477, 854, 
          2510, 871, 2543, 888, 2576, 905, 2609, 922, 2641, 939, 956}], 
         Line3DBox[{651, 668, 2225, 685, 2249, 702, 2282, 719, 2315, 736, 
          2348, 753, 2381, 770, 2413, 787, 804, 821, 2456, 838, 2481, 855, 
          2514, 872, 2547, 889, 2580, 906, 2613, 923, 2645, 940, 957}], 
         Line3DBox[{652, 669, 2227, 686, 2253, 703, 2286, 720, 2319, 737, 
          2352, 754, 2385, 771, 2417, 788, 805, 822, 2458, 839, 2485, 856, 
          2518, 873, 2551, 890, 2584, 907, 2617, 924, 2649, 941, 958}], 
         Line3DBox[{653, 670, 2229, 687, 2257, 704, 2290, 721, 2323, 738, 
          2356, 755, 2389, 772, 2421, 789, 806, 823, 2460, 840, 2489, 857, 
          2522, 874, 2555, 891, 2588, 908, 2621, 925, 2653, 942, 959}], 
         Line3DBox[{654, 671, 2231, 688, 2261, 705, 2294, 722, 2327, 739, 
          2360, 756, 2393, 773, 2425, 790, 807, 824, 2462, 841, 2493, 858, 
          2526, 875, 2559, 892, 2592, 909, 2625, 926, 2657, 943, 960}], 
         Line3DBox[{655, 672, 2233, 689, 2265, 706, 2298, 723, 2331, 740, 
          2364, 757, 2397, 774, 2429, 791, 808, 825, 2464, 842, 2497, 859, 
          2530, 876, 2563, 893, 2596, 910, 2629, 927, 2661, 944, 961}], 
         Line3DBox[{656, 673, 2239, 690, 2272, 707, 2305, 724, 2338, 741, 
          2371, 758, 2403, 775, 2433, 792, 809, 826, 2471, 843, 2504, 860, 
          2537, 877, 2570, 894, 2603, 911, 2635, 928, 2664, 945, 962}], 
         Line3DBox[{657, 674, 2243, 691, 2276, 708, 2309, 725, 2342, 742, 
          2375, 759, 2407, 776, 2435, 793, 810, 827, 2475, 844, 2508, 861, 
          2541, 878, 2574, 895, 2607, 912, 2639, 929, 2666, 946, 963}], 
         Line3DBox[{658, 675, 2247, 692, 2280, 709, 2313, 726, 2346, 743, 
          2379, 760, 2411, 777, 2437, 794, 811, 828, 2479, 845, 2512, 862, 
          2545, 879, 2578, 896, 2611, 913, 2643, 930, 2668, 947, 964}], 
         Line3DBox[{659, 676, 2251, 693, 2284, 710, 2317, 727, 2350, 744, 
          2383, 761, 2415, 778, 2439, 795, 812, 829, 2483, 846, 2516, 863, 
          2549, 880, 2582, 897, 2615, 914, 2647, 931, 2670, 948, 965}], 
         Line3DBox[{660, 677, 2255, 694, 2288, 711, 2321, 728, 2354, 745, 
          2387, 762, 2419, 779, 2441, 796, 813, 830, 2487, 847, 2520, 864, 
          2553, 881, 2586, 898, 2619, 915, 2651, 932, 2672, 949, 966}], 
         Line3DBox[{661, 678, 2259, 695, 2292, 712, 2325, 729, 2358, 746, 
          2391, 763, 2423, 780, 2443, 797, 814, 831, 2491, 848, 2524, 865, 
          2557, 882, 2590, 899, 2623, 916, 2655, 933, 2674, 950, 967}], 
         Line3DBox[{662, 679, 2263, 696, 2296, 713, 2329, 730, 2362, 747, 
          2395, 764, 2427, 781, 2445, 798, 815, 832, 2495, 849, 2528, 866, 
          2561, 883, 2594, 900, 2627, 917, 2659, 934, 2676, 951, 968}], 
         Line3DBox[{971, 988, 2681, 1005, 2699, 1022, 2732, 1039, 2765, 1056, 
          2798, 1073, 2831, 1090, 2863, 1107, 1124, 1141, 2912, 1158, 2931, 
          1175, 2964, 1192, 2997, 1209, 3030, 1226, 3063, 1243, 3095, 1260, 
          1277}], Line3DBox[{972, 989, 2683, 1006, 2703, 1023, 2736, 1040, 
          2769, 1057, 2802, 1074, 2835, 1091, 2867, 1108, 1125, 1142, 2914, 
          1159, 2935, 1176, 2968, 1193, 3001, 1210, 3034, 1227, 3067, 1244, 
          3099, 1261, 1278}], 
         Line3DBox[{973, 990, 2685, 1007, 2707, 1024, 2740, 1041, 2773, 1058, 
          2806, 1075, 2839, 1092, 2871, 1109, 1126, 1143, 2916, 1160, 2939, 
          1177, 2972, 1194, 3005, 1211, 3038, 1228, 3071, 1245, 3103, 1262, 
          1279}], Line3DBox[{974, 991, 2687, 1008, 2711, 1025, 2744, 1042, 
          2777, 1059, 2810, 1076, 2843, 1093, 2875, 1110, 1127, 1144, 2918, 
          1161, 2943, 1178, 2976, 1195, 3009, 1212, 3042, 1229, 3075, 1246, 
          3107, 1263, 1280}], 
         Line3DBox[{975, 992, 2689, 1009, 2715, 1026, 2748, 1043, 2781, 1060, 
          2814, 1077, 2847, 1094, 2879, 1111, 1128, 1145, 2920, 1162, 2947, 
          1179, 2980, 1196, 3013, 1213, 3046, 1230, 3079, 1247, 3111, 1264, 
          1281}], 
         Line3DBox[{976, 993, 2691, 1010, 2719, 1027, 2752, 1044, 2785, 1061, 
          2818, 1078, 2851, 1095, 2883, 1112, 1129, 1146, 2922, 1163, 2951, 
          1180, 2984, 1197, 3017, 1214, 3050, 1231, 3083, 1248, 3115, 1265, 
          1282}], Line3DBox[{977, 994, 2693, 1011, 2723, 1028, 2756, 1045, 
          2789, 1062, 2822, 1079, 2855, 1096, 2887, 1113, 1130, 1147, 2924, 
          1164, 2955, 1181, 2988, 1198, 3021, 1215, 3054, 1232, 3087, 1249, 
          3119, 1266, 1283}], 
         Line3DBox[{978, 995, 2695, 1012, 2727, 1029, 2760, 1046, 2793, 1063, 
          2826, 1080, 2859, 1097, 2891, 1114, 1131, 1148, 2926, 1165, 2959, 
          1182, 2992, 1199, 3025, 1216, 3058, 1233, 3091, 1250, 3123, 1267, 
          1284}], Line3DBox[{979, 996, 2701, 1013, 2734, 1030, 2767, 1047, 
          2800, 1064, 2833, 1081, 2865, 1098, 2895, 1115, 1132, 1149, 2933, 
          1166, 2966, 1183, 2999, 1200, 3032, 1217, 3065, 1234, 3097, 1251, 
          3126, 1268, 1285}], 
         Line3DBox[{980, 997, 2705, 1014, 2738, 1031, 2771, 1048, 2804, 1065, 
          2837, 1082, 2869, 1099, 2897, 1116, 1133, 1150, 2937, 1167, 2970, 
          1184, 3003, 1201, 3036, 1218, 3069, 1235, 3101, 1252, 3128, 1269, 
          1286}], Line3DBox[{981, 998, 2709, 1015, 2742, 1032, 2775, 1049, 
          2808, 1066, 2841, 1083, 2873, 1100, 2899, 1117, 1134, 1151, 2941, 
          1168, 2974, 1185, 3007, 1202, 3040, 1219, 3073, 1236, 3105, 1253, 
          3130, 1270, 1287}], 
         Line3DBox[{982, 999, 2713, 1016, 2746, 1033, 2779, 1050, 2812, 1067, 
          2845, 1084, 2877, 1101, 2901, 1118, 1135, 1152, 2945, 1169, 2978, 
          1186, 3011, 1203, 3044, 1220, 3077, 1237, 3109, 1254, 3132, 1271, 
          1288}], Line3DBox[{983, 1000, 2717, 1017, 2750, 1034, 2783, 1051, 
          2816, 1068, 2849, 1085, 2881, 1102, 2903, 1119, 1136, 1153, 2949, 
          1170, 2982, 1187, 3015, 1204, 3048, 1221, 3081, 1238, 3113, 1255, 
          3134, 1272, 1289}], 
         Line3DBox[{984, 1001, 2721, 1018, 2754, 1035, 2787, 1052, 2820, 1069,
           2853, 1086, 2885, 1103, 2905, 1120, 1137, 1154, 2953, 1171, 2986, 
          1188, 3019, 1205, 3052, 1222, 3085, 1239, 3117, 1256, 3136, 1273, 
          1290}], 
         Line3DBox[{985, 1002, 2725, 1019, 2758, 1036, 2791, 1053, 2824, 1070,
           2857, 1087, 2889, 1104, 2907, 1121, 1138, 1155, 2957, 1172, 2990, 
          1189, 3023, 1206, 3056, 1223, 3089, 1240, 3121, 1257, 3138, 1274, 
          1291}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
      VertexNormals->CompressedData["
1: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
wX/nt3H0KfrcQZRQjiXiWzSJMlvcl3NmxYmAHPGPqIWS2X8Eyo2odMv9czBP
JAu1FkhCCTMcY6qS/oCqXd/HifzJwfSUFyrxHHmgwUAwav7gnMUJfpttDSgg
vcb0pIVDKqi9A75cvqhdeLXmPiIc97L308+Hh3OvHqld162uOSFL/+b47E55
oVIO8MpBeqt3kxEImvZyQHpPAkr8YB72ZRdtrFlYEULn+tVEKbIK1dOwj9PZ
qJeWUnciNQQnMs5f/IpiFN2fkz03+0gCCZ5FGisGjTaJ1lCllPv7l4ZyIrsf
R20j2tcyPI81kwFKgst4vLamgtg1eQ1B05tVz55hAH8U+vH3MfGr3ddTe79R
euQ035RaGEDWqyw8/tqYWHNdcQs1d8fhS/BZMrCRLIenY5NTm3xlYwp1Vuio
/ZGbK6if0ftynrX7gaIv4zPq759X9S3Sfaicuf3vtLvFXrVanocKaIiKpBcq
R9kcyPnYpVQXPsowFO2MkiXl01iU1kG/qx8/6cYTP3uUCw813eg5d9T/+5F2
Skfo5rk0UEXSK8vJx40Oz5na1Ody9ENmRNTlRHuxO9vhXoWypstKI0K8CPXb
MbG4TNFDnJ7kuZ+Lszyy7lI6XVykhvr/fNykcqwK8R9ThDSjXLGh/Slq/gBX
9rnNR/TOFylOf8zGax+M+nogD/2ERL6lEimIsKhuNjNnFurZwT6TXy9zF5ia
PyGLKTble/ZNKBHtffz6m0vBdtR9iNjdJAb9kxMo7cD9vnrzn7snAlbaEE4L
++bAXQxKGbVvB/eM+Rx/dnSjpoWlIj9lrKD0wvb7H8wG+8+xTHajipr5dnc+
fUc1re/TSXC+lL0zUo3ikcuLTcttRNFY7P/fFsKvcrucySii3/URpiKZqJaD
vi/YdexxR7IP6tL4rt2JziDU3MHv6luJ1DHVMUU1oD2IIkf+O4cwgnprL3t5
VIcd1+x9SfXDczN39x4l8+BBHS8VKrofL354ziK39FY1Rn/VTGgYM57f/m8e
ObPquIvL1DGkzRalftLh5OHff9wb4jmvyoXo+p/YvmQlcogvVRHFDm/eQMpG
g2I/h6se3jvBEVmubx1GiJuWovtSvTVq+QDnymf1o6/0QvSkbViKXweiyA/w
gpBdzWctCQjyoEKFRfQDSvdgz4nPh48hqo9Kkef8towqqHpUffg+Li883NJG
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
E7QzACg9pClFMDnj5Y/qbnD7oiyf9N/ti9HQzc/YL4flQcx5l0/+jXgP96+N
7Uw+g8Xl7J+PJiwxve3Z1XA9MAui3HctzD8uBN7QzJzNKSLcV6Kgpz3mh16W
1e5rJsbArRbPF7SYnDeVv+/YyIYg9zflUbQtaZBR9aNz8xcRfiRkc/wKzYQA
fkmZwATMP4ldK0rA+Bsu14efJ/0FMDIkOLCORQOWNUh1YPmIYvzVCH7NF+jr
7uhrExHpwLGpV2mJydnBVcBEfTQchR1PztboegP52rpc+O8YT8NbdccyhIDZ
Dtm1e9lREL1mJXEc+z1Ufwy9D409gtzHYxpbQk9gt9sJhjJsHSzS9dw/OIej
nTsc7VU686BemdugaZkI0Xp/XrBahCMl09y7nDpFoFeDXz+P5S8UN07tm5+x
BYeEKd4ovAtwT0rIIVI9zSdGh7NMHQ4p51W88DEAcTlRP5LeLj0TSXSCcKT7
RF9u95ciOM3Xz/0N49Weh/l27X7NBZSy5XoP3IVBQlGB/N7ZGfebf+fwffgg
+/Rpn3tjuOrb//pV2EUOBOvk8CBu8VZ+9qBzcDR+gfxuslnzZ/ytIE9U4ZV9
ZwdrGfDoDzZcHyWCSRTd1JrCbqQhWjq6KnkQ+o88IdvX+OXgJKtlNjTZqq8Q
7MwH1xipyHV+Cx2FIB79J+iLRWVYiGcZNFVEvDg3guWtflebb9iHwf22USK7
bjmsbw/TP8HyjoyzX6edqTjQ0SZ19b0H+OFRxD7ynA2axUYFLkFJ9HDfbi1m
Fxmwvbdbm4Qz0i58rPkRAaA6FaTIWw7CUWufGzE5Rl+oXZTMU4AzkEn65GAh
bD0/0xaOrc/wmzNmKxuXkewmzdO1D9dB/0uVDEnO8aEtfv9OVeRgn2PK0qEL
eT6/v5H8CUv3O2c3ixTgbzpv2PmzAE5E7bN6ie1XkRXd59WVSEg8ElZsj0+F
3ZWi+3U2iHCwlUJT7Jg6knTt93tgpQ9Vyp0iJDlRvXJnIMkI2f/WopK9/Qi+
uvX8Jp2zM33skRiIjAAhC8Kho9dSIHhmvFoHy4uXkw+ZuGg/hddBuyzz2Pzh
oUrKD9JcqTCxMG0XZhPUrXkJfzHDDu52tSx+wvAvAZtOIfXWqKzg5XnBdk+4
HnnlSCqGPwoOKKBVfgKvftbJumY/AyqTpmRNDBdd2m7G4YzAu5qCm+arFdws
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
h7802x/bsVyCrE8GAAgff4E=
       "]], {
      {RGBColor[1, 1, 0], Opacity[0.5], Point3DBox[CompressedData["
1:eJxTTMoPSmViYGCQA2JmIM5SPsB/6gGbwza2+oK3RYwODGDwwf4dR5X+ZnZO
hzDT+Z9SFZjg4nlbCx3/fftu/+a0UvtTHy64+IGzlx9PN3hgf+3iyqDQPoQ5
L1wy9pu6v7WvXeAacOjFZ3uY+Oz/7/ltmj/ZH9EVqT1RyAlXLzxXfuXZa0wO
m6Q1uTj72eHiMx+2n2CUZneIfezafrUcIc7AFBrrs4TPIWKGxuv+Dla4uMMK
xVXqoQwO2utleazvCsDFYya97t8+gcthQ5ZfXmfRO7h7ik33WVUvZXb4xba3
pvgCwp0RgbMm7j7+yz5j6oHHnBe54eZkGXrWv9JndyioMv97M+0kXL1n7a1f
5wX/2+8QcCotfncBLi68ffXEV6sYHVp3VDbP+vQLLr6gfNbqzNlsDlKLkmQ8
u9/DxZ/1PpA4GfjdnuOD/gyD3N9w8VPbRKZMKvxvr/Ls/hym8wh3OnFzJdZ/
+2S/mLt2bcJTZrg7r05QTdk7hcthibkO8xJzRLi1RRnm8Hr8t5+k6Obttw2h
Pt/56Ms7hawOAfuKvI6zIeJXgzmXrSTtn/351Vb7S/b+R9jbdNJEYzGrg995
hrzqyYjwPzZb0fL50T/2d9SUY1YvQIT/sQX/U1yl/tsL3GTqf7DzDCKcX+W3
3nRjd4i6MjPT+SMi/ZxzecRTHfvMnuV4wuZWpjtw9c81Fbce/vbXfud0XpO0
Bx/g4gCaJwBa
        "]]}, 
      {RGBColor[0, 0, 1], Opacity[0.5], Point3DBox[CompressedData["
1:eJxTTMoPSmViYGCQA2JmID6R8dpMad3h/e4rXgZkhn22ZwCDD/YPyos/LW1+
uX9d5FobzXO/4eJ8UwJy3J483M/w5bejy53rcHGOk+UMT+PP7t8e+O2f4ft/
cPEzG0vOadt83S+i9WKK0M6vcPHvX3f/qljwc/9Nv/7fCRx/4eLXl+3R3M3J
fqBndV5o+7YvcPGSN1eeRLqwHIh0u/3e8wSLA0zcLd3Ssmwqz4FL/MXTpizn
gYv7ddwWn3yQ7UDdsYTf4inMcHGD6u6XxSUP99ufzNKZMeU/3PywT1fjLr3/
vf9LnPesY4VccPVa7ydvdXnGcuBFIONzVsWr+2HiBy75llz8PWM/37UPjKc4
fsHN4W81lpJo/b2/4tqPlbM5PsLF5bozlm7sZzhQccw/azE7Inxizxke8jP5
tb9Hb1/D9BW8cHsTqluLQns223dMNvi2P4wbLm7itjRKOIr7wLrC4l0Hsxng
4uVFaZ/OL2I5UDOx7tST84jwaYnq2X2CgfPAz1NfL7xP+wG398qjB37svMwH
uA9vtUy/jnB/adrixnSv//sPTjl3YmM6It59PyzoWG/PcqCqtbT3WwQinM1l
ayqme/3a/6ZMytSp5xNcvc6nOyUT5rMcaFkoJZGSjvBXkc/EpQEmj/ezMn/O
W72PDS5erK0v8Lfw7/5v87jPM8V/h5ujkbjeLFee9UCg/m7n6f844eo9kz/z
he78tV96nVWWERtCHACgARo9
        "]]}, 
      {RGBColor[0, 1, 0], Opacity[0.5], Point3DBox[CompressedData["
1:eJxTTMoPSmViYGCQA2JmIO6qy5yVIv7BfttMreOqPTwHGMDgg73ZvorYKVr3
7GUOR87fvujlfpg4u5DNpwDhw/vnbmCYv1f3O1z8bu1TpWaTz/vfMH+/qywm
CDenyS17vkrBKftP1RfLKiz54OJphX3Ru9Yc259cqqVwx4gZLn53Ass+kdkP
7K9G2d36nscNF9fdGX/tO/Ph/UxGH5Nd9rLCxW/LeVb6mB/ZXztPctOTTbxw
8YBTP03aj37bH/th25QHb//A3SkaNG3+9cof9osmfGG55/sLLn7xUdgN0eIT
+1Wz2G4eE2WDm7PsOuP/da3n9nfKhXXYnuSEi1vf/fzlZ+cz+8mZLq0+BxHm
i3eeub7N+Yn94cuFFjcTOeDqOUVO1m+7+tW+3n/3nsp8hDkLal5XnXh50/5C
fGXqi+sscPE/q1LZDsh83v9kTRGD3T5EOFzawf0zeccd+w61Dfsn1/2E23vT
o11tS8Vne/7lFxQO/f4HF5+ndHXd/nCmA6fXMR57pI0wRyTopcbp6T+B7pmz
LfkLItw+fPjVtpnx1f7dkU7cF9v54eKfVzGp8Lq/2D/9fkzwrAUI93sfOeI+
6fWl/RPWv/h9/NczhHu+sk4NiWJwuB7Z7dz3hAuu/qzA5c+BVTftW6yPX780
WxguzhMTG/JD9qm9CrO014YziHCw7jQTWGHweH+NZeCnlddew83/xt2889T6
9/vNWnYeNvdmgqsHAGHYKEI=
        "]]}, 
      {RGBColor[1, 0, 0], Opacity[0.5], Point3DBox[CompressedData["
1:eJxTTMoPSmViYGCQA2JmIM51WL/owpSt9tyTv6TzzrhjzwAGH+yzz2SdPMTw
dL/P8+Zt/8qnwcWv9J29PyF/pb29t/wfGYfvcPH/c39a1zLetl82ZXvtzHn3
4OL7fQ6tyDH8ah/Au5DzduteuDiLfYfw9uSH+2+sVT37Je4DXDxmrdkO+Tm3
9v+dx7D71LtT+2Hiay+GiYlKPrAXLGeYu2LTFrj6+cp6X7ua79r/5lyfVy78
Fi7u0KX4M7346/7S+AeXZgZ9hIuX6fz4HMs3xf7E0yMqaWwH4eIX77OebPF6
b/91UubLC3MR6uvcvmrMbH65v0nm+Ud+3idw8UQOp/Avby7tF1+w8Had1EW4
+D25Fb9lO4/a/7O6ltr4CqE+88uz3yIPn9qf2/jRQMX4NNxf+7Nc9Pp2HLWf
JCbs7L6MyQEm3riD42F+Xbt9YHNv6ISsW3Bzgq+EfGFKeLg/30/cvIifGa5e
rLPzx2fjD/vFhVjOKlv9g5ufpy9/Xe/ie/v91kwV6Ysewc2Z3P3P1OL92/0T
46K957Aiwv/cxg8qKx9t3P9QI7zdoOUF3Bxhx7fMetbn939dZfycb9dluPp9
9Vai9zK329fHLJqdUX0Irl724KQGv0vX7DelRE06G3UWrr7W+uSfJ3kP9ifb
fhLiTULEV94Znwk5ekf2338ka3Sy5iVcPH3Hq8Ssnxf2M6/8VOTJfgku/q+y
nLPJ7779l5qfNedDj8DFAYwMIMM=
        "]]}}},
    Axes->True,
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.4},
    DisplayFunction->Identity,
    FaceGridsStyle->Automatic,
    Method->{"DefaultBoundaryStyle" -> Directive[
        GrayLevel[0.3]], "RotationControl" -> "Globe"},
    PlotLabel->FormBox["\"LogisticRegression\"", TraditionalForm],
    PlotRange->{{-4., 4.}, {-5., 4.}, {0, 1}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic, Automatic}], ",", 
   Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
W+AdcKkjg38M4mJ5CVzqyPo4Sx3Zj4vlBXCpI8N9MsTF8hZ4AzyMZP7E5y3w
DrjUkf24WF4AL4FLHdmPSw5xsbwAngPPgEsd2c/DWC51ZD8ulksd2Y+L5R1w
qSP7cbG8AC51ZHP8I/ffe83Me8pSR77k1sUsz4FLHRny/BAXyxvgcUBcLG+B
d8CljuzHxXKpI5vzPHLzPjjxev659v24WL64juzHxXKpI0Pect+Pi61rh5HM
j7/Hj4vlHXCpI/vvVybHB3gJXOrI+nlK6si+H8a+h1sAlzqyX9+39WWpI/v1
F8sb4GHYOrjUkX1/sp3fwfznfR/5VyYuZ1dHNjrAF7+P/AM3Lg3U9+37v1JH
Ns/vMD+MZt+vv1jeApc6sjmvpj7/+urIflxe3feRz0sdGdbLuX8f+bzXkf24
nP/3kc97HdmPy/l/Hxl8feemjgz7i81jA//m30f245LoA39568h+XM7P+8h+
XCw/f3VkPy7n531kPy6Wn786sh+X8/M+sh8Xy6WO7Mfl5asj+3E5P+8j+3Gx
XOrIflxevjqyH5fV+8jwfYGv3kfO1Hh130f2+yiu3keG7wt81dc6U+PVfR/Z
j8uqr7XPv773kf24LN/X2s/zWy51ZNPnEPjr+z6yH5ezex/Zj4vlLfAGeBwQ
l/P/PrIfF+5r7b+/v/z7yH5cLJc6sl8XS+bH3+PH5fy8j+zHZfm+1lRHpveR
/Xql5Q3wMGwdXOrI0Hd03+/Tm+hP/c9//urI1Nea6sjwfiXWkf36vu0vLXVk
zVvgz9vXOq0jX3Ljcn7qyLC/ZH5cbB/pBrgM8Cll4FOy70dH7vsu7HvQr04d
2Y+L7S8tdWQ/LpaHYd+Dljqy8UFFro+/1JFhvbx2dWR/328hLpaHkcyPcQCf
EsTF9rt+fevIcD828fd9Oz+MZP7E51JH9uPS2ffQp/B9gb/6dWR4fpnC8wu+
j0x9rX3/2KqO7HOpI8PzPsTl1X0f2Y/LN1dH9uNSTP3nl1f3fWQ/Lt9cHdmP
SwlxWf59ZMgnQ1xWdWSfSx3Zv44t/z6yH5eXpI48mx//+k2Tf7s4P5579WUv
Xnb+rAAd4LMc5gOfZTCf+Gf7Pu+AHwNvgR8Ab4BfAx6+hf2+8+M/2/HzmYnO
rYnPw/qycdwG3oDOp8CLqKP5BeAt6DwGnoPOGvAOdJ4Bz0Dnyb7P5+s0ideG
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
tMY3sh849add1k+7bH/aZf20Wmdxf9pl/bRaZ3F/2mX9tFpnsZ/WXxfcn9a8
bzWfv3x/Wn0+WD+tXRfL96dd1k9rfHrAx/tpjc9wP3DqT7usn3bZ/rTL+mmX
7U+7rJ922f60y/pp/ff72E/rrwvuT+vuF7Pl+9NqfgT64/vTLuunNech6I/3
02q+uD+tWafAx/enNdcZ4OP705rrJPDF/Wn9dbG8n9ZdF/a4zcb3p/Xvo5bv
T6t1bgMf359W88V+WnPfAny8n1bzxf1pzX2dz1+gP625LwX98f1pzX016C/u
T+uui0R/sZ/W3y/YT2uedya+zvj+tFpH/LT+vrB8f1rNF/tpzfMs6I/302q+
uD+ted4HPr4/rclXAB/fn9bkW4Av7k/r7wvL+2ndvh/J8RE/rdv3IOEHwMVP
q/WPga/8tPP5fVySPpDipzXPlf78VX9avb7OsD+tu44SncX9aXUct4Gv+tP2
/171p+3nv7z9af2+UnuGL+5Pq/vSiJ/WXReJzuL+tEpn4KfV+qv+tD2/D3zV
n7YHi/vT+vdddh9Z3J9Wz98BPr4/rdbZjFw/j4zvT6v73K4DH9+fVuuIn1bz
8f1ptc4D4OP702qdI+CvTn/aq8rnIH5akzeO56O/X9j+rjs+f4H+tFp/M3Ld
X2h8f1rd/3bd5y/Qn1b3+xU/rebj+9NqnYfAx/en1Trip1V/v/4F+tNqnZvA
v77+tP5+YfeRxf1p9fraBT6+P+33VVy2gJ99f1p3XSQ6i/vTah3x017y1oXV
eY7+tPq8fQR8fH9arXMX+Pj+tL0PM/QNED/tke4z4+s8R3/a/n2B0DdgcX9a
zcVPq3XET6s/j/hptV9ufH9a7a/b8vkL9KdV5//AT/uOuy+cXX/ad9x9Yfn+
tP398G/m/DHw8f1ptY74ac3f/QSdxf1ptc4t+L3j+9P6fy+P+9NqHfHT9udb
6Esgftobav0eAG9B5xh4BzqfARff7OWhzgz4wE+r5wN/CfrT+nnal89Pq+Mo
XJ+H4qc1fbAj7+8ffhvjHXjvV79t1uk183dyD4A3wMVPe/rxY7+CMGxf2bP3
0/rvKy3vp9WfX/y05v0X0HleP204bo8j1/72xX7an6j9VPy0Ou7PzPcK/vYM
dMRPq+8fxE+r+qs8h59W35+In1b7/Mf7afV5eAh8vJ9W64iftu+nFPulgP5i
P63WOXs/bf8znLfj/bQ/U9cN8dOa92JAf7GfVuuIn1a/VzjeT6vvE8RP+5bK
2yz20+rnzfF+Wn09vx+5Xr/j/bR6fd0GPt5Pqz/ndeDj/bT6c569n1b/3e3x
flqtcwf4eD+tXhfip9XvM4730/bXn3BcxE/b37/9wqwL9tN+V6+jadBx87e/
w0+rdcRP+z03T7W8n1b3XxU/rfs8PsJPa/5uF/ze8X7aD91+g2fnp9X64/20
+norftq/VO9LjvfT6s8pflqdFxrvp/2OOg9fXj/tj9U6He+n9fO3lo/305q/
8xh5v59+ZNbF778/rbsu7PyBn9ZdFyP8tFfV9xU/rc7njPfT6r7or6+f9l2V
Px/vp/Xzt5aP99P6+dste76B/tn3p9V8cX9a8zzl8xfoT2ueB0F/5aftufhp
dX57vJ9Wn+fip9V9A8b7ad38bcLPvj+tnn/2/Wm1/spPOz/+Cf9/YxkVDg==

      "], {{
        {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
          GrayLevel[1], 3], 
         StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
lLcNKxZtcnzQHvQBukMeZw5PZHFG0TaPGkF70JFqC31UHjWFcjbVC8vcpvLG
FnnsrTq7036tHEP5Q0/HIp0HKp//EX2829/p7x6TRw6mekT7r/J8nSW29ndL
8thbdZao2mS6fVO+P9X+ovxzin1QebX2zY+z2PdHO7Zc7m994D5cmkeOrdxv
RB55rHLpkY4tF+dxzqk4rDNM5ZDKkyfax+vb3/XuZ35e87DFfVYto9xjgr+l
sasPM+2nyu3nOBYp7umctkEWZ8jKgVUjKDce6PY1/53t700cRxRPuhYiTtR3
nOkJehTCDhQrexfCRts5Z1dsbAV6+dlubqOZY1QXx4hdeTynOKDaQXnvpjy+
2czvqI0Sf0PxRnGng7mx+9q9EPFNfWru625+rr3jmvyoLvyGv1nittWH2rZh
1X3Kq1UDKofZ6v2xxONTH2TzdeyPrTw+zYPiWA3H2D5+vo370tz9k52rnjrC
Mbmm/ail+65ntH9V9x7RzfOg9+WbOmPUee9m91lzpf996H8hPVKcRXdyvNL/
EfT/mPIp9lbtuZ867ulcusjxs79jpmKdzn90pl3BdqJ3dZ6m81udz9dwXC12
DnOd8xmdZ+q8Tmeb7RwrFGN19jje39W5q86ydB6r/xn9//87jsk6W9b/CFSb
3ID+Ef4HcPYfuA==
             "]], Polygon3DBox[CompressedData["
1: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
77MsX3IU6t38P216ivoX9YH/ARaAWKg=
             "]]}],
          Lighting->{{"Ambient", 
             RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
            "Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 0, 2}]}}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
          GrayLevel[1], 3], 
         StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNmXf8l2MXx3938b1uZCcRpTIys5IRkfbQ0PJraQ9pa6tUyipUyEpkPvaI
bB4rIyXrkUjDr0VpGWU878/rfLz443w/577v677u6zrXuc451+dbudvAVgNK
FRUVnc9PabBDVlRUjDRG2qSiovvA1uAlyDz09uAP4Ebka+RwrseCR4DHI8PR
TwTrIHPQLwAvRh5FbwVWRq5EPxLsn9Mv370MPJ3rq7hfU+25Ppv7bcFDuB7D
/cPABlzX5H5j8Ciux3G/Gng+Mhn9QrAJz86kzUXgIKQYfaAQOQe9E7gb7S6n
fQKPRcajn6B5FYqKRqLvh14VGYZ+NHgQMhq9fIpx3ox+mr87C722+kMeRu8P
nonM8FzqI/eg1wMbI3PRG4GVkKHoVVLY8AbPUfO93t9qidyL3gz8lbH1Q98F
Hsj1IPRyYFPkNvQm4MnIBI9N96eiXwRORB5Ev1pzYv4dsMNQcA3Xu6GvBdch
u6NvBMvx7DT0s8GJ4FXIYGSI3kMmIROQQX420NfjkZ5IL2Q4spy+SoErwL3p
6xj0MuAErp9kPJPA/bmuxv39wD2Qo9Fz8ApwCnK1ZTIyDPmJdxK4LcU4hvrZ
2VzfRZ9npWivturjIfrqAT4M9kLOQ+8LlkeORS9rP2lsm1yKtEXvAo5GOqKP
0Hv0ezf9nwvW5roG9+uADyDd0R8E+4NXImMtY+TbHuMwj3MUMhLpo3Ego31v
BNLbz2THccgA93e5r9W2n/sdyzheYzxjwIORweiHprDt6+jjwa34ykD0LeAm
ZID2LdgFbI5cipxKu+vAGmBHsCnSCdmb69vBFmBn32uG9EC6IxfLt7Loq7Pb
XwuekiJuzHCsWM73eqNvBrv6my2Qdjx7DGwL/lwIf94BtgS7ZdF2ZyHm9RvY
kHZT7Oc1sXVr2Q38jmftub8SLClE/FpbiDE18xibZDG3Dr7XyfPUt1r5ey08
tuZ+p7nntp2+RoHbwJ+QPtYLjg+7p3i/le1yhvev/HBP5Ar0PVK8O9J2+Brp
hf4j2NM2bZ1FjJ2psSqOIs+iX6HYgzyHPgqsK/9GbwBWQIagVwRraT84FmkM
d3pNOyH3u887kHfQbwdvRd5GvwXsjTyF3ssx6ibHHMXDa9CrO77NRh/ob2mc
53g8tzj2zkIWoc8EO3i/dAaPsR2O035PYc+yKdb0Vs9F853nOfZ2nOwHdnes
6Oa4OtHfVVy90bG0pWOy8lRPx7oeYFeP7W/9Aa0x2Bd5CL1Pirhxg/e1xvw4
erHtNsvtlcumO4ZPR15En5YiJkzLIscNQ15BHwp2QZ7w3Ic4XiqODuH6Ge4P
AC9DnvYcm9gf5aPN8OnqtG2Rx7sTHXsbOXY1BOsh56LXBXfw/qnoZ6IfgVRA
rwqegFRErw5OQZqjXwseiRyGfkwe36qN3hQ8FKmKfrjjXlPFHsVjx+Rj88it
DZ1/FQProZ+nvpFGzrkXO5a2Ak91jK3h/NvEOV0xtj56d+V9jRv9ILBlHnWI
5q58dJBz04fINmzzEfgLUt7xfxGynfsfg+8hW9AXpqgrGjnvKwcdgP614lke
sfS2PPLIweibwU8Ug3h3KXgyzypx/zTlPuQi5R9wluP7TPDePNZkLviFxsS7
X2m/IOWcQ7/h3rfIJvmZ7aY6p6LWAL0yeJxz4onOfeWcH3fPY+7KgyOcT5Ub
ZM+zwFP8bk2vy0muedSP8ml557XfPPffwc+099B/dfysi97BvnSi/aqj17SL
x3m6/eGePHL9HOXuPMYyHvyDvg5EL8qj/8roB9vfuthuByL7om9XntHa2w9n
IN3Qb7avnoR+fB72r26/PSuPOrCG9ePQa9nnq6Af4jx+CHoF7RfkAuV9cDrS
FX0auBeyN/o+4F+Ky+il0EvrGXpBY0T2QT8AHGA/HOz9coL3VDXbSntHfpij
71T8yCMvXw/elEfOvxF8R3Gf9X83xb0xzt+XO7crp/d3raDnGn9Lf/du23CO
fU11ltZAPtwJvMPrcqn9UP7Z0b7d399Q7bDK810J/spY1imfZrHXTuZ+a/B/
PMu8R6Z7DFoXzavYc9FaV7Uv7XQf67OoVTQX1YDX5FHPyw7t86gFZ+dRd2kf
9QRvVYxQnWNfaqf4CI7No+4a73fbyF72NdVKqosm+DuDvCe0N1RnzssjVt6X
R43U13aeZx+7X37hdVTMHFXqn/pLftgKvCWPWm6o28sHWsiOedTDF6JfAp7j
faG4V5LCf74HNyC/K6eDKY8YW7CPVbC//Zdnm2nzNvgWUsT9L1PEENW0ij9q
8xdtPge3gquyiH2rbHd9q1se8V/2VD2vuKoadRPP/qDNFvDbFGukdd+K/In+
aQo/r+i9oH1xOPqeeYxnP/SfHVd1LlC8XZziXKAYu0PfzyJWar5luL8+xXe1
v350LNTzkizGIpvovLgB2ZXFHIQb/awN3z6Fd8/Io/2PWYx1bRb+qv4Unwu0
WQKuyWIc2y2yzeos9prsKdsq7m527H3Pvq092C+PPKj6f2UW9t1i0T79Losa
UWdf5eThtKtD+3ZgQ9UaqtEU6z2f9cZlno/ifHvF6jzsVGJbaP46Ky9XncSz
M2hTH+xh/1ceXGPb7nCfG20n7Yte3guyyZfew+u9B9e57Q+25wbbWM/lJ814
t2sez5fbvp3zyO86C5f4u59nMYbPfL3C9vjJ9t1mX3wCO74EPuW12O7nsucn
bvNGivm+bh9e6furjUudG5UjF9n+37ndw9oD4KMp6pnjGWelPNp//K9xCRd7
nVd4nHelOPvcAy5xf2r7kb+j731h3yqxb5X4erjjgHLHUo9T8xmU4v2nwce0
b9GftC/VdnzY7PmssO8U21dUD78K3gaOc9xWTbXM/qB1U+6u5pz+lX1Ja3i0
/eQoxWevs9a+Sh5nT9UPGVIWfTe/qzVX21f43vvgqynWupZ9YJBrVNXnH9t+
GvN/XNM+Dr6GfOC1+9RrJnuc67U4P499ufZffrjO323kPK56cnaK8+mdKdZA
3/p7TZbYtqobVc+oVlTuUDyeCk7OIz5Pcr7o7vg8l77e4L154HMpzjLzU+yj
Bt5393P9JvcfSsE5qMYTt3Af1y9w/4EUfMjz6FelsOGRrmFUdx1ley5IYe8X
Upyb5qPfncI/l7p/1RKH0v5PcI77vDfFGD7xOF9KYZsXwRkpznQ6cz2ILPR4
nkmx7570/QXoj8huSGn6X60aI8XZ4UbXmYqHm+2Tn3q/TElxrrkWnJziTDfV
8V+1jfJC8xRc3FD3r/pN/IzOLzqPjwBHpjgHiVuYbV+RD4svKuvxLHY+WOJ4
u8j7c5nrjG/kg97/H6Twsfc9r10pajbVTqpRVcupLtW7qqlUS1+Xgk+b5jG/
jH6z89oepaJ/5V/FSOUg+bz2wMsp+Eadf8UtXGN/mGr7v2Ub7nI/WjtxKTqv
iTOZ69ihGKLzmvhPncEVWxbbn7XW79ofJtsnJ3mNFLuu99zFfS30nlrm/ahz
nzg9nQE/9PrKPoqZH3L/TfvMQs9Ftdn+rhPEA+gsfyU4LsV5Vj78hPes9u9J
sjX64BQcizixYtvhaY9NZz3xe6qftdavet317h1Z8LSq2yu5Hp7ivSP+ULyB
uIjbvUYL7G86Fz+CflOK86+4X53Zte/e877QWV5cqHiG51PE4vn23zWONdrX
ykXPpjini9vs7/bvej/qXNZZNbFz4heOjZvM+4jvWuDvat/lKbhi8b2qq1VD
3qWcYm7qG7AoBY/9VyFidTP3/2ch+J0sBW8s7rp0Cl5RnJ54v1WFqAtWg3fm
UQ+rPhf/I36nDLihELzTRvM/bf1d8eHiEMSfi9MWzyBuXHXRBa7Pf6fdZR6b
+Ki+6L94zP09HvUvTns9uK4Q98WDXec6VuegUik4Z81FZ9iurpk1R/FIfxSC
SxQPL25ZfL44N/E2OteIN57pWkjzFe8m7kpcoPirNeaoZYdVHudK20b5UHmx
xHP5vhDviTMTdyZ71EPqZ8HpiWdbATYA2/m+OEHxdC39bT1r6Hfru117o57t
m4L/PCCFDfU/gvhzcemjbcOt5kN3eO062zfEsU/wu9VcJ+t8Ktt2tJ0132LP
pZ7H0SYLTlX7SFyofKyd5zLZ9aFyXF3PV+3F24tz038QGrP+j9grxZmllnOu
+EbZWlyieD/xYOJ79T+CeD9xgDqb6Fwv3l5nkDKu7cXBjqDNPim4OPGH+l9D
XJw4W/3fIQ5W/Ke41gbOp6pR9T+I/lvR/xSH5ZHvVI+Jt9H5UTyJ7utsrjP4
TvO88iXVuuJ56tj3tNbiS1Xnqx5VLVrFOVd1jrg78YF9vGcH2A7iJXQeFF+h
XPm244NqEv2nI05A/+OID9T/QarpPndcUGz5LPunttV91beKn/MdS/X/jjhw
cZL/B8g+fo4=
             "]], Polygon3DBox[CompressedData["
1:eJxNmXnYltMWxt/nlXc/qYQUJZFKKmOTUDRoUApp7mv8qL7mkZKIEpGhQiKl
klmm45xjyhQZj3nmmDPPM5H7Z92uyx/39d7PHtdee++111pv/ZGTek8sFgqF
B7JCoZJ+y/NCoYsKugoniF8lTBGfLKwSX54KhUfUdqNwqfglKuutuuOFS8WX
CRPExwsXi5+nNg+p7YPCOeLnqWys6iqEc8RX5jH2JOFK8bOFAeIDXd9LfS5T
32XC0eJVhZPEZwjbiR8kLBQ/V2guPlRYL36zMFj8co0xRGMNFa7I45sFI+Ny
8dPd/hZhrvgZebSlz2nio/PQRTdhjL+Rr7/1Mz6FbMg4QfxW4UnxJ4T1Kca/
X3yDcKr4heozrhg6WCR+RwpdotN/ifdWWXfVHSUcI36Ryu5W3V3CBeITVHYs
dYwhfnOKurs93xyVHa26npb/YNakujOFNuIj8qijzVDxG1X2guqeF64T/6pU
KMwUP1l4U3yaym4Uv0mYLn6P8Jr4q8wpvsrr4/xc5e9nxZ8RVrB3mqOP5uor
DEDf6FB8lHCq+J0+T48K/xafnUfdiW5P/cuqe8n6maeyMcUYY674FSl0e7/n
a5ribHBGmiFbir1gTx4QP0v4D3OhE/GjNcYRGutwdC5+gsquUd06YYT4TMpU
V+7zjXyspZ/lP8P67CWcKd5DfRao79k+r705g+JXCMeL75eiboHl4/4w9khh
ie/DMPHhvm+L86gbIVwgvk59HlPfTcKaFPdzuOtXix/CHVPdIuFQ8XYp+PnC
4eJr8mjLmGu5iyq7TXW3CqPFWwhzszgzLdGF2kxX22nCOvFaPk+0qSG+lzBf
fJ6wR4rztkR8sfsP8PdSYaB4XcuDjLXFr9OYM4oxx7XiSWWnqW4O9kj8N53B
2eKnCD+L78Md4i4IjcT7pJiLOfp6fNqfKuwuvmuKvrM93wzN0UFzdRROEl/h
+z7M9udBtXlTbd/weWG9k8WnCLuIn6w2ZWo7GJnFz2cNqrve93N2Ctuz3vcd
e3Sl+EphmPjV3s9y6xP9rGUvLf8gYUUWfQa7Pbqf6v1aqrJ7VXefcLH3l7Yr
vN+TUshyne1RF9svbHon8U6cOfoK7bkPPm9DfX7n2F6yxlPEL1GbO7h7tvez
UnDKTrI9aau27ThTtv9ltp/Y14U+n8yxQPwozqz6rhK6iE/LQ5eDeGPyuN/Y
VmzsfPGMNmo7VfhD+z8jha7Wev6l7l/m9+YVlRXEM+FVy0vbqzlDKd4v5L9T
uFz8f8K2altJeBr7J+wiXkv4XLy+xmwo3kjYC93YvvZAZvbf9vg430/ORw/b
V/Q3w+8j9VOx/Xm8bQP8npR7vdiT4eKT8tAFbcaLV+Rh67Evo8RPzIP3tL6x
D4zd2/Zjd6FBMWSuJ16w/JT97vflEPFDebPF++XBD/N6Fno+1nSu7XU/v3fY
2ymej/qJeZyfXn6P2N+qQmPxvYXK7I3tJW/AweKzOIPiR/q7j+9je3Tk9fP2
dfd5aJuHbMh4CHO5nve4h3jrPO4yY/S1frv5/UR/3f3NHegKz8PWc147ix+Z
B+cMd7B+2/k9QN/DvH7WUJbHee3u/Z9u/fWwvOjz2DzWwpvSM4/3+givD331
z8NX6m37U2F5aDPW+m3v9XBeOuZxdzvTRjzPQ7ecx23FdxaaiO8j7CheUzhI
/EChpXgboT5nV/hB+99A3/uKNxP2tH4OFm9jfaJfOGfkGJ+nluIthDrM5fat
2WPrj/H2sz4b58Epa2h9871/Md7XhZLhv1m8wQtSfF9re3VuiveNOtpck0Kf
B3g9nA/ea8Y6wPpt5fOLvM1p6/a02Ve8RR59/xpD/OcUukAnL/Iee72sqal4
7TzW2vwf+tpNvK7X873K9hTfQ6ih76Lr6whbVbclxV1jjl88fmPvz/7WH/vX
2PMdlEddE8tfymMuxtzG+uR7d8YQ316o5+8qnB3vTyufj+utX3zCG1Loh7Gb
+v7slIfsjFHd+qrn9aAf7B1jtbT9aJbHXPWsz12EHThr1t83sslDeduEb0tx
XzirnNnhlq+z7/th9M3Dvu7q88r5hdemTPxDjVlFfDvhPfG3hRriOwlvin+X
oj1jfJ3C3tTydzXx51X2o2T5SXhZ/I0UfZGX9+ALoZp4VeHTFPqu4u8k/oLK
qotvL3zr/aQ/MmA/fxS2ZvHGPMz6U7RlzC9T7E8196/u+1qzGDJW9nlhbVW8
v9vlMXc17+ezGuOHLNbwnPhHKfrvLHwg/m6K/pWF//u9KiG79fGZ3zPKPre+
qMuFn8RfS8Epe9nj8/bR52Pxp/y9jfBkCn0mj/ec5/9Fsv2axf6wX/DfhM3i
jwnFYry/m1K8x+h+B+vr0RR16O8R8ZeEL9X3K+Eh8Y1+v7f6m/3aIv57Fvpl
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
Xd/K/SlrbvvL+1Tb9vhPQRFJ/Q==
             "]]}],
          Lighting->{{"Ambient", 
             RGBColor[
             0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
            "Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{2, 0, 2}]}}]}, 
        {RGBColor[0.560181, 0.691569, 0.194885], EdgeForm[None], Specularity[
          GrayLevel[1], 3], 
         StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
Cp1Z3ffPQj/rfat4Wzm0z+27NZbXKZ+bjbxHoc+mzoXGKNuuWEt2JpONOfzA
e15nRPtNMYziLvlH+aHJubhTVPQ+bGcbonuEcpXKuSn3KHtb2vbzGdAmGzkK
5TyV31OuUrGf7i+KJ99PkV/6IEWucq1txR+Ur+L53xoX6IHelmK/dfe5UL5X
ufGdPo/d0Kt8pjqjp6fISyuPrdyycnrKwytvppyS8tX75SP3q/hcsfEUny+N
d6O/9SH8j/ug+tL93beVKfJpq31+u9lGaf5b2P4od62cvHLL72r86DUp1jTj
da/kGFW2V/ahi+3Jm17r6dZ6d2qKeF55e+Wot6awY5of+YhS9n2at47oJSly
9fqfhf6PoHU5yftnHbjC8/+yzg/6yxQ5cP2/YK/rtPc8yEfofwfKi8q2XGo7
ttvtyA5o7eRH9rlN7fkVKWxgV9s3zVsvP1eOUfko5RuVY9f/FJTDV95e9x3d
sxQPNHNMoD1zuW2v8o1nZiMnqd8VdyvnNYJyJ3hZCp8v3688w1bvq09TtCVf
pPhic4q7mGy1coNtfQaVP5Q9V55Q+VLlxpRvVF5Odls5t7Xeb7Kxysu1zkb+
c5L3v9ZLucqW9jX6Vgf3YYT7L5sw0e8qN7vc51f7WX5K+c7xKeIKrZ1iLu2l
a7z3lLNVvlC5XOUudI9WPkR3Vf1PZ4/72dt7T3lC+XflEtWWYkPFJv8HyDN3
yg==
             "]], Polygon3DBox[CompressedData["
1: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
z+955D9yDzmIeo1+i/p0g+Mf+njW9sr3cV6rS1EjV3X8gfPbWeKnpqidVzke
faY9ZonP5MzEz/b737ofJt5ucP1L/OP8Vrr/rYivexyZThE/0ePscZJ4U8uH
D1JfHeV4vMXng32Q+5+0/e5t+VbaPq6xv5JTyJeHpNDVJuunvvXHmvQ3tVLI
ikxniJ9WRK4kp5xchHzbnA9q2h97Or42KkI/211/I/9lfiaGt3J+QtanvF5z
r8ecFt6PMWoY8vNhKXS52v7T3PkNmVqI78zjrJfbHuknqQWp/+gvqXeoHahB
qU+od+hv6Imoj+lf6KXp4ekv3hHOF68jzExRz1EfUVNTz9BvUxtRI9E/XuH4
Q4ym/+iT4q6ivvAiuTBFbU89vyFFvqB2Geb8gf0zTs1KfUo9ydyu9odhKWJ9
beF18ZFCI/FL/PxCitx3mvdjfzg5hPuSoUI9fEl4ze+zFjlwVIp6nl6+s+MD
8QJOz06/NM7fw30F/TP9MXsjw4IU9dXFWdxp0C98YPkaZ9Evch+ELlhjNLHR
67PnR+JLU/Ty9ICfYS9F5IaRPl/2p3dv5ff3Eb7QWS8VKot3KSL3kfOuL+K+
gv6JM+I+hPxELiHHUD/Rn/LuF/a34x2/lrpf3V9Y5vF97Z/wZfaHnT5/9qAe
Tili32dCefFj/Myax6bIT9QS1BDk/+kp7h64g5iaoh+lvifG0R+iP3rtdtZv
HedXakDqZ/r1puJNsrgvo19vjq6y6O/pl+il6JnXWd/ojzsQ7l+oZ6kdqa+p
b4kv9G6D7L+dnV8HW5/0t8jS3vbbxfOpR6g3Nlle+nf6V+6rOKvWPt/LHD+o
gcn33Ketc7zjvov7Nu6a+K2R9cczdwxH8n3y6fHiE4hp5HJhrPgYYXIe+fNt
8WnOz+Rr+HTnmzl5vMsaM8mNecTqd8hB4u/mMZd3Zou/IYwUHyGMEh/Hb3Bh
rHibFLGMOxvuV0bmMXc4cPz/0fGOfMH9SWOfF/cby/OYyzsjxBd4/dHCwjzs
6V3xec6n2Pt88QW2x5/z4PxGPUN9A3+PmOx8PM/Pe2C7+m12KXLUkjzqg5l+
3i6+VZhcihrpe+uDb0WmedQ+eehqhuXb7OeZri8+z6O24v1POQvt2SwLG+U+
6X399qrGhlIz5HHf08Tj+Hsvx6e65JAU97n03vTI3F+yHndTxORp4sNTxDJi
CvfLvf3MGvRfQ8gxWfRkzzo+1nf8oz+Y7njVMIv7QfoNakt6GO5/qa8ZYw79
4iw/E/O4D+T8uVvjDq+V8wX+18zyDU7hi82dP5CX3NLS8XeCvx+boP9Ybn0x
f4XjYVOvx/3mR3no7jVhcR79S2PHX+L3XinOer7j4TDHZ2SmP6jlePZlKe7f
yAfIwh3yc+JzU+i+np/ph7mb2iOL+8aDUrzLGgeI359ijDnc56/Lw17nUvOI
73A9hM1Rv27Mwx6Zsz6Pegn/HWd7xB/x5bGun8bY/vDB0axlfxxl/9w1Rayl
ni7x7fptouPDXO9P7fyx7Rv7H2f/XyG+TJhSCptdmsd9Justcbyh3vjU8byG
7XdSKfaYT6xwvJn6f/47w/EGf9npep4al3p6dR66meP4tcHz8aHv3E/Msf5K
zkfEwrXOH3zvXOuvvM97qfML/v1HHrL8TyZktT6JJxPziBd8K9/8Sx72hL9P
sj+ucfxDprX299GOr8THCX4mHozP4+8JDewf5K93HJ/R8TTHk/ccvzblcT5D
ShED0N8nedjyMMeLWY7XyD8jj3jaV/wlx991Pt9Jtp+NPo/JXp/13vTzYvdP
s61v+rPVjv8TbZ/kkzm2zxXOJwPFB2ET1t+AUvxGfnlb6FMKmYY73iH767Yf
zpNecZH1R/1AfF5ofyF/vCze3/r7LY+xBT4P9MvYAJ8X9Tn1LD0Y/cx055eR
1g/6Hiz+SinyGfkKXfWzv5DvGBtif8CfGEMG8hf9IrIiM38/mJLHtw/2+fH3
BcboHyt6fJz9E/38BQKw1bc=
             "]]}],
          Lighting->{{"Ambient", 
             RGBColor[0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
            "Directional", 
             RGBColor[
             0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[
             0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[
             0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
             ImageScaled[{2, 0, 2}]}}]}, 
        {RGBColor[0.922526, 0.385626, 0.209179], EdgeForm[None], Specularity[
          GrayLevel[1], 6], 
         StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
QyPbj2oT1Q6q9epnkROqpjgWvqQQ+bxsUjXCCMcv1YDKDc7NItbfiXTTN9L/
1vlQFuflDtviJ44Fn4I389wTOkPgA0h3nYcU8XFDPuLvRNu21i5bamt7ap9F
7XW3v9PK37qV3z+pc5eitn0GfleKWmZbPuoUvaOlf6+9qwhOKcS57Ogz2cLz
fsRSuievpKgNlWP8liLnV26j2Cd/2LoQtXP5LNZ4f4p8WDVs10LUL4rdyouU
vylfUmxa7d8qz3mN6++lWGdrnx3Vqppbe/DVQtQ+ihdvKjfiet8U+Yb09jj4
PuPXud4/RU74DvydFGvU+nR+lEvvD35ZiP7BPb7Xgec6gY+BM1PUOLNT5O2q
8VXr63zL1+p90sPH4LgUtX8772NXr6VLinqktW3jW+dy34MVi5HTHuK8V3N+
MsW75VNVz29nPDmLnsC8FPneXNtbG++v8uFx8IUpfif/2zmLGlk2rLq1kfPM
M4uhQ8XDNwqx7mZeu77byeu63jqRjf3s3En5W3tfK70nW1L80P4utP77Odfp
Dw4tRL2sPEHzUkx4MAsfq31XPtnFc37QqDUofqhOV+2vml1zu8n3ejm3ebkQ
+dgS51eqO17i/vMpzpr8hvo83VJ8Q/2T6YWor6f5fJW3/SsWq+ZVn6Grz472
Qj0f5cPq26hHcTR8JvgR996Dfwh+IDvLou5Qr6ardJjC98rPya92sn+QPWwp
RKxRjT/ddqh3PpFi3572M/rWdtv5C7Zh9Y6et81Lt2VswwNS1Br9HZtUI28s
RF9LPYp59iEt7UcG2W4Hgp+nqGsGg8/aF/UAKyBV4ClFb0ExQj2BdYXoKSnm
jkxRV34H/pii3vwhxRkc6LMs/fS0rvRO9XAUo3um6C+p97Wcd+0NX1mIObyR
RQ14I9Ib/iL4aIpaWL2pvvZpsmH9VnFfub36KuotqD+gWng0fHmKvoF8u/pg
v3jvxqToK0qHsiXVd9/5LPdyftvTfuwD+Gcp+nJ94H1S9CtUP6rWVg9B9Zrq
d+m2r/WpXHee83DZjPp4qovHpqiRJ4BLUtSwi63bit471aGKv8pJFK8Vayp5
/p/rXKboOcjnP5LinO7kW78WwlcP8DylQ8Ua9SXUD1EdcZznMNR6GG5fqn1U
30B1vXoFI+0/tae7nAeqPlJvRD3GSbYf9TBVp6suU59TcVP9qzq2YfUNZmRR
g8t3yOfKl9RlvAE8Fdyj84es0TdKAtdmUbOr96IaOV8Sz2cl0ZeYA6/q+l17
p3q8HuON8NPAw5Ap8MPBGu4J1CpG3a0+j2pt1ctb7RvVN1Bdr37mOrBMScxB
fU/1d7dn0b8p7x7ORr63CqzD89WKMeejwbOKES9Ugx9RjHVpnmVL4p16d64Y
fjtfjPf8kUUsyHldqutXWye7s/D/w7Pw85qvYpHmol6Beizqj9Xnt5vgpxej
P6O170oxnxXwpp6n+sbVwQyZ6zloHYpHO7PYi93+9vos5q05Kx6N8jvVk1nt
50r3TL87yv0r9ViqIIut/5x1qfVrXxbBD7V+5lpvVdzLUi+oQTF6ZmeAx3s/
ankf13r+9fx+rbekJOxCe6++tPpX6nXP8ZwVx7Ve9WHK+53qXZ9YjN74ZM/n
pGKsWdcVN7XPDcGzi7H/TX1ftii9KE9Q3159Qum+XEnMpbZt/uRixFXlMPfZ
9u/1uIP9uXIbxTjFfD3b2T5feUg3+0/FhQH2jfLb6vno/x3qC2k+Gzyncu41
ykZH2WaUb0xM0V+Vz9F3FEsVbxR31DfT/w4auD/W0Par9cru67tHp71Qvqqz
q/8LlFjfWndP+z3FDvVvm8Avtn+Tv5IfviFFvnqT/Xkf+y71VBXzVR8pj1Xe
qZ5nF89ReYFyJ/1PQX1a5c/KS29x3FH8/dlr7Acf4t8qp+hqP7PIPkF9Rf3/
Rb3rrT536k9Kb1qHdHcKz80EDyxGP1ZxRL3fU3yOtKday+PSY4pcTj29SrYf
/Z9FPk39cPUe1dPW2drl8yVbWgmeUwzfIj3v8B5Kn7Lj/wLjBcur
             "]], Polygon3DBox[CompressedData["
1:eJwtmXf81+Maxr/5fRKf55NKlCikQUhCEik7M+M4jnk4zl6cgbIqIhKRoqh0
SlGkgUqUUhoa0rAqbe1Fe5Drfe7rj+v1vT7Pvp/nucdzf2vffe8N9xxUKpUm
liuVMv3uSaXSJyKThL3ixxWl0nfiS4Tjxd9Q2eviA4TXxT/IS6XDxasIo8Q/
Udk48Y+Ej8VbqM9u8V3C+eKjVDZYfIgwWvx/wqvivYX+4muFKeKfCt+Lb9aY
x4vXFraIv0of8X5CT/HPVFZRvBCmiQ9TWQ/xl4Th4mvyqKPNWvHFKWRDxm/F
P/J4/YVx4n2EV7JYU1/xRlrzj+I/CKeKj0kxN30+ED9HZTvEtwtNxdtbHsZ4
RPxJ4UXxbsLj4iu8P+OFleI/eT2ThZ/Fq2uMReKLhaPEqwjTxKcLh4svSbG3
jLFU/GWhq/jz3o9vhBHiIy3fc0JH8SeErpyd9iATL0MG8R4q6yneiz0Tn62y
SuKVhc/FewrluBhCD/F3hQriB7O/4l2En8skh9BWfJfGmKG6mcJuyzdffJ7v
01ZhtPgY9lT8Ism0Tny9cLH4xxojFz+UOyT+X7XpJP6UcJ/4JWqzj7HcfrDa
7Nfc+4Q3xO9Xm0dV1054QHxqHnW04X78Q2XPqq6L8HfxPwmdxZ8W/pjifrGX
L3Anxd/PQ/Zyvt9z8pCdPfhC/EG37+r52nu8Z4QOKepZS3vhIfGHU8zV2fdj
vvfzEGFBHvrEXAcJY8X7Cnu09t3Cq+I1ithL9vRo8a0qq85dYT/FN2vML8Tn
CBvEpyGD+HvolO/rKnRLaCbeWPiGuyKcIX6o8JX4l5yxeC23X+n5KgnLxZeh
c+JLNecx1HFnxYdqjmHi76Dj4p+q7EjxI9A58bOLGGuV9QX9466OsD7NFiZg
O4QZ4nWKsD1LhbqsTWVjxT8UvhafIwwSf4PzEC9ze2xWSfyAymaJz/b3H/Td
Rrytz7uBytaIrxbqW172doFwbBH3g7YPCn/2+Iz1uZCJj1fZW+JvZ2HvsH/w
ocIk8e15nE0NYUce9o56+vS1fFvEN2dhX7EPjD/L+j3f/av7vi32fr2LjOL7
89h7zuAn8SoqO0m8AfZC/Ms8bDM2+ivxhSl0c4b3bwc2PIs9fVd8XgpbM836
uSqFLcY+LU9hv2lLn24pzoOxPnP/8bZPnM+H2PIUtm6c94P5qaPNItsD5poq
bBJflmKuSZZvZApbMdrnO9b9WQP+Y5/lYb/2i1csYizGPEx8Y4pvfMq6FPd7
iufLxcsVMR8yHiRevgg+xfd/cIq7zHkOwt+kuJvINNX2Fl8yEZ0R76893lsW
OvtaHvYMTtkE8UmuxyZNFh9k+0TZAPHeeeg+NqCX+Id56D5jYA8X5WEbc+vb
S9hc1e0UXhRf7f1mjWvwVXnYesbsI97d9uyA2r8gvt7yTLC9+DGFLMi0M4U9
mWD5tojPdT1ln4ufKDQVP0c4CV3QmBs19ib7g6H2D8z3jviIPDhrGCk+MMXe
ohP9fV+G2n5M9X7Dh9kenFKE7cEG4Y9r2J6sEKoV4a+X+/t08apFcMoqi9cr
QtexfyfY/uF/1gqnidcuom6V9f+CIupoc2ER8cwat28pfkQRvot67GfzImKd
ncJ5RfjzjeytsF3rP0bfm7Iow7+fJSzMwudvt3zEGlvZT/EzhW1ZxCDIg/0k
1qCsifi5RcxFDNLM692TRczF+hp6/az5ZK9vtb/Pd3/kXe319rE9Iz57xfoG
f8v6TLxA/Pam8C/xXq6njPjhPWKSLGIK6hekaDvY9mKEMNzn+Y74CylsNzZ8
uO0/dcN9v9baf42y/qLPo2wPsBeTU/g27OFE7moKjo0cZ/tFPWMQT47Ow9fi
c9/LI54b4fnex5Z4fNpPtz1iPMZYbn8z2uuZZX2g7wjrP/Eytpwzrin+tedD
Z7/Jw1+iu0lYJl5bfU4Vb8h9FK+Xgp8m1Bc/JAWnrDz6qT5niDfOIh6uyJxZ
xMgz8oiXqTvd3+OEqlnYf+KJ5Xn4YnzyCvHvXE/ZEvGdwplZzLGNuhScsiPE
f1ZZXfF6wgFsVQpeXygTX6eyE/29WrwWdzoLGY+1Pzohi3h+nvhxKmsifjYy
eHy+zxL2eXzqmng+1s98db3e6UI1yzNFfKLlQ6bxecSz7A17NITYV+PVFK/l
/Vxk/1nD57M7D07ZnjzOj298MPFZKYWvZYxy4ivz4Mf4POfmIRtzEj9/7/in
mvdjo3BYFjH2EMeT1V0/S3xmHrE0NvPpPM6b8U7weWA/K7s/9vR9+3fKRtre
Uscc9Of9U8vrXeX10baK93+d9481bPJ9YG/rCAu9Xw19fsh7cIqz5YwrpPA/
q7XWNcLL4nV8XviEuuJPqWyl6lYJz+ThH9eJr7e/w//BNzh+78aelcWY+LPO
+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
             "]]}],
          Lighting->{{"Ambient", 
             RGBColor[0.30756835, 0.18676585, 0.147065275]}, {"Directional", 
             RGBColor[0.2306315, 0.0964065, 0.05229475], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             GrayLevel[0.3], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[0.2306315, 0.0964065, 0.05229475], 
             ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}, {}, {}}, {
        {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0L0uw1EYwOHjo61vrRuQViJmrSrVaqsiVgmrMCAGRsbGpHEFuomtvQQm
toYbkNTAztAL4PmH4ZfnJCfnnJw3fXi+czYQQjjQoKL1jGZjIcyxwly0z01e
cY/3POYzL/nJJlvqKBEP4ZELfOU233nKb97E/x7rMMUuM8wqpyXltayCVrSq
otZUUlnrqqiqmja0qDf3pdlmkk3+ePKEX9xij/N8YYwPbOtWff+55gcv+MQj
3nGXDda5zyzLzDClpKY1pUlNaFxjGtVINB9FI3AsDGvof/6/GFgkeQ==
          "]]}, 
        {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0DkvxEEYwOF3FShkaURrP4DIKkTtvtaxuyJKYpU2Crvu+yrp1jdARUul
phMdH4FKlHj+UfzyzGQmk5nJLJTzy6mImNeAQb9m9FEfscR0Q0SVnTzjFC+5
whte8IF3fOa7PvVq/stvttRFtDVGZNjDLs6xj+ssssYSK6pqLVnThja1pW3t
aFd72teBDnWkY51oVVfOW0zOYYGz7GU3s2xlO7/cr5kv/EnerTc9mj/xlvc8
5zXLrHGCp+xghU0ssaiC8ppO/kuTyX7lNK4xjWpEwxrSYOr///8A5SYvjw==

          "]]}, 
        {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0LsuA1AYwPFPiWDgBcRlECsPIMLAXjtxiZEFI5NrUdfWKgb1Btq6q/sb
YBMbTyAVv8bwzy/nDF/O+drHppNTVRExqpVExLIOVKyLOOE7CyzzhS317tjL
b47wlwtsqo5oU7eOnPtZ4hA/OcHahohZdnKJg8xykjnmVVBRZzrXhS51pWvd
6LYyW3e614Me9aRTzZl3zAFm2MFF1nCGH94zXpnFJA/Zxy61Ku3cyHmW/W+Y
X+zhG5v5zB97yfOVOWaV0b72tKsdbWtLaW1qQ+tKaU2rif/9/wHO2Dql
          "]]}, 
        {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0L0uw1EYwOG3/q2P/lsTK7ETBhdAYmTQ3aB2jXAJDDaRcAmITQxcgqrP
qo/WHbQ2MWnxJIZfnrwnOeck70S5UlrPRMSqaknEtd61m4/44Cl7rHE464zj
LKYRM5ziPJdY4pq2tGHe4T4Pec5jNnjJL1Y5WohocZYddtXTj34VuYiM+pQo
q5z6NaBBDSmvVAV9u7fgvTZH2OSn/65Y5wXPeMQ9HrDCbW6qrBXzMhc5x0lO
M+UY2/ZQZJVd+zlhhy019aZXvehZDT2prkc96F53utVN8r//P9rAOMg=
          "]]}, 
        {GrayLevel[0.2], 
         Line3DBox[{1311, 1293, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 
          1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1312, 1315, 1316, 
          1319, 1320, 1323, 1324, 1327, 1328, 1331, 1332, 1335, 1336, 1339, 
          1340, 1342}], 
         Line3DBox[{1344, 1294, 1313, 1314, 1317, 1318, 1321, 1322, 1325, 
          1326, 1329, 1330, 1333, 1334, 1337, 1338, 1341, 1345, 1348, 1349, 
          1352, 1353, 1356, 1357, 1360, 1361, 1364, 1365, 1368, 1369, 1372, 
          1373, 1375}], 
         Line3DBox[{1377, 1310, 1346, 1347, 1350, 1351, 1354, 1355, 1358, 
          1359, 1362, 1363, 1366, 1367, 1370, 1371, 1374, 1378, 1381, 1382, 
          1385, 1386, 1389, 1390, 1393, 1394, 1397, 1398, 1401, 1402, 1405, 
          1406, 1408}], 
         Line3DBox[{1410, 1343, 1379, 1380, 1383, 1384, 1387, 1388, 1391, 
          1392, 1395, 1396, 1399, 1400, 1403, 1404, 1407, 1411, 1414, 1415, 
          1418, 1419, 1422, 1423, 1426, 1427, 1430, 1431, 1434, 1435, 1438, 
          1439, 1441}], 
         Line3DBox[{1443, 1376, 1412, 1413, 1416, 1417, 1420, 1421, 1424, 
          1425, 1428, 1429, 1432, 1433, 1436, 1437, 1440, 1444, 1447, 1448, 
          1451, 1452, 1455, 1456, 1459, 1460, 1463, 1464, 1467, 1468, 1471, 
          1472, 1474}], 
         Line3DBox[{1475, 1409, 1445, 1446, 1449, 1450, 1453, 1454, 1457, 
          1458, 1461, 1462, 1465, 1466, 1469, 1470, 1473, 1476, 1479, 1480, 
          1483, 1484, 1487, 1488, 1491, 1492, 1495, 1496, 1499, 1500, 1503, 
          1504, 1506}], 
         Line3DBox[{1507, 1442, 1477, 1478, 1481, 1482, 1485, 1486, 1489, 
          1490, 1493, 1494, 1497, 1498, 1501, 1502, 1505, 1508, 1509, 1510, 
          1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 
          1522, 1523}], 
         Line3DBox[{154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 
          165, 166, 167, 168, 169, 170}], 
         Line3DBox[{1541, 1572, 1571, 1568, 1567, 1564, 1563, 1560, 1559, 
          1556, 1555, 1552, 1551, 1548, 1547, 1544, 1540, 1539, 1538, 1537, 
          1536, 1535, 1534, 1533, 1532, 1531, 1530, 1529, 1528, 1527, 1526, 
          1524, 1543}], 
         Line3DBox[{1574, 1605, 1604, 1601, 1600, 1597, 1596, 1593, 1592, 
          1589, 1588, 1585, 1584, 1581, 1580, 1577, 1573, 1570, 1569, 1566, 
          1565, 1562, 1561, 1558, 1557, 1554, 1553, 1550, 1549, 1546, 1545, 
          1525, 1576}], 
         Line3DBox[{1607, 1638, 1637, 1634, 1633, 1630, 1629, 1626, 1625, 
          1622, 1621, 1618, 1617, 1614, 1613, 1610, 1606, 1603, 1602, 1599, 
          1598, 1595, 1594, 1591, 1590, 1587, 1586, 1583, 1582, 1579, 1578, 
          1542, 1609}], 
         Line3DBox[{1640, 1671, 1670, 1667, 1666, 1663, 1662, 1659, 1658, 
          1655, 1654, 1651, 1650, 1647, 1646, 1643, 1639, 1636, 1635, 1632, 
          1631, 1628, 1627, 1624, 1623, 1620, 1619, 1616, 1615, 1612, 1611, 
          1575, 1642}], 
         Line3DBox[{1673, 1704, 1703, 1700, 1699, 1696, 1695, 1692, 1691, 
          1688, 1687, 1684, 1683, 1680, 1679, 1676, 1672, 1669, 1668, 1665, 
          1664, 1661, 1660, 1657, 1656, 1653, 1652, 1649, 1648, 1645, 1644, 
          1608, 1675}], 
         Line3DBox[{1706, 1736, 1735, 1732, 1731, 1728, 1727, 1724, 1723, 
          1720, 1719, 1716, 1715, 1712, 1711, 1708, 1705, 1702, 1701, 1698, 
          1697, 1694, 1693, 1690, 1689, 1686, 1685, 1682, 1681, 1678, 1677, 
          1641, 1707}], 
         Line3DBox[{1738, 1674, 1709, 1710, 1713, 1714, 1717, 1718, 1721, 
          1722, 1725, 1726, 1729, 1730, 1733, 1734, 1737, 1739, 1740, 1741, 
          1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 
          1753, 1754}], 
         Line3DBox[{1773, 1755, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 
          1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1777, 1778, 
          1781, 1782, 1785, 1786, 1789, 1790, 1793, 1794, 1797, 1798, 1801, 
          1802, 1804}], 
         Line3DBox[{1806, 1756, 1775, 1776, 1779, 1780, 1783, 1784, 1787, 
          1788, 1791, 1792, 1795, 1796, 1799, 1800, 1803, 1807, 1810, 1811, 
          1814, 1815, 1818, 1819, 1822, 1823, 1826, 1827, 1830, 1831, 1834, 
          1835, 1837}], 
         Line3DBox[{1839, 1772, 1808, 1809, 1812, 1813, 1816, 1817, 1820, 
          1821, 1824, 1825, 1828, 1829, 1832, 1833, 1836, 1840, 1843, 1844, 
          1847, 1848, 1851, 1852, 1855, 1856, 1859, 1860, 1863, 1864, 1867, 
          1868, 1870}], 
         Line3DBox[{1872, 1805, 1841, 1842, 1845, 1846, 1849, 1850, 1853, 
          1854, 1857, 1858, 1861, 1862, 1865, 1866, 1869, 1873, 1876, 1877, 
          1880, 1881, 1884, 1885, 1888, 1889, 1892, 1893, 1896, 1897, 1900, 
          1901, 1903}], 
         Line3DBox[{1905, 1838, 1874, 1875, 1878, 1879, 1882, 1883, 1886, 
          1887, 1890, 1891, 1894, 1895, 1898, 1899, 1902, 1906, 1909, 1910, 
          1913, 1914, 1917, 1918, 1921, 1922, 1925, 1926, 1929, 1930, 1933, 
          1934, 1936}], 
         Line3DBox[{1937, 1871, 1907, 1908, 1911, 1912, 1915, 1916, 1919, 
          1920, 1923, 1924, 1927, 1928, 1931, 1932, 1935, 1938, 1941, 1942, 
          1945, 1946, 1949, 1950, 1953, 1954, 1957, 1958, 1961, 1962, 1965, 
          1966, 1968}], 
         Line3DBox[{1969, 1904, 1939, 1940, 1943, 1944, 1947, 1948, 1951, 
          1952, 1955, 1956, 1959, 1960, 1963, 1964, 1967, 1970, 1971, 1972, 
          1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 
          1984, 1985}], 
         Line3DBox[{477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 
          488, 489, 490, 491, 492, 493}], 
         Line3DBox[{2003, 2034, 2033, 2030, 2029, 2026, 2025, 2022, 2021, 
          2018, 2017, 2014, 2013, 2010, 2009, 2006, 2002, 2001, 2000, 1999, 
          1998, 1997, 1996, 1995, 1994, 1993, 1992, 1991, 1990, 1989, 1988, 
          1986, 2005}], 
         Line3DBox[{2036, 2067, 2066, 2063, 2062, 2059, 2058, 2055, 2054, 
          2051, 2050, 2047, 2046, 2043, 2042, 2039, 2035, 2032, 2031, 2028, 
          2027, 2024, 2023, 2020, 2019, 2016, 2015, 2012, 2011, 2008, 2007, 
          1987, 2038}], 
         Line3DBox[{2069, 2100, 2099, 2096, 2095, 2092, 2091, 2088, 2087, 
          2084, 2083, 2080, 2079, 2076, 2075, 2072, 2068, 2065, 2064, 2061, 
          2060, 2057, 2056, 2053, 2052, 2049, 2048, 2045, 2044, 2041, 2040, 
          2004, 2071}], 
         Line3DBox[{2102, 2133, 2132, 2129, 2128, 2125, 2124, 2121, 2120, 
          2117, 2116, 2113, 2112, 2109, 2108, 2105, 2101, 2098, 2097, 2094, 
          2093, 2090, 2089, 2086, 2085, 2082, 2081, 2078, 2077, 2074, 2073, 
          2037, 2104}], 
         Line3DBox[{2135, 2166, 2165, 2162, 2161, 2158, 2157, 2154, 2153, 
          2150, 2149, 2146, 2145, 2142, 2141, 2138, 2134, 2131, 2130, 2127, 
          2126, 2123, 2122, 2119, 2118, 2115, 2114, 2111, 2110, 2107, 2106, 
          2070, 2137}], 
         Line3DBox[{2168, 2198, 2197, 2194, 2193, 2190, 2189, 2186, 2185, 
          2182, 2181, 2178, 2177, 2174, 2173, 2170, 2167, 2164, 2163, 2160, 
          2159, 2156, 2155, 2152, 2151, 2148, 2147, 2144, 2143, 2140, 2139, 
          2103, 2169}], 
         Line3DBox[{2200, 2136, 2171, 2172, 2175, 2176, 2179, 2180, 2183, 
          2184, 2187, 2188, 2191, 2192, 2195, 2196, 2199, 2201, 2202, 2203, 
          2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 
          2215, 2216}], 
         Line3DBox[{2235, 2217, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 
          2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2236, 2239, 2240, 
          2243, 2244, 2247, 2248, 2251, 2252, 2255, 2256, 2259, 2260, 2263, 
          2264, 2266}], 
         Line3DBox[{2268, 2218, 2237, 2238, 2241, 2242, 2245, 2246, 2249, 
          2250, 2253, 2254, 2257, 2258, 2261, 2262, 2265, 2269, 2272, 2273, 
          2276, 2277, 2280, 2281, 2284, 2285, 2288, 2289, 2292, 2293, 2296, 
          2297, 2299}], 
         Line3DBox[{2301, 2234, 2270, 2271, 2274, 2275, 2278, 2279, 2282, 
          2283, 2286, 2287, 2290, 2291, 2294, 2295, 2298, 2302, 2305, 2306, 
          2309, 2310, 2313, 2314, 2317, 2318, 2321, 2322, 2325, 2326, 2329, 
          2330, 2332}], 
         Line3DBox[{2334, 2267, 2303, 2304, 2307, 2308, 2311, 2312, 2315, 
          2316, 2319, 2320, 2323, 2324, 2327, 2328, 2331, 2335, 2338, 2339, 
          2342, 2343, 2346, 2347, 2350, 2351, 2354, 2355, 2358, 2359, 2362, 
          2363, 2365}], 
         Line3DBox[{2367, 2300, 2336, 2337, 2340, 2341, 2344, 2345, 2348, 
          2349, 2352, 2353, 2356, 2357, 2360, 2361, 2364, 2368, 2371, 2372, 
          2375, 2376, 2379, 2380, 2383, 2384, 2387, 2388, 2391, 2392, 2395, 
          2396, 2398}], 
         Line3DBox[{2399, 2333, 2369, 2370, 2373, 2374, 2377, 2378, 2381, 
          2382, 2385, 2386, 2389, 2390, 2393, 2394, 2397, 2400, 2403, 2404, 
          2407, 2408, 2411, 2412, 2415, 2416, 2419, 2420, 2423, 2424, 2427, 
          2428, 2430}], 
         Line3DBox[{2431, 2366, 2401, 2402, 2405, 2406, 2409, 2410, 2413, 
          2414, 2417, 2418, 2421, 2422, 2425, 2426, 2429, 2432, 2433, 2434, 
          2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 
          2446, 2447}], 
         Line3DBox[{800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 
          811, 812, 813, 814, 815, 816}], 
         Line3DBox[{2465, 2496, 2495, 2492, 2491, 2488, 2487, 2484, 2483, 
          2480, 2479, 2476, 2475, 2472, 2471, 2468, 2464, 2463, 2462, 2461, 
          2460, 2459, 2458, 2457, 2456, 2455, 2454, 2453, 2452, 2451, 2450, 
          2448, 2467}], 
         Line3DBox[{2498, 2529, 2528, 2525, 2524, 2521, 2520, 2517, 2516, 
          2513, 2512, 2509, 2508, 2505, 2504, 2501, 2497, 2494, 2493, 2490, 
          2489, 2486, 2485, 2482, 2481, 2478, 2477, 2474, 2473, 2470, 2469, 
          2449, 2500}], 
         Line3DBox[{2531, 2562, 2561, 2558, 2557, 2554, 2553, 2550, 2549, 
          2546, 2545, 2542, 2541, 2538, 2537, 2534, 2530, 2527, 2526, 2523, 
          2522, 2519, 2518, 2515, 2514, 2511, 2510, 2507, 2506, 2503, 2502, 
          2466, 2533}], 
         Line3DBox[{2564, 2595, 2594, 2591, 2590, 2587, 2586, 2583, 2582, 
          2579, 2578, 2575, 2574, 2571, 2570, 2567, 2563, 2560, 2559, 2556, 
          2555, 2552, 2551, 2548, 2547, 2544, 2543, 2540, 2539, 2536, 2535, 
          2499, 2566}], 
         Line3DBox[{2597, 2628, 2627, 2624, 2623, 2620, 2619, 2616, 2615, 
          2612, 2611, 2608, 2607, 2604, 2603, 2600, 2596, 2593, 2592, 2589, 
          2588, 2585, 2584, 2581, 2580, 2577, 2576, 2573, 2572, 2569, 2568, 
          2532, 2599}], 
         Line3DBox[{2630, 2660, 2659, 2656, 2655, 2652, 2651, 2648, 2647, 
          2644, 2643, 2640, 2639, 2636, 2635, 2632, 2629, 2626, 2625, 2622, 
          2621, 2618, 2617, 2614, 2613, 2610, 2609, 2606, 2605, 2602, 2601, 
          2565, 2631}], 
         Line3DBox[{2662, 2598, 2633, 2634, 2637, 2638, 2641, 2642, 2645, 
          2646, 2649, 2650, 2653, 2654, 2657, 2658, 2661, 2663, 2664, 2665, 
          2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 
          2677, 2678}], 
         Line3DBox[{2697, 2679, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 
          2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2698, 2701, 2702, 
          2705, 2706, 2709, 2710, 2713, 2714, 2717, 2718, 2721, 2722, 2725, 
          2726, 2728}], 
         Line3DBox[{2730, 2680, 2699, 2700, 2703, 2704, 2707, 2708, 2711, 
          2712, 2715, 2716, 2719, 2720, 2723, 2724, 2727, 2731, 2734, 2735, 
          2738, 2739, 2742, 2743, 2746, 2747, 2750, 2751, 2754, 2755, 2758, 
          2759, 2761}], 
         Line3DBox[{2763, 2696, 2732, 2733, 2736, 2737, 2740, 2741, 2744, 
          2745, 2748, 2749, 2752, 2753, 2756, 2757, 2760, 2764, 2767, 2768, 
          2771, 2772, 2775, 2776, 2779, 2780, 2783, 2784, 2787, 2788, 2791, 
          2792, 2794}], 
         Line3DBox[{2796, 2729, 2765, 2766, 2769, 2770, 2773, 2774, 2777, 
          2778, 2781, 2782, 2785, 2786, 2789, 2790, 2793, 2797, 2800, 2801, 
          2804, 2805, 2808, 2809, 2812, 2813, 2816, 2817, 2820, 2821, 2824, 
          2825, 2827}], 
         Line3DBox[{2829, 2762, 2798, 2799, 2802, 2803, 2806, 2807, 2810, 
          2811, 2814, 2815, 2818, 2819, 2822, 2823, 2826, 2830, 2833, 2834, 
          2837, 2838, 2841, 2842, 2845, 2846, 2849, 2850, 2853, 2854, 2857, 
          2858, 2860}], 
         Line3DBox[{2861, 2795, 2831, 2832, 2835, 2836, 2839, 2840, 2843, 
          2844, 2847, 2848, 2851, 2852, 2855, 2856, 2859, 2862, 2865, 2866, 
          2869, 2870, 2873, 2874, 2877, 2878, 2881, 2882, 2885, 2886, 2889, 
          2890, 2892}], 
         Line3DBox[{2893, 2828, 2863, 2864, 2867, 2868, 2871, 2872, 2875, 
          2876, 2879, 2880, 2883, 2884, 2887, 2888, 2891, 2894, 2895, 2896, 
          2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 2906, 2907, 
          2908, 2909}], 
         Line3DBox[{1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 
          1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139}], 
         Line3DBox[{2927, 2958, 2957, 2954, 2953, 2950, 2949, 2946, 2945, 
          2942, 2941, 2938, 2937, 2934, 2933, 2930, 2926, 2925, 2924, 2923, 
          2922, 2921, 2920, 2919, 2918, 2917, 2916, 2915, 2914, 2913, 2912, 
          2910, 2929}], 
         Line3DBox[{2960, 2991, 2990, 2987, 2986, 2983, 2982, 2979, 2978, 
          2975, 2974, 2971, 2970, 2967, 2966, 2963, 2959, 2956, 2955, 2952, 
          2951, 2948, 2947, 2944, 2943, 2940, 2939, 2936, 2935, 2932, 2931, 
          2911, 2962}], 
         Line3DBox[{2993, 3024, 3023, 3020, 3019, 3016, 3015, 3012, 3011, 
          3008, 3007, 3004, 3003, 3000, 2999, 2996, 2992, 2989, 2988, 2985, 
          2984, 2981, 2980, 2977, 2976, 2973, 2972, 2969, 2968, 2965, 2964, 
          2928, 2995}], 
         Line3DBox[{3026, 3057, 3056, 3053, 3052, 3049, 3048, 3045, 3044, 
          3041, 3040, 3037, 3036, 3033, 3032, 3029, 3025, 3022, 3021, 3018, 
          3017, 3014, 3013, 3010, 3009, 3006, 3005, 3002, 3001, 2998, 2997, 
          2961, 3028}], 
         Line3DBox[{3059, 3090, 3089, 3086, 3085, 3082, 3081, 3078, 3077, 
          3074, 3073, 3070, 3069, 3066, 3065, 3062, 3058, 3055, 3054, 3051, 
          3050, 3047, 3046, 3043, 3042, 3039, 3038, 3035, 3034, 3031, 3030, 
          2994, 3061}], 
         Line3DBox[{3092, 3122, 3121, 3118, 3117, 3114, 3113, 3110, 3109, 
          3106, 3105, 3102, 3101, 3098, 3097, 3094, 3091, 3088, 3087, 3084, 
          3083, 3080, 3079, 3076, 3075, 3072, 3071, 3068, 3067, 3064, 3063, 
          3027, 3093}], 
         Line3DBox[{3124, 3060, 3095, 3096, 3099, 3100, 3103, 3104, 3107, 
          3108, 3111, 3112, 3115, 3116, 3119, 3120, 3123, 3125, 3126, 3127, 
          3128, 3129, 3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3138, 
          3139, 3140}]}, 
        {GrayLevel[0.2], 
         Line3DBox[{2, 19, 1295, 36, 1313, 53, 1346, 70, 1379, 87, 1412, 104, 
          1445, 121, 1477, 138, 155, 172, 1526, 189, 1545, 206, 1578, 223, 
          1611, 240, 1644, 257, 1677, 274, 1709, 291, 308}], 
         Line3DBox[{3, 20, 1297, 37, 1317, 54, 1350, 71, 1383, 88, 1416, 105, 
          1449, 122, 1481, 139, 156, 173, 1528, 190, 1549, 207, 1582, 224, 
          1615, 241, 1648, 258, 1681, 275, 1713, 292, 309}], 
         Line3DBox[{4, 21, 1299, 38, 1321, 55, 1354, 72, 1387, 89, 1420, 106, 
          1453, 123, 1485, 140, 157, 174, 1530, 191, 1553, 208, 1586, 225, 
          1619, 242, 1652, 259, 1685, 276, 1717, 293, 310}], 
         Line3DBox[{5, 22, 1301, 39, 1325, 56, 1358, 73, 1391, 90, 1424, 107, 
          1457, 124, 1489, 141, 158, 175, 1532, 192, 1557, 209, 1590, 226, 
          1623, 243, 1656, 260, 1689, 277, 1721, 294, 311}], 
         Line3DBox[{6, 23, 1303, 40, 1329, 57, 1362, 74, 1395, 91, 1428, 108, 
          1461, 125, 1493, 142, 159, 176, 1534, 193, 1561, 210, 1594, 227, 
          1627, 244, 1660, 261, 1693, 278, 1725, 295, 312}], 
         Line3DBox[{7, 24, 1305, 41, 1333, 58, 1366, 75, 1399, 92, 1432, 109, 
          1465, 126, 1497, 143, 160, 177, 1536, 194, 1565, 211, 1598, 228, 
          1631, 245, 1664, 262, 1697, 279, 1729, 296, 313}], 
         Line3DBox[{8, 25, 1307, 42, 1337, 59, 1370, 76, 1403, 93, 1436, 110, 
          1469, 127, 1501, 144, 161, 178, 1538, 195, 1569, 212, 1602, 229, 
          1635, 246, 1668, 263, 1701, 280, 1733, 297, 314}], 
         Line3DBox[{9, 26, 1309, 43, 1341, 60, 1374, 77, 1407, 94, 1440, 111, 
          1473, 128, 1505, 145, 162, 179, 1540, 196, 1573, 213, 1606, 230, 
          1639, 247, 1672, 264, 1705, 281, 1737, 298, 315}], 
         Line3DBox[{10, 27, 1315, 44, 1348, 61, 1381, 78, 1414, 95, 1447, 112,
           1479, 129, 1509, 146, 163, 180, 1547, 197, 1580, 214, 1613, 231, 
          1646, 248, 1679, 265, 1711, 282, 1740, 299, 316}], 
         Line3DBox[{11, 28, 1319, 45, 1352, 62, 1385, 79, 1418, 96, 1451, 113,
           1483, 130, 1511, 147, 164, 181, 1551, 198, 1584, 215, 1617, 232, 
          1650, 249, 1683, 266, 1715, 283, 1742, 300, 317}], 
         Line3DBox[{12, 29, 1323, 46, 1356, 63, 1389, 80, 1422, 97, 1455, 114,
           1487, 131, 1513, 148, 165, 182, 1555, 199, 1588, 216, 1621, 233, 
          1654, 250, 1687, 267, 1719, 284, 1744, 301, 318}], 
         Line3DBox[{13, 30, 1327, 47, 1360, 64, 1393, 81, 1426, 98, 1459, 115,
           1491, 132, 1515, 149, 166, 183, 1559, 200, 1592, 217, 1625, 234, 
          1658, 251, 1691, 268, 1723, 285, 1746, 302, 319}], 
         Line3DBox[{14, 31, 1331, 48, 1364, 65, 1397, 82, 1430, 99, 1463, 116,
           1495, 133, 1517, 150, 167, 184, 1563, 201, 1596, 218, 1629, 235, 
          1662, 252, 1695, 269, 1727, 286, 1748, 303, 320}], 
         Line3DBox[{15, 32, 1335, 49, 1368, 66, 1401, 83, 1434, 100, 1467, 
          117, 1499, 134, 1519, 151, 168, 185, 1567, 202, 1600, 219, 1633, 
          236, 1666, 253, 1699, 270, 1731, 287, 1750, 304, 321}], 
         Line3DBox[{16, 33, 1339, 50, 1372, 67, 1405, 84, 1438, 101, 1471, 
          118, 1503, 135, 1521, 152, 169, 186, 1571, 203, 1604, 220, 1637, 
          237, 1670, 254, 1703, 271, 1735, 288, 1752, 305, 322}], 
         Line3DBox[{325, 342, 1757, 359, 1775, 376, 1808, 393, 1841, 410, 
          1874, 427, 1907, 444, 1939, 461, 478, 495, 1988, 512, 2007, 529, 
          2040, 546, 2073, 563, 2106, 580, 2139, 597, 2171, 614, 631}], 
         Line3DBox[{326, 343, 1759, 360, 1779, 377, 1812, 394, 1845, 411, 
          1878, 428, 1911, 445, 1943, 462, 479, 496, 1990, 513, 2011, 530, 
          2044, 547, 2077, 564, 2110, 581, 2143, 598, 2175, 615, 632}], 
         Line3DBox[{327, 344, 1761, 361, 1783, 378, 1816, 395, 1849, 412, 
          1882, 429, 1915, 446, 1947, 463, 480, 497, 1992, 514, 2015, 531, 
          2048, 548, 2081, 565, 2114, 582, 2147, 599, 2179, 616, 633}], 
         Line3DBox[{328, 345, 1763, 362, 1787, 379, 1820, 396, 1853, 413, 
          1886, 430, 1919, 447, 1951, 464, 481, 498, 1994, 515, 2019, 532, 
          2052, 549, 2085, 566, 2118, 583, 2151, 600, 2183, 617, 634}], 
         Line3DBox[{329, 346, 1765, 363, 1791, 380, 1824, 397, 1857, 414, 
          1890, 431, 1923, 448, 1955, 465, 482, 499, 1996, 516, 2023, 533, 
          2056, 550, 2089, 567, 2122, 584, 2155, 601, 2187, 618, 635}], 
         Line3DBox[{330, 347, 1767, 364, 1795, 381, 1828, 398, 1861, 415, 
          1894, 432, 1927, 449, 1959, 466, 483, 500, 1998, 517, 2027, 534, 
          2060, 551, 2093, 568, 2126, 585, 2159, 602, 2191, 619, 636}], 
         Line3DBox[{331, 348, 1769, 365, 1799, 382, 1832, 399, 1865, 416, 
          1898, 433, 1931, 450, 1963, 467, 484, 501, 2000, 518, 2031, 535, 
          2064, 552, 2097, 569, 2130, 586, 2163, 603, 2195, 620, 637}], 
         Line3DBox[{332, 349, 1771, 366, 1803, 383, 1836, 400, 1869, 417, 
          1902, 434, 1935, 451, 1967, 468, 485, 502, 2002, 519, 2035, 536, 
          2068, 553, 2101, 570, 2134, 587, 2167, 604, 2199, 621, 638}], 
         Line3DBox[{333, 350, 1777, 367, 1810, 384, 1843, 401, 1876, 418, 
          1909, 435, 1941, 452, 1971, 469, 486, 503, 2009, 520, 2042, 537, 
          2075, 554, 2108, 571, 2141, 588, 2173, 605, 2202, 622, 639}], 
         Line3DBox[{334, 351, 1781, 368, 1814, 385, 1847, 402, 1880, 419, 
          1913, 436, 1945, 453, 1973, 470, 487, 504, 2013, 521, 2046, 538, 
          2079, 555, 2112, 572, 2145, 589, 2177, 606, 2204, 623, 640}], 
         Line3DBox[{335, 352, 1785, 369, 1818, 386, 1851, 403, 1884, 420, 
          1917, 437, 1949, 454, 1975, 471, 488, 505, 2017, 522, 2050, 539, 
          2083, 556, 2116, 573, 2149, 590, 2181, 607, 2206, 624, 641}], 
         Line3DBox[{336, 353, 1789, 370, 1822, 387, 1855, 404, 1888, 421, 
          1921, 438, 1953, 455, 1977, 472, 489, 506, 2021, 523, 2054, 540, 
          2087, 557, 2120, 574, 2153, 591, 2185, 608, 2208, 625, 642}], 
         Line3DBox[{337, 354, 1793, 371, 1826, 388, 1859, 405, 1892, 422, 
          1925, 439, 1957, 456, 1979, 473, 490, 507, 2025, 524, 2058, 541, 
          2091, 558, 2124, 575, 2157, 592, 2189, 609, 2210, 626, 643}], 
         Line3DBox[{338, 355, 1797, 372, 1830, 389, 1863, 406, 1896, 423, 
          1929, 440, 1961, 457, 1981, 474, 491, 508, 2029, 525, 2062, 542, 
          2095, 559, 2128, 576, 2161, 593, 2193, 610, 2212, 627, 644}], 
         Line3DBox[{339, 356, 1801, 373, 1834, 390, 1867, 407, 1900, 424, 
          1933, 441, 1965, 458, 1983, 475, 492, 509, 2033, 526, 2066, 543, 
          2099, 560, 2132, 577, 2165, 594, 2197, 611, 2214, 628, 645}], 
         Line3DBox[{648, 665, 2219, 682, 2237, 699, 2270, 716, 2303, 733, 
          2336, 750, 2369, 767, 2401, 784, 801, 818, 2450, 835, 2469, 852, 
          2502, 869, 2535, 886, 2568, 903, 2601, 920, 2633, 937, 954}], 
         Line3DBox[{649, 666, 2221, 683, 2241, 700, 2274, 717, 2307, 734, 
          2340, 751, 2373, 768, 2405, 785, 802, 819, 2452, 836, 2473, 853, 
          2506, 870, 2539, 887, 2572, 904, 2605, 921, 2637, 938, 955}], 
         Line3DBox[{650, 667, 2223, 684, 2245, 701, 2278, 718, 2311, 735, 
          2344, 752, 2377, 769, 2409, 786, 803, 820, 2454, 837, 2477, 854, 
          2510, 871, 2543, 888, 2576, 905, 2609, 922, 2641, 939, 956}], 
         Line3DBox[{651, 668, 2225, 685, 2249, 702, 2282, 719, 2315, 736, 
          2348, 753, 2381, 770, 2413, 787, 804, 821, 2456, 838, 2481, 855, 
          2514, 872, 2547, 889, 2580, 906, 2613, 923, 2645, 940, 957}], 
         Line3DBox[{652, 669, 2227, 686, 2253, 703, 2286, 720, 2319, 737, 
          2352, 754, 2385, 771, 2417, 788, 805, 822, 2458, 839, 2485, 856, 
          2518, 873, 2551, 890, 2584, 907, 2617, 924, 2649, 941, 958}], 
         Line3DBox[{653, 670, 2229, 687, 2257, 704, 2290, 721, 2323, 738, 
          2356, 755, 2389, 772, 2421, 789, 806, 823, 2460, 840, 2489, 857, 
          2522, 874, 2555, 891, 2588, 908, 2621, 925, 2653, 942, 959}], 
         Line3DBox[{654, 671, 2231, 688, 2261, 705, 2294, 722, 2327, 739, 
          2360, 756, 2393, 773, 2425, 790, 807, 824, 2462, 841, 2493, 858, 
          2526, 875, 2559, 892, 2592, 909, 2625, 926, 2657, 943, 960}], 
         Line3DBox[{655, 672, 2233, 689, 2265, 706, 2298, 723, 2331, 740, 
          2364, 757, 2397, 774, 2429, 791, 808, 825, 2464, 842, 2497, 859, 
          2530, 876, 2563, 893, 2596, 910, 2629, 927, 2661, 944, 961}], 
         Line3DBox[{656, 673, 2239, 690, 2272, 707, 2305, 724, 2338, 741, 
          2371, 758, 2403, 775, 2433, 792, 809, 826, 2471, 843, 2504, 860, 
          2537, 877, 2570, 894, 2603, 911, 2635, 928, 2664, 945, 962}], 
         Line3DBox[{657, 674, 2243, 691, 2276, 708, 2309, 725, 2342, 742, 
          2375, 759, 2407, 776, 2435, 793, 810, 827, 2475, 844, 2508, 861, 
          2541, 878, 2574, 895, 2607, 912, 2639, 929, 2666, 946, 963}], 
         Line3DBox[{658, 675, 2247, 692, 2280, 709, 2313, 726, 2346, 743, 
          2379, 760, 2411, 777, 2437, 794, 811, 828, 2479, 845, 2512, 862, 
          2545, 879, 2578, 896, 2611, 913, 2643, 930, 2668, 947, 964}], 
         Line3DBox[{659, 676, 2251, 693, 2284, 710, 2317, 727, 2350, 744, 
          2383, 761, 2415, 778, 2439, 795, 812, 829, 2483, 846, 2516, 863, 
          2549, 880, 2582, 897, 2615, 914, 2647, 931, 2670, 948, 965}], 
         Line3DBox[{660, 677, 2255, 694, 2288, 711, 2321, 728, 2354, 745, 
          2387, 762, 2419, 779, 2441, 796, 813, 830, 2487, 847, 2520, 864, 
          2553, 881, 2586, 898, 2619, 915, 2651, 932, 2672, 949, 966}], 
         Line3DBox[{661, 678, 2259, 695, 2292, 712, 2325, 729, 2358, 746, 
          2391, 763, 2423, 780, 2443, 797, 814, 831, 2491, 848, 2524, 865, 
          2557, 882, 2590, 899, 2623, 916, 2655, 933, 2674, 950, 967}], 
         Line3DBox[{662, 679, 2263, 696, 2296, 713, 2329, 730, 2362, 747, 
          2395, 764, 2427, 781, 2445, 798, 815, 832, 2495, 849, 2528, 866, 
          2561, 883, 2594, 900, 2627, 917, 2659, 934, 2676, 951, 968}], 
         Line3DBox[{971, 988, 2681, 1005, 2699, 1022, 2732, 1039, 2765, 1056, 
          2798, 1073, 2831, 1090, 2863, 1107, 1124, 1141, 2912, 1158, 2931, 
          1175, 2964, 1192, 2997, 1209, 3030, 1226, 3063, 1243, 3095, 1260, 
          1277}], Line3DBox[{972, 989, 2683, 1006, 2703, 1023, 2736, 1040, 
          2769, 1057, 2802, 1074, 2835, 1091, 2867, 1108, 1125, 1142, 2914, 
          1159, 2935, 1176, 2968, 1193, 3001, 1210, 3034, 1227, 3067, 1244, 
          3099, 1261, 1278}], 
         Line3DBox[{973, 990, 2685, 1007, 2707, 1024, 2740, 1041, 2773, 1058, 
          2806, 1075, 2839, 1092, 2871, 1109, 1126, 1143, 2916, 1160, 2939, 
          1177, 2972, 1194, 3005, 1211, 3038, 1228, 3071, 1245, 3103, 1262, 
          1279}], Line3DBox[{974, 991, 2687, 1008, 2711, 1025, 2744, 1042, 
          2777, 1059, 2810, 1076, 2843, 1093, 2875, 1110, 1127, 1144, 2918, 
          1161, 2943, 1178, 2976, 1195, 3009, 1212, 3042, 1229, 3075, 1246, 
          3107, 1263, 1280}], 
         Line3DBox[{975, 992, 2689, 1009, 2715, 1026, 2748, 1043, 2781, 1060, 
          2814, 1077, 2847, 1094, 2879, 1111, 1128, 1145, 2920, 1162, 2947, 
          1179, 2980, 1196, 3013, 1213, 3046, 1230, 3079, 1247, 3111, 1264, 
          1281}], Line3DBox[{976, 993, 2691, 1010, 2719, 1027, 2752, 1044, 
          2785, 1061, 2818, 1078, 2851, 1095, 2883, 1112, 1129, 1146, 2922, 
          1163, 2951, 1180, 2984, 1197, 3017, 1214, 3050, 1231, 3083, 1248, 
          3115, 1265, 1282}], 
         Line3DBox[{977, 994, 2693, 1011, 2723, 1028, 2756, 1045, 2789, 1062, 
          2822, 1079, 2855, 1096, 2887, 1113, 1130, 1147, 2924, 1164, 2955, 
          1181, 2988, 1198, 3021, 1215, 3054, 1232, 3087, 1249, 3119, 1266, 
          1283}], Line3DBox[{978, 995, 2695, 1012, 2727, 1029, 2760, 1046, 
          2793, 1063, 2826, 1080, 2859, 1097, 2891, 1114, 1131, 1148, 2926, 
          1165, 2959, 1182, 2992, 1199, 3025, 1216, 3058, 1233, 3091, 1250, 
          3123, 1267, 1284}], 
         Line3DBox[{979, 996, 2701, 1013, 2734, 1030, 2767, 1047, 2800, 1064, 
          2833, 1081, 2865, 1098, 2895, 1115, 1132, 1149, 2933, 1166, 2966, 
          1183, 2999, 1200, 3032, 1217, 3065, 1234, 3097, 1251, 3126, 1268, 
          1285}], Line3DBox[{980, 997, 2705, 1014, 2738, 1031, 2771, 1048, 
          2804, 1065, 2837, 1082, 2869, 1099, 2897, 1116, 1133, 1150, 2937, 
          1167, 2970, 1184, 3003, 1201, 3036, 1218, 3069, 1235, 3101, 1252, 
          3128, 1269, 1286}], 
         Line3DBox[{981, 998, 2709, 1015, 2742, 1032, 2775, 1049, 2808, 1066, 
          2841, 1083, 2873, 1100, 2899, 1117, 1134, 1151, 2941, 1168, 2974, 
          1185, 3007, 1202, 3040, 1219, 3073, 1236, 3105, 1253, 3130, 1270, 
          1287}], 
         Line3DBox[{982, 999, 2713, 1016, 2746, 1033, 2779, 1050, 2812, 1067, 
          2845, 1084, 2877, 1101, 2901, 1118, 1135, 1152, 2945, 1169, 2978, 
          1186, 3011, 1203, 3044, 1220, 3077, 1237, 3109, 1254, 3132, 1271, 
          1288}], Line3DBox[{983, 1000, 2717, 1017, 2750, 1034, 2783, 1051, 
          2816, 1068, 2849, 1085, 2881, 1102, 2903, 1119, 1136, 1153, 2949, 
          1170, 2982, 1187, 3015, 1204, 3048, 1221, 3081, 1238, 3113, 1255, 
          3134, 1272, 1289}], 
         Line3DBox[{984, 1001, 2721, 1018, 2754, 1035, 2787, 1052, 2820, 1069,
           2853, 1086, 2885, 1103, 2905, 1120, 1137, 1154, 2953, 1171, 2986, 
          1188, 3019, 1205, 3052, 1222, 3085, 1239, 3117, 1256, 3136, 1273, 
          1290}], Line3DBox[{985, 1002, 2725, 1019, 2758, 1036, 2791, 1053, 
          2824, 1070, 2857, 1087, 2889, 1104, 2907, 1121, 1138, 1155, 2957, 
          1172, 2990, 1189, 3023, 1206, 3056, 1223, 3089, 1240, 3121, 1257, 
          3138, 1274, 
          1291}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
      VertexNormals->CompressedData["
1:eJztvXlATmv3Ph4RQkjmeZ6HDAmxZJaQhIpophSJUKJUKlMolVkiKqFSNFrN
mud5zpyegSgzP9+z712/du+Wp9P5HOd9j3/W6TpP69mte77Xta49RHOHok5r
ISGhhZ2EhISF2P69hn/x3wlXD6PxtdQ/GepnhbD//Pm/6zn/V3AjEn91RvzV
G+H/tlfL4nFfvm7MlQ/DUGIvWYveX3iBz4hz0+3Chv/bXj/Hi/TPh+z5FIaJ
vJjeXhN88LDnZK+Ch3wY8u7QIb/wHJQeLFI7jxeKt+6Ki2c/5bL6ocK8iCXO
v95eDf1ubTb+T2/3g9minZUHpKDhfc8XTqvCUCclVNqrhgejFgsPkFTOQdk/
2iUJTSyf2i1QYW8XNvzn7UX/a378KfvPHacflhXaLFsei7XE+t2/GtS5Lx/e
LCxLd9+di9M/RGvoWRSgbyvnwXIDq+CBQXAKVykRcwfwpwwLLcRyHZHl1as5
v12/aqlx2lLtJR3lNsND5AHybQ+KeZbGo7aqYWj7+XwQWu0R125dFDpuH9lL
LqcQn4rdLhX15cDrHQpz55Rno5XH2OHCy8vxTKJz31vmleBTsv181ekUfLDv
++GS5zmoPvdIVb8RXNhAxo8JGU+6ZBwJ+px/F/5Xz6tVJO4ypB3o+Pfhnnm/
fnQhSnw6YDifm40H+vVOnbmwCkbXqPpq8xLxhP+epOTteZi3Tt3oYSsuHPPq
s6nN2kf4PG1K5IqpBbjkpb6edzYH0hSTNdUmhOJiXv+E5NF52HvTzIyR17hw
j4yXcjJeyv7jeKH/jkbP3yRO4kb+TgWWz9fHuaVwxrho9ve+IHE8SuJKx/N2
0DXzt96FKLbGI0p0cwLeO5TtHKPFgcfWp4J7FOdi9eaJur3K0tDzsm3mg1QO
PGi7JVNiajpWfO94y84+FyO5lqsicziQ+sVj3+fpXng3uFWBhW86fld5U7Cg
sH5cxI11OG5wMhytbymOnJbAZzyn0S+2C93/mO3YGBe0vRqOi0b+Zf7zc7Lh
jZ+/t8U+mwsuaei65rHwrSkJON11X0QfNR7kg/GIPpbFaNBBVDmyMANvyEoq
xcysgiefwzx8IvKwu0Gg6xvhDHT1sUw32ceBZwTvxsDzyb6rmLHvYvt7Wwon
/ZMlzmztohPG4qdRPyefl2HGk7Gfb7J96fX3PWP9fUziKU7ieZbEs4jMI/Q6
TK+/H3Sy57l4F+OwrRO6dnLIwok75rooPHkFtN9PDP+CxvOvxm95/79/+o3i
T1nW8dWoXYgfmV/9XvpckMnon09Z+rM2Ny5vfEoG3g7NfXx+TDLOwcEzDldx
wercitebbpVgmMVg8Yp10fh+8esomddVsICsB8VkfaDXhZaK21+NCzqOfu7/
19drXzJf55D5m56355N4ZjPieX3Iehfl6XFIezJLPy4Vac2HNp8Hux2aWY4d
Jd9fnW0VhFd8N9gu1quq85/J8C9ofH43nG0csbVjw/Wo6Xah+3MBI/53SDyL
GfEMIvvUu2TfSu9Xd23TOqHiUozmH8OFDz7IxK07DVuFi1XVrRfM8fhXx+2v
xltqPWKLz4zOg9KW7MhHruOIN/kQgk6HdHsFaHPhwYQED+sXBWgjE3U+lvcI
JV7zhQKuc2Cp4VvDxyNLMa6mv8S6zvmYnXYpZdaRyrr1grke/dXx+d3wn4+j
xu1yg2X+udBvFrd2fhGqu1nUrDXwRNFRsiuUKjlQflNq+oCrjzE4uipv1two
zBk5boz9pUpYRMZX0T90vfir8ZZqFwfFwUNHdC6tw0WOR8yPnMeB7JUPd63I
fFyHa/uMsBhb8ePcfajYy6ssHbfqF97vwA+H45IjN1Vc48EyQ751nOdtJBYS
fXvF7nn673hp+PnG8xvdLqqVk1dJgIJMU+1yQuZWe/UN5fjubPHWtR19wOrt
kMlXjKug69nnGYP1MrFffLd3gz+Fgb3mpJDw7TzWdv+r4/C74Q3HBXN9odej
+nNiyh/n4ZS6uGVec+/oMJQP6ko64x+uLa/Dv4b1KV5iUwU+CvcuF6oV1eHb
+kh3XM7lwLkXz5YPLMupw40GbvRMEOdBKjlv0/h/Pne3fBz+xf+ZOPN+Ro7M
s7Jk3v1fnW//Lrxice6JwW9TIP8PG449Pi50DH7MA8mbos80a8NBmrK4Xu/2
caGT9e21+t/2ahGcMZ/Xncsms8SfrV1ofDRLe/07vv4z3jD+9XkKav9j1sQ5
ut7PMpY4s7UL2c/Aw2h515rOh2T+837mfzePTFmjRvFnGy/0bxrfe3dhqkwi
5ioZzOqhyAf/T1KapdYhtEVlqY3q12/Wx7/v2L7HdkifrIs/3V7jGe216JfG
0X9PHrnh/p/Zr3Qa4Wx+pGo99t5ZUgQz/rBJ+GqEVlXVEA6E1kxst08vCR5S
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
40Hs67SNA53KYauPnVSK1ysYWylX6XUnEoIevba917oEtCY9VMmcwAFSHwWy
5D6pD7lHuk/GSzEZL3Q98lKSP55D8snVJI+8icpLojeVl6zjvT941DuqatV1
iE5qe1pOvhBWiBjP0frx/EGcHUcniT3C/W8niTpgNozQHqOQ+IAL1+YPuyRq
k4HXKQuupeUTrQ9xIYucz9eR8zp9Tpch9y+HyX0MfQ/j+zlAqWhQHPpQFjxn
OI83b8eHiVptUtbY3ESZjYGHjh8vgkMyFrFX8jkw4Eans5PaOWBob8uEx1aP
wWlLtuqgPq+gX+yHjquVHDC5NqGkZuRjiHIpOL9R5RW4LHvoeikpAz66xx2+
FlcBmuLf+9/qXgmkDpCufwW6HrMrwZ8y8DyW+GeT+9bb5P6VpR657pwSQuWR
keSRgZlHLqfyyEDnkW1IP0xm9MMtZFzoMcaFjorqkpjxYaiV1n/VbvkiOJ9W
8nh9CAeMCL6R4BcITn/vSYqnDzQ/32HlyfKhRlch4cOy1u4yFaAUaGGi+voV
VM41xE43I6Bc+PHtjq8qYLHi1dKMSa9gwOK92t/dPbH/DZ/U0vQycEhRmtk7
uAosxgw4+pl3Hd4PGtVueHo5THysfn7AlCrQIveepJ6m7v6T3PtAGrkH6kfu
f2rI+lHLWEdaap0SFCe8SlzNmLdHjlMM+DrQVMaTsY5/JvNGNWPe+ChU0dMq
3DKsjNHuy20frJqhYivzmIHT9/u+LP3tOuN7SX4ljInHJY+Zpv9YTcaDgV8a
X76SG6snc4OBEx4IlJJ97j+tju/vqkdm45dStjG/sQk//3V5ZDaeCWX/unpk
Nh7dz/lFbDoP/zt55L+6HpmNx/Jzfl2dH5Zx+t+fRxZ0HDXs/7/qv/H88/P2
+u/r/y2FC1r3yubn57yvxvPhP329+KvxlmoXNvy/dR3/q3FB928/X68b+/+3
XZqHNxwXTdcjN8R/9XuNWNadxu0l6PP/i/+L/851WP+b+L+61n8XzpjPWeL8
r671X4U3jH/z65EFPRfQdV6ljDov2iOtv8LMF/8qLvdfwYcUvB6Z6SeVxLmQ
EWctovdrytD71SG4OQPfe9xFz8jLJMzjF+NP59uYdbJs+O/WXi1Vj2zG0Cen
45mb/WFn7LSHeE8zxURu8218a/p87ORgPiwd1v+Q5plw7A+tO66N9sF+Xez2
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
xGx5bHdfuP7F02xWbRVUn3Kb2086E0s7C4sK9QmHou1f5t804UHkmPxpg93S
Mauib47T8lDYz130ROc+D3IjVveLVo/Bttq7t8TfPQAXFq0pk3flwxn7AWpv
90TXPU/fba5rQtx+Px5sS+E9prjNSLcMAJmbYskOEb5YMtPRtVt2vR6CNKNu
d6r6u2T5EF+YTFkMexhys7qYDy61Pr2/tHKAS5TFh4O6B8350T83RZw5fPrW
AdChLGrItak5/Z0d/93i83fhR6d8jzqV4A8nKYvlfnAkKosPDrO33Tosehlq
Nni2aXMvHM/NP+Y+NJY9bmzt2DXC6nIXN3+QoCw+yP56+3C24PGn/XRl+Onn
qiW94sdzilMWQf6LVnUz1uulh1SDT90+AUBZzLLhnlzyo1+x4YL6/xf/PXHC
66Pv4evuB0w8VUyeRVyCrLJY64ryCDxmuFv1UwAfxl68YSE6NxFqto/c1P9b
OFZ02Tx7XW/2/pAVLHkyfWUQ5FIWk78e65oayK/Dkxm4oM9Pjzvme+XeBypP
sDocAK8piz6b/MdPThLcv+XuY7nPPgaD/suBeo8d3ZE3bbOSfDoftg9/awEP
fGHZ2JGP1/voyWTvDbOz4f3ZcfHfxr9qKf+/zqclPL1G/bnheYeNp1H/vdTn
Den8Ud3nXZfnRojlZsF2a7ON0zbGoY3JXOnvL7is6wib/61WKw05dwJAl7JY
vNJxr0oiH6RKy9z3zAkDScqiZ8yuB/4XBO9XcY9axau4R8FbW+VNV0XuYE//
Vrmm5/n0vhS4e6aenjLMvm5f2lz/Hxn+KzWeHPrY9Q48pSxunfLlyr0ngvvf
qlP1cczdS6BLWTzR1+Ft/498VlxQ/w1//n35tA3vdZm8uF/n065tcG9Qz1ek
zll7GvVzNr4r9fndjT7vsOKeQ/z4JBho965nmwNZOCFjubPP/fp7qhDVp9pD
1UPQSV//4pZsPqv/TJnrJ1PHxUE2ZXFo6pdp20T40MtHM3LlhQQ4NTayXffZ
kfhpwaLrS8UEb3fHHfsHcv0jITvJIOvDkjgcbiV0pPVUPigPXnkqLzQcrDtN
eNMhLglHpPdyEWkjuP/NNqvNcoOiYSNlsSygJ2fUbD7c9hGBSE4E3KIsjulm
KWm5Q3D/aWTdzGCsm/Zk/jn6i/MPGy6zX2bxrBPuAJTFrt0Ly2Rq+Ky4oP4F
5dM2zO/U9/N1DeZnJp//1/m03g3uGbQZ/V+HxX9jP4w8UR1eNVQ+cs/KZOAO
PB34/Voqag0Kfhs9jwdmFilLlxhngNOGi65brZNwaa+wfkda0/eWjfm0s4rc
39rEPAKRHadFvzzJxOr1movjv3Jh0J3bZz84xUBq7cP5d0uysFrRWmfCZ67A
fNrj98VHapxIgGm2GVnpAamoPqzzuBxdHnCeeKSJmydBFWXxSNmE+DEHBL9f
bbuW00nmdBxMvNl+VsXyTLRMe1rQezgPZL+LuqgHx4D9oPYTlbQzsJvBrE0q
GwT3v3euU3aPdQlgRlnc1lZf70AQD/qdHvH5nPUjGEhZXB83S/zBcx4jz67E
jE8j/I2k+vsuR6MgS0wzOTngBNoGSMqiJx/mJI18MykgApJmXvL27zg5zPem
1IDqYHpcKLH0H/pnwzpcUD4t1d22kJ9/VZ/w1/m0BCc//+r+rfG4a9jf6vkG
SyHG8VaXDBjZ7WJMuUMWvjt3/troeVxWHmy3ko8Js63jILjGbZeUSzbazXnp
fyWWCzuWKvdcrfoI9F0GPLbLz8KQ8tlTjYrY/VC2MZ82/cSE/k987kGbkduT
Ll4vxTXvhl5W/VIFsqts+2S99YOlVW3FJy8vw/m7TibEZzLvb5vm0142TX6+
TSIdNghVaH0eWohaPVz6vJDgAGf299hjB9Khn63DXWXtApw0Ie2JkiR9j6fM
0r40P8qgDn+7Q9kiZ2kBvPgU+3DltDR0ynq5OmY9B+QfXhr/+ns+9D/Xffm0
h0mYdP1Av1FXOU3oLtLfW99vNfuuMVjePRW6tgstUHe/j6e2zE70+MiDErtp
YxZqJEH8tbYTv927j7f5fqOVh/AZfjYy+kPj+dxtoNz6Xbc9sfvEJzPT1IPx
jGHKaolUPiuuQI2XRnlDytLjpT7Pvnr0Y6VBtV60xY26H3pWvuKz4g1/v17X
rmG/MqjDG/ISFzJw/UafT+pyuv2jsmQwLzWp4uSm4vZ5piavp7Hzcin75/m0
DX+/fj5RasC3rB+n377/v3+rGsWTsnT+l/mcjfPCDf2oMj5Pf189T29dgzhv
Z3y+sZ5kw7hpMnDVRjj5+2Ua2pa7V5Ej/UqO0a/YcHlRiSwzsWiQoyz6dG7r
pLaUDy451Yd0U2PBc+oHo/Mi0XigRFW9YhwfjIe7H3rAK4ajoudvhT6JwcFi
R8bEdeHACfPKlZO+lcCFXbx2K00fYVaepoz4zSr4sOPGLpegbOiPFdvsz2di
L+Uro56mcUAuc1ZHvmYOLF4U5XRlUxaqSfiPlTzFgedtt+xPT8uEmcONu3lO
icSOI7f311jKg9drh5TYjM6E/Q+GSldph+KAmd7yyw/ywK5jz3dDT0eBVZ7C
OslXoXhCW1nly14+jOctX2KcjNBT/syFpDkh6NPnxpBuznV6QXXxo8+hiyv8
2g9aEwv93Ko/mX09gTNjI69eaQbPig0/Qe7PXRn354L6WUnu1bUZ9+qKBN/6
i/fts8n+gUYa7h/oebN+nqf683zSX+t5dHyyP0lm7E+i5GwMvZ6kQ/fOHfoE
r4rCcbN0z0vZ8hj86no/1H6bHm/1ebFp8R9C5c5kwqc3o6Vj4mNxxqLrD+YM
5YFa98+jTkXmwjPJsHinBWnYzWPv+3Ol9Pqyo5Efyv8sGWYchr5XcMjSKAZ7
lFh1qnMKlut3O9IFq6CoXbK8VVA+mA1JmhK4wxdXFq0PfrxTcP7Dke+jnWZY
5kDanBvaEw48wCOqF1MnfOfCHet9q6oVk2BJrl1ake8t3H9pptlzKcH7w0Lv
C3anL0RC1EBnRdHWYRgvuz1un+WPcWqTiltfPYC1pfoXM2Ym4LIhs78lNiM/
e7D79MU7zSNg6fIbSSPjEnBfqazwEfGWGxf9Jp39MPl8IKia5r3/MDQGN/An
Vm8xF9z/1WxNC5ULQbRFuR3t42ru8WHInHyDsZ+8aYutra+Fzaxk9z+TnDdn
Ms6bC0g+YiEjH7GEBWfz4+/9UuKbYij4URYnOHSOG+pOP89WlnXBoBEevf2h
7JUPsdD5edjyO7NC8VTmCKk56/kQuKvL7rvXCyA6XemNVls/FPWYcqNiDpfm
b9DrOGNfsagRHt39wBG90BI4cKtyaF5+FKrttT244U0V6NXu6nHXKwf8LaKM
ys4k4dqI6q6XVgk+Lk5rivfal5MC683AbXltNs4LKZbkynMh2a3zQ1NVd1i2
iWslNK4EFwwS2llgIji/QnjrqS6TZp6CTQOmRMzdXoSvTbvkLXrJgVqN19HF
+0JA3qnDhr1jitEnbO+sdccE928SPGSW08cMkJ418pZDdQ5KagQmzbkruB82
fE1MepFXchaIKHfas39xPCaK7fnqliF4nN/1GfHo2t4MWPQhPfKKXzQmy+u1
Pq7Fg41uHYXWcuPAoPPlVv2U7+DoKHfxCgPBx505yVPsYMlTfJpw/YL6SPUm
8xQv7/VFkeX36/6/8r374yrK6c/T64IWo99uaTTPd4lrV3jqbjg83RU4IjPo
Ei68Iflwfiwfknpmd99YkwgLT5U8Pp4biZHjOg83qeUx9mnM/WTj5xy5wsYm
lJcODpdui/nnxqMif09Hi1k8GJJU6HTa7CH0NO/5tCQ2B12X5nRWLxC8vSK/
bOh3TyQIsr95Jhu0ycatPefcrZrLA2k/Mfel73zB5FCJAscpA5dZ+V2S9Rf8
vkJDKmiWTa8oKEy6NMpmegKeOPpkzM2OfIiv+Ng95moeFL73OO6Q4Y1J3azd
PvoK/vwY9VRGwbwMfKa9WJO74xL2OVCxbmq+4LwjNnxlxY2jMdrFMHHxgFf9
bzjCiKslW0f5CD7uxIfkpK1+lwu6o8RSIw5extlB7j7iP87vtqZbsr4eTwfj
gWoHX69UkFHILZZdWyl4nOn3DbfflLDn8iblunwHj/RzBcug7rsGqcs07OeN
/Sz8dCdEfIELbXEnf5vj4C98+n6S5Xz06370dZULvmn70hYHvU9ds7ZU8Hkg
b7zGPp/ecTA7PM9p6zpfHL9SdFOX3Xw4MCHva5p7NGyO1RPZ4euBnYaP13B1
Fdw/mx8lqi4Aaqm6AGhuXcAbqu4Asqm6A6DrDpLlRPQPBxdCcEL7JQ9kQyAl
Z49W+6fN6G86R2IC5pZAyKST3+XyfeGaOkqjZsutFwej8sZfXVQAPvZH02ee
vgyRG2QtVmgKPn7Z9AOnd1yrFfMsA1wfDxB7tVtaRmxr/+OjgwUfF9fIuOjw
x7iQrhsX7R1fWUgUh9b9nvCWw/rKaX8f3+Oz2B981Lr/31w+qhvLeZMNF9S/
0/QtUiVH02HCId2twl09QHnh4A1Gj3mwQWTCt8nHs2DaGWPJ9mv8YEzH/u3T
tQVvrw7p4ca8AfnQTXeOrO3+EHArumznsZsLBc7xndaOKoA2HXI2zI+4D5Pf
Tlx1aJng/U1BT2VFx7l5YNSp3dcLxvZQ7K2WJJ4uuB9Xln4rqB+2/i9xQ/5c
O5msOjxwYlbQksOC+3+4VEX5RHoEpM84urvq0H2UE3N73+ocH1b7yb0KtrsP
ipTFZGm3/isiBO8PbwlflubP0rxZNpzNTzzFR637/83lo7L185pcmS7x7eNh
zN31kwK6msPggv7+vbcL7r+Hib/UCcNMeOR/qOOZaw/Q77WWg5UlDwa495QY
MDMLfI6YuG8dfh+dH3QcclxH8PYy4ByeuqttLvBkv6dExkfgGH7sYP0ILmQP
7PNjuOVAYdy9idaaUah1dH6b2ijB+63FShtb/tJ84Jg4Lyjc64knFdrPmnGa
3Q/b570dTbcudEqD/Qv658zt641vtBSO5r/nQfC9Hs8NPiVBkNTqWV+SfXGU
vd2htFH1722ZwOAv9Sx9qsOVCINelMUL2qKXsy7yIZvi0wLh0yLNp3Wi+LR1
z/vfzqftQvFpkfBpgebT0jyw0Qxd34mER0ss0Hxach+I9L0gfR+4ltzfEQv0
PR4b/rvF5+/CDxP+AbFA8xBsKD4tEj4tNMWnZWtHUcJ/JRaay6dl80PzaImF
5vJpab4ssUDfR7Hhgvr/F/898UOULm2dpfVpDSk+LRZSfFqg+bRDKD4tvqb4
tNAUn7aOL0vzZwn/hw0X9PnZxh3NoyUWmsunZfMjcu2stdmxG0gs7Pa0fNrn
J/uipnA9cu/FvO9iw/9X/C8i9w7EAn3/wIafpvRpIYTSpwVan3YGpU8LzpQ+
LSxtQp+2PaVPCxKUPi3Q+rQZ0Sc2jF4fiyu/zd/uKJQJ+RbmOr5zeKzrCJv/
zMvfTGbJ3MYI7eydO69Gwv5Nw3caXOfD5szbEeXj7+Mc4SC/Cu1YsMuc6Gtn
KHjctl8rkeqw/z66z+s65LVRHOw09Wn9QZ3Pigvq327y2uPJUnfw2gBFhdwL
KXBhT4jl8P9fXaQNuQ9r7j3YaZGeQaXZl3DPpUPjr7VLBJEFlwMXreaz4oL6
p/+LPmcwz9Fs+K/6f094xpGEd0zzjZ0LbWvN9H+cKygLGYrzA6p/cl5bQunT
QjalTwu0Pi2bn3LCYyYWaD6zJaVPC/MpfVqg9WnFKH1aKKP0aSGV6NNqE74y
sUDzlkdS+rRA9GmhN9GnffVx1LCeD8LxjabrtQW30+CDWaVGm/j6do+n+LTg
SPi0bP51tF54WFk+wE0Lcm+rBKeDg8oGWRvkwfCpwZlHHjzAXauPPbnWLwPO
LBgxZ42f4P3qZrazi4mOC6pIzLEyW54FaY42OgmW9X7oc3xz7wH0j7XlLtkc
htLlGid2B6SC+JTbhenFPOBPWzJV+VUERhm89biikAAmY6sCKySasd6d0fUc
qRaE1d/XixeeiYFs6XldQnfwYekHRd6haH+cVeLm8jU4ElRPhvZKb4be2k6S
jzEj+Rk6L/OWrINv/+R6+ob4ecPww4YfpnRp6yytTzuU0qeFI5Q+Lewk+rTm
5UFjxkUH4LP4MzXXBsfDx6fVk279mB/663QZ8WnqHTxqvOl02epYcPPJX9TH
gg98Sp8WdCl9WmDo04I/pU8LtD7toXWcPI5OBBILbUNCgw338WEXpU8L2pQ+
LdQSfdo95W6nbhon4l5e906DIAUW2dfsPreTB6495PbNvReF2SPTJ0yLy4Bv
kl1cpmry4C7J7xILdJ73uablxxvb/TH56WnNrz/O61nCCU8LODyIkbwlv1jr
Bobe3aZ1/FY6DA69Yd2/hAezSP6YWKDzyGy4GMdN7+XF+zjh2utPLqvioCKm
7+Dumnwwqs7sXVERgcSCdz8TxdlGgre7osR7CUmdKFyzO2LWjWVp8LKypH3c
XR6IXSwbrGAbgUfzJ/lwt6eAvJerfdtSwcedOeHREgs0n3YQ4dESCzSflujQ
AtGhBYY+bSPc49Pc+ypTQtCLstDmsNPSaC8+XCe4JwNfSOnTghilTwu0Pq0x
pU8Ltyl9WqD1abeceXhywhU/KPSo6Jyc8Qh2ClnsGKLGhyfnwvobmvtB54N3
V72RT4E7iUt2ZInz4QylTwvbKH1aoPVpAyl9WphC6dPCBaJPO6uHxm1O/B3k
r7H75r02BfofKPcK78mH6at3PRpvfh9TU1yeX9BPgvz8Lh57hvBBmdKnhRGU
Pi28J/q0yyh9WtCi9GmhNdGnlR2+cuih4+m459Su+2KKEXDBcPL0Mdd5MJ/S
pwVnSp8W7Ik+7a7y/LurfKNw5TofXKmSDhtmOY/d7MyDRb4J349cTUG9zbHy
ymeCIWnBiGCl9zwYqxF4J6dLGKotz1l142o6pBhP22N4jwePxDtVrfkYjusP
jjxwzSgNdge9z3uWyIOqyyeefj3kh/qBeXyOZyzs2BUspbuHD3fKjXwKbtxC
JXe321cLosHDrtw28dSPfV1/9fmn/M+AR+wcI06ffGi3bUnpoGtc+Pzl9kmx
i45Q8SAo8/GMAhj70lUicgsXqhUdDn887YFz2zremfs8Bs62Ounjd5TPim/e
5CjcfmUcFk5qI/lleTZMuam1sjCbC9w35+7Ao0do0O563rbaLLjrusG0ewYX
jF1K15c6xMFMsVF5qwLToWD21TGtNvPgyzFP7pSxCXBvp9u2yMtZYPyidpF+
ChdCzrycNGdwBoZSFs5WLsvDy1wo3Hmlv+6qdCyiLOySG6tsUsCFyddGRJzf
kgGXco/N8+5YDBXGCxft1a8ClcW3l6zokAkFbSzsPOXL4PLKExcX6b+CYM3q
4UkdfbFI7aTHvDO5YJ4c+rpdORemzJ632WDHVWy3v0iucnseKB25s1ckigtl
JX0d7Kc8Av6Sp7Wql8tAo7jd5W/Tq+DpmMqpm7qlwORiG4Ub9uWQ3arHU9cf
/vWtBhgnXbkLt+5em69flAGqXR1fbvbmwcOpOUcG+l6H9SNElTeXZ0DRutVZ
H/15sDjb8s6UlEew/GtwtlH7Ugh8U7Yv5UoVKFrF3VP1j4EDQiaKPeSKYLGw
ufhFMw4451ZbJKyPwSuHXjrt6/AIQneJrNjY9cc5MSYh+9nnRxjo4WNyZnIs
vApMbZ32mQdSlD4txFH6tGBA9GkdKH1a+Ezp0wKtTzvskqP/sFv3sH1fkcxB
MgUws/zu2NoVXJCn9GnBmtKnBVqfdswUXQkdtSTsunu2a5VMCtyOnT8sUpsH
gVI5xopzvXD708dlXXIKgNt2UN4oGS70Gr+1ZP5hF9RtazWuaEIFlEXcmSf+
9RW87PWJs3/fGbxqJ6p2UaoCouw6yTx//wrGeWhr7HE9gwvfqY2qfVwO1guO
GZwcXwXPlKOOa209BXcLlrUxVasAy3dWva+VvYJjUrZXXptlgGvf2Q+NP5dD
3KfcGfk+lbCv8uz8zZMy4WGgo86asxXwSmjOIIOhlTByh+HoyXYZYCatGiX3
PB9a79HO3DiCA3Z9Y7T896SDwbvC+0Xv82Gg/6Wh1nIcsCW4IQN3sMpceFI4
HfoX684rNMqHEdKfnTfu48Dh6hmbnswIg6TdTjfKXuSBq5z5dylTLhCdOJAl
7+Ol9eIsKH1ayKD0aYHWpx1A6dP+GId/6NPCcKJPm0vp08JUSp8WWlqfVpHw
ZZUJf5bmzbLhn+3bnDdts0fGhdyL0/fh377dl+ujsrsRnphjtdBkgBfqPec5
HFobD9NEHSwc1Nnx0tH5dg4mB8O6L4vvu0wvA3rpnpRvm8SD2WLBAxKNzRvh
tU4OQuljbGR6ErwnwbtFO225YNEYb6Nrv8J6xA04Pt4vcZNiCqhtKZJYNpAP
wiw4HSknxt+1u4+Zmv6m6WFMvKXa5fL+ULVOlep/2r/UACfht3M1G/k5Vi73
PHeCooxg/hvr0/byVk6YK6nayI+XWYBRgouuzBkGLqg+bX64VpjLfL1Gfkj9
AvSm6heArl+gfu/X9WnZ/LDxaSn76/q0P48nG/5/r09LWTpuzdczbFgn9Wff
K8Tmn67vYqsP+lU/dN1ufX3W2gb1L5Ob5B01rGtbyOjPjf00rHOpx9n8NHw+
pq7sr/NpKfvr+rSC8mnJ9xE//z36tA3rqppft07qaP50v2XDlQTst7/mZ51M
U7ig/r0b6JgxdeDp+VOrSf9s+rSU/XU+raD6tILyaRl1eYw6rN9fn7bhz8z3
x7G9t07g52/hdY3Nv0Kz+23DeY/ZT6a3kH/6fXzMfctWFpzNf+N5WFA+LZsf
yjauQ/y5n8b436VP23C8NN//z3G6HzTfD6Ne9S/aR9H9ufnvl6Qs2/tb6brQ
5q/7pD8QP8z+rP6n49xS+D9dn5ay6n/ZuPi5DsP/vR/KttR5SruRH2r86v7p
/nmrQZ072/c2339L4f90fVryMwsuqP9ff7+boP4FxZUb7E/qcTIPsPSfxv2W
rR+ua7Cvbvnn/6fjDfef9XovDe8BmLou6xp9nrKNdSrWNpgPBzeJt9Tf9d+B
s71fdV6jdvm5HzZdLGUW/4I+J5ufP79+NTy/MPtVY7x5z/8v/rvhpH3p+6Im
z/XeDeb/Xx0XbOcCNlzQv6vxuKOen37/4Lpm+5ci7y9RI+8zod9jMoMFb97z
CwmROnJk8k7Z8P8V//KEL7ucUc/LhpPzLEt//vP6tKNi4nV9K2PQZCT/bJJX
GL6PVH4ZoMZn6rA16V+CvL9HlLzPh36PD413ZOCCxq3g3bxiqWM+GL171y4f
1XCUG2+8Z3g4H2y6fjt4bm4g3rk7OqVVQSwaTjwQ22+b4P4PEz++DD/+wUNv
XlDzwU/h76u73E9A6xNvZkyWF9z/vuMuekZeOmH0ex5oXisbLqh/+r/Y/Pxp
/3Z/8GlpHd86/d4LhP96nvBh05vg0za8p6q//2HzQ+sDv2ToA69tcG/QtD6t
IeG5GjB0gNn0aW/PGpgp3P8htgkbHuFT6A/nt655FubL/nex+a9RKg25MzEI
NQYnLnzfJQCD2tpYdIniw7z1O/P6nwvHvNvXagwHIdoHOR57fEzwdrG+39O4
dFo4jjheW/yE9xCV8oaO7uXwY1wQfBQDF9R/37Cc6c46Hrhu8rmC3q3u4+Sl
fR5YFPLB3fFwmqW9SZjBn5wPDbpW2sWPsA/bxvDjpT9zsry4zZ/2L+UgP69r
tH6YIcNPJ1I3IkrqSJpbP1JL+LK1DN14NlxQfVpbik8LTyk+LX4gfNpJFJ8W
jlB8WqT5tN4N7hma1qc9THi0xGIbwqdl5InqPu9M6h+dGfWPiz2/b4Z1URjd
f0rrm9l+2E6kxE3XlQ/3CI/2HkM3yY+Mr2+hDcfXM61MMau34SgkZPS2A88f
Flq2nT/aj0/rCDfSE2bDK4ifj993NPBD6rVxBanbbm69Np/UY79lvOfoDcHf
/eL7j36OnyJxP8W4bzlK8OMM/Nf1aXuQ9/UakPf30u/t/fh8oJiD2QW8e94j
3d0sGEsncuZtrKuX/HV9WjWKT4vpFJ8WaT5tLsWnRWGKT4s0n5bkMcnvN61P
u4Ti08Irik+LAwifdjbFp4Ukik+LNJ+W+r1f16edR/FpYT/Fp0WaT8vYF9XF
v+uSOe9c3KKw96TdyY8+3oHxIb4xV87xYT7FpwVjik+LNJ+WvK8HJzHqi6ey
1B3XUnxa2E7xaZHm00ZTfFpYT/FpkebTjiF1eSMZdXndSX14N1IvTteJV1G8
WZhH8WbRlfBm2fAexE93hh9c7+ocJhuCYZSFICGZNWpefHhps/z4xg7XcJhn
subiaQkYf/sUP1eFHX92R/yBoXk0fnScvmrtQ13oy7s0wdyND0vyxR4aq8Vg
eSvnGpV1dvgoo/Xr/j/mGQ7Lc7LhC2XSJUzvx6OtZtvSfffTUWzT1rfvF/Bg
VbeHD7yOJWDQatduOS4ZmL9xMAj14cF5Sc2KNeMUwuZR+otI6y6+0DH3fJOn
GAYMfFi3rD5Hbtpip1WfPgsPeITqkzX8s37Mq/2GTVDOHnEYwhb2Gxo68BEG
Vb5elf4DrybzRS1D56GaRf9hifTJyoQbYaA6/mmVxooIzKiVDdM+wgeZbSG3
5T5FAqfNae0Z3DBUMpz5PsVUcH3aQRSfFtpRfFqk+bQNz8v1n6fXhUuMdSGA
4tOCIcWnRR7h0/aj+LSgQ/FpsZzwaZ9SfFpwo/i0SPNph1B8WlhE8WnRivBp
P5461P9bR3N4G77l6uoOFRgepHxlZc8qsDPcoN72VRgopsV6dniRjzv3t21/
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
PvU/pjcrKP7/AahH5Cg=
       "]], {
      {RGBColor[1, 1, 0], Opacity[0.5], Point3DBox[CompressedData["
1:eJxTTMoPSmViYGCQA2JmIM5SPsB/6gGbwza2+oK3RYwODGDwwf4dR5X+ZnZO
hzDT+Z9SFZjg4nlbCx3/fftu/+a0UvtTHy64+IGzlx9PN3hgf+3iyqDQPoQ5
L1wy9pu6v7WvXeAacOjFZ3uY+Oz/7/ltmj/ZH9EVqT1RyAlXLzxXfuXZa0wO
m6Q1uTj72eHiMx+2n2CUZneIfezafrUcIc7AFBrrs4TPIWKGxuv+Dla4uMMK
xVXqoQwO2utleazvCsDFYya97t8+gcthQ5ZfXmfRO7h7ik33WVUvZXb4xba3
pvgCwp0RgbMm7j7+yz5j6oHHnBe54eZkGXrWv9JndyioMv97M+0kXL1n7a1f
5wX/2+8QcCotfncBLi68ffXEV6sYHVp3VDbP+vQLLr6gfNbqzNlsDlKLkmQ8
u9/DxZ/1PpA4GfjdnuOD/gyD3N9w8VPbRKZMKvxvr/Ls/hym8wh3OnFzJdZ/
+2S/mLt2bcJTZrg7r05QTdk7hcthibkO8xJzRLi1RRnm8Hr8t5+k6Obttw2h
Pt/56Ms7hawOAfuKvI6zIeJXgzmXrSTtn/351Vb7S/b+R9jbdNJEYzGrg995
hrzqyYjwPzZb0fL50T/2d9SUY1YvQIT/sQX/U1yl/tsL3GTqf7DzDCKcX+W3
3nRjd4i6MjPT+SMi/ZxzecRTHfvMnuV4wuZWpjtw9c81Fbce/vbXfud0XpO0
Bx/g4gCaJwBa
        "]]}, 
      {RGBColor[0, 0, 1], Opacity[0.5], Point3DBox[CompressedData["
1:eJxTTMoPSmViYGCQA2JmID6R8dpMad3h/e4rXgZkhn22ZwCDD/YPyos/LW1+
uX9d5FobzXO/4eJ8UwJy3J483M/w5bejy53rcHGOk+UMT+PP7t8e+O2f4ft/
cPEzG0vOadt83S+i9WKK0M6vcPHvX3f/qljwc/9Nv/7fCRx/4eLXl+3R3M3J
fqBndV5o+7YvcPGSN1eeRLqwHIh0u/3e8wSLA0zcLd3Ssmwqz4FL/MXTpizn
gYv7ddwWn3yQ7UDdsYTf4inMcHGD6u6XxSUP99ufzNKZMeU/3PywT1fjLr3/
vf9LnPesY4VccPVa7ydvdXnGcuBFIONzVsWr+2HiBy75llz8PWM/37UPjKc4
fsHN4W81lpJo/b2/4tqPlbM5PsLF5bozlm7sZzhQccw/azE7Inxizxke8jP5
tb9Hb1/D9BW8cHsTqluLQns223dMNvi2P4wbLm7itjRKOIr7wLrC4l0Hsxng
4uVFaZ/OL2I5UDOx7tST84jwaYnq2X2CgfPAz1NfL7xP+wG398qjB37svMwH
uA9vtUy/jnB/adrixnSv//sPTjl3YmM6It59PyzoWG/PcqCqtbT3WwQinM1l
ayqme/3a/6ZMytSp5xNcvc6nOyUT5rMcaFkoJZGSjvBXkc/EpQEmj/ezMn/O
W72PDS5erK0v8Lfw7/5v87jPM8V/h5ujkbjeLFee9UCg/m7n6f844eo9kz/z
he78tV96nVWWERtCHACgARo9
        "]]}, 
      {RGBColor[0, 1, 0], Opacity[0.5], Point3DBox[CompressedData["
1:eJxTTMoPSmViYGCQA2JmIO6qy5yVIv7BfttMreOqPTwHGMDgg73ZvorYKVr3
7GUOR87fvujlfpg4u5DNpwDhw/vnbmCYv1f3O1z8bu1TpWaTz/vfMH+/qywm
CDenyS17vkrBKftP1RfLKiz54OJphX3Ru9Yc259cqqVwx4gZLn53Ass+kdkP
7K9G2d36nscNF9fdGX/tO/Ph/UxGH5Nd9rLCxW/LeVb6mB/ZXztPctOTTbxw
8YBTP03aj37bH/th25QHb//A3SkaNG3+9cof9osmfGG55/sLLn7xUdgN0eIT
+1Wz2G4eE2WDm7PsOuP/da3n9nfKhXXYnuSEi1vf/fzlZ+cz+8mZLq0+BxHm
i3eeub7N+Yn94cuFFjcTOeDqOUVO1m+7+tW+3n/3nsp8hDkLal5XnXh50/5C
fGXqi+sscPE/q1LZDsh83v9kTRGD3T5EOFzawf0zeccd+w61Dfsn1/2E23vT
o11tS8Vne/7lFxQO/f4HF5+ndHXd/nCmA6fXMR57pI0wRyTopcbp6T+B7pmz
LfkLItw+fPjVtpnx1f7dkU7cF9v54eKfVzGp8Lq/2D/9fkzwrAUI93sfOeI+
6fWl/RPWv/h9/NczhHu+sk4NiWJwuB7Z7dz3hAuu/qzA5c+BVTftW6yPX780
WxguzhMTG/JD9qm9CrO014YziHCw7jQTWGHweH+NZeCnlddew83/xt2889T6
9/vNWnYeNvdmgqsHAGHYKEI=
        "]]}, 
      {RGBColor[1, 0, 0], Opacity[0.5], Point3DBox[CompressedData["
1:eJxTTMoPSmViYGCQA2JmIM51WL/owpSt9tyTv6TzzrhjzwAGH+yzz2SdPMTw
dL/P8+Zt/8qnwcWv9J29PyF/pb29t/wfGYfvcPH/c39a1zLetl82ZXvtzHn3
4OL7fQ6tyDH8ah/Au5DzduteuDiLfYfw9uSH+2+sVT37Je4DXDxmrdkO+Tm3
9v+dx7D71LtT+2Hiay+GiYlKPrAXLGeYu2LTFrj6+cp6X7ua79r/5lyfVy78
Fi7u0KX4M7346/7S+AeXZgZ9hIuX6fz4HMs3xf7E0yMqaWwH4eIX77OebPF6
b/91UubLC3MR6uvcvmrMbH65v0nm+Ud+3idw8UQOp/Avby7tF1+w8Had1EW4
+D25Fb9lO4/a/7O6ltr4CqE+88uz3yIPn9qf2/jRQMX4NNxf+7Nc9Pp2HLWf
JCbs7L6MyQEm3riD42F+Xbt9YHNv6ISsW3Bzgq+EfGFKeLg/30/cvIifGa5e
rLPzx2fjD/vFhVjOKlv9g5ufpy9/Xe/ie/v91kwV6Ysewc2Z3P3P1OL92/0T
46K957Aiwv/cxg8qKx9t3P9QI7zdoOUF3Bxhx7fMetbn939dZfycb9dluPp9
9Vai9zK329fHLJqdUX0Irl724KQGv0vX7DelRE06G3UWrr7W+uSfJ3kP9ifb
fhLiTULEV94Znwk5ekf2338ka3Sy5iVcPH3Hq8Ssnxf2M6/8VOTJfgku/q+y
nLPJ7779l5qfNedDj8DFAYwMIMM=
        "]]}}},
    Axes->True,
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.4},
    DisplayFunction->Identity,
    FaceGridsStyle->Automatic,
    Method->{"DefaultBoundaryStyle" -> Directive[
        GrayLevel[0.3]], "RotationControl" -> "Globe"},
    PlotLabel->FormBox["\"NearestNeighbors\"", TraditionalForm],
    PlotRange->{{-4., 4.}, {-5., 4.}, {0, 1}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic, Automatic},
    ViewPoint->{1.3000000000000003`, -2.3999999999999995`, 2.},
    ViewVertical->{0., 0., 1.}], ",", 
   Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJztvWl4FNX67l1JKkmFVEIxKKCIILoZZJ5Hu1EEFRlEBEFQBIQNMorItIWo
DIIoIIIgo8yEwTCLCN0oMoPMREBoQhgExJYEaCDA4b3IWk+tp9d98YfzfvCc
ffqL259r3+ledz21uuu5a1WRdj2avhNpGEZd2zCiDPFy/Hf/mdffus3OX0O9
x3nu/rsNuAW4CbgBeMin50HJi4yv5T85c2I2D0jetmfMW9/fGi30DT0PePQ8
CHgIcMOr5ybgFuA24A7i2fOWG/jCuQW4CbgBuPCF86Dkel9yA184F75wHgQ8
BLjwhXMTcAtwG3AHcb/4p94Xzi3ATcANwIUvnAcl1/viAF84D3j0PAh4CHDh
C+cm4BbgNuAO4tnzZgNfOLcANwE3ABe+cB6UXO+LDXzhPODR8yDgIcCFL5yb
gFuA24A7iGfPmwV84dwC3ATcAFz4wnlQcr0vFvCF84BHz4OAhwAXvnBuAm4B
bgPuIJ49b6b/84/z9Rx/dgLzhXMLcBNwA3DhC+dByVfPe9up0OYb5osJfOE8
4NHzIOAhwIUvnJuAW4DbgDuI+8X8NfthWNukfFOYL5xbgJuAG4ALXzgPSh53
bcD8yrNmMF8M7ruh5wGPngclv9rj0uP1y4xnvnAufOHcBNwC3AbcQdwv5klf
L5xbgJuAG4ALXzgPSq76FZB8y0vzByevGct84Tzg0fOg5Pp6CflSjJMbnrkw
g/nCuQm4BbgNuIO4X8yH3hfOLcBNwA3AhS+cByXX+xIEvnAe8Oh5UHK9L0Hg
C+cm4BbgNuAO4n7xufONTa710tdfM184twA3ATcAF74EfC2fSs2/xprLfAn4
ntu/o9Z345YwXwI+a2Lm+5dvpDBfAr6qN7pV9B1aynwJ+D45+J+Vxc+sYb4E
fD9NquFsnb6B+RLwfZi02Pns8YPMl4Dv8uxqFR55+ijzhXMLcBtwB3G/+GQD
83zfZEizOXx9YdwC3ATcAFyuL8b6fX/O7u4sZb4YxuSivr4/bVjJ1xdjZt/T
q2v3Wc3XF6NzlZTLCyauYb4YxkJP+4Lph37i64vRdHGX3yce38TXF2PQ17nX
n3n/KPPFMG78vqtHTe8Jvr4wbgFuA+4g7hefY3iTiXOCZeYyXzi3ADcBNwCX
9eJpXvaZJ3O9vozXi6fS4JxXO8StZr4EPHpfAh69LwGPOv+yXjyZ5TcGKw/e
x+vF86/M2juSjp7l9eJ5e1hUmxfSzvN6YdwC3AbcQdwv3q++Xji3ADcBNwCX
64tnt7Pr2uFzvF6CniVtp+8oM2UVX1+AL0HgS9DzZIeLtXuf3MLXF0+bhJgi
RT/az9cXz5hfB2d1O/YHX1+AL5xbgNuAO4j7xfv681bx75o7Y5kvnFuAm4Ab
gMvvY4zL72Oe9UcWLujScDLzJeQZHzr91JnxC5gvIea7/D7meWz4glJjkw8w
X0Ke5Y8/2a5U0QDzJeTJ//6Tl59pf4H5wrkJuAW4DbiDuF/8fb0vnFuAm4Ab
gMv1xav3xfB+8/b522MnTuLrizfw0bWGib2T+frirdc6X1PPLzP5+uJdVOZy
3919D/H1xfvy1Xw738t3gvliePW+cG4CbgFuA+4g7hd/R+8L5xbgJuAG4PL3
PvDF9OrrxfRWXvnhgGqz+Pcx0zvl837XW8fNY76Y3o5ZL/cbt/M35ovpLX7s
uYbNnk1jvpjAF85NwC3AbcAdxP1CT+8L5xbgJuAG4PL6GPDFAr5Y3mrLW115
evUS5ovl/ffBQzfyDZjNfLG8Saf6pSYP5L5Y3haHLw9fXIn7YgFfODcBtwC3
AXcQ94v/n94Xzi3ATcANwOX1ZOCLDXyxgS828MUGvtjAFxv4wrkJuAW4DbiD
uF/8d70vnFuAm4AbgMv+C/DFAb44wBcH+OIAXxzgiwN84dwE3ALcBtxBPHve
8vqffzVi4PQr/DoM5xbgJuAG4NRHVjn1kTNrP17lpxX8uuV/Xx9Z7wvnFuAm
4Abg1EfW+5Ib+PLf10fW+8K5BbgJuAE49ZH1vjjAl/++PrLeF84twE3ADcCp
j6z3xQa+/Pf1kfW+cG4BbgJuAE59ZL0vFvDlv6+P3Lr74E1pf05lvnBuAW4C
bgBOfWSVUx/5h423rHHvzWS+/Pf1kQc3OHakfbnZzBfOLcBNwA3AqY+scuoj
/3r8P80Odl7AfDG474aeUx+Z+S75vrb+wnXe+4b5wjn1kVVuAm4BbgPuIO4X
86SvF84twE3ADcCpj6yvl5BP9Yv6yP7nnz1wc8A45gvn1EdW+b37yM78Zf2M
yDHMF85NwC3AbcAdxP1iPvS+cG4BbgJuAE59ZL0vQeBLEPjCOfWR9b7gPrLe
F85NwC3AbcAdxP3ic8+eH3jprRYnmC+cW4CbgBuAUx95ZIHRyZ/cTGW+BHxf
tx361SvBPcyXgC/npn/vH9xkK/Ml4NuR8WzVLk9sYb4EfG/ajwdK1t3MfAn4
1k+7WuDlb35mvgR81RfPGVy9z0rmS8C3xrvr/XWeFOYL5xbgNuAO4n7xyUYM
3dZ2ap50vr4wbgFuAm4ATn3kDs9PeHRp3FHmi2HMOtO0QM1i+5gvhrG986T0
Jtt38vXFWDTw8J6pGzczXwzjsxlP/vpMX96vNIwia4x+tyf+wtcXY1OTsutO
jFnL1xfj+fQWy955YxXzhXMLcBtwB3G/+Byf5X/1Qo1FJ3m9MG4BbgJuAE59
5A9Wb23bbupvzJeAZ3nLYW9e+GE3rxeP3peAR+9LwKPOP/WR+zza69HIwj8x
XwKeHeVaRZTrPJv5EvCM/K75oR5Z45gvnFuA24A7iPvF+9XXC+cW4CbgBuDU
R+459vsXi3U9zNcXz3cV+9RfOoKfx4LAlyDwJejp/Ev3HcdLcF+CHl+x4z3S
UngeJuh5bNy22RWCYTkl4AvnFuA24A7ifvG+2pzdWrHdE+eYL5xbgJuAG4BT
H1nl1Efu0epmvzyrzjBfQp5St3+d2OuzE8yXEPOd+sNZx+fP+3v9TuZLyPPY
oRmHo5pxX0Ke47k2D3jvk7DvY4ybgFuA24A7iPvF39f7wrkFuAm4ATj1kfW+
GN53N7//Z5/HzjJfDO/EqzfnNJrHfTG8g3eUW7/xxVN8ffHWKlf4elrCbuaL
4Z07q9VrjfLw85jh1fvCuQm4BbgNuIO4X/wdvS+cW4CbgBuAUx9Z74vp1deL
6X3r8aHmB6lHmS+m94uFR/qm1j3JfDG9Zdt8UuyPDtuYL6b3B2/NXCe//575
YgJfODcBtwC3AXcQ9ws9vS+cW4CbgBuAUx9Z74sFfLG8DRe/4ttY9zjzxfIO
vVTnwO0B/DxmeRP7F5w6rPavzBfLO3v+lRVXMtYyXyzgC+cm4BbgNuAO4n7x
/9P7wrkFuAm4ATj1kfW+2MAXG/hiA19s4IsNfLGBL5ybgFuA24A7iPvFf9f7
wrkFuAm4ATj1kfW+OMAXB/jiAF8c4IsDfHGAL5ybgFuA24A7iGfPW17/B79W
eXNZ7/PMF84twE3ADcCpj6xy6iPneajw09aJP5gvef2rGkw+UDTpAvOFc+oj
qzwIeAhw6iOr3ATcAtwG3EE8e95yA184twA3ATcApz6y3pfcwJfcwBfOqY+s
94XzEODUR9b7wrkFuA24g7hf/FPvC+cW4CbgBuDUR9b74gBfHOAL59RH1vvC
eQhw6iPrfeHcAtwG3EE8e95s4AvnFuAm4Abg1EfW+2IDX2zgC+fUR9b7wnkI
cOoj633h3ALcBtxBPHveLOAL5xbgJuAG4NRH1vtiAV8s4Avn1EfW+8J5CHDq
I+t94dwC3AbcQTx73kx/5Vf3nvZ2CvtdybgFuAm4ATj1kVVOfeTLB7v1+LUV
98UEvnBOfWS9L5yHAKc+st4Xzi3AbcAdxP1i/vZPXLt8wv6zzBfOLcBNwA3A
qY+scuojv39sdtKFOvx7ssF9N/Sc+sjMd8mbjx0ys/+f55gvnFMfWeUm4Bbg
NuAO4n4xT/p64dwC3ATcAJz6yPp6CflUv6iPPCHhjwLnr51nvnBOfWSVUx9Z
Xy8hX68m3ptHgueZL5ybgFuA24A7iPvFfOh94dwC3ATcAJz6yHpfgsCXIPCF
c+oj630JAl+CwBfOTcAtwG3AHcT94nOv+1eTXmUi9zBfOLcANwE3AKc+8uSo
Go/+57c9zJc7PvxZ9+SQ7uF95L/2Rc5LzNjHfAn4ug0u+OoXob3Ml4AvMLJ/
4JX9e5kvAd/Izt1rD9u8h/kS8PX+pP7k47d3M18Cvl1z3nyu5LjdzBfOLcBt
wB3E/eKT5S+8+nrFv2cwXzi3ADcBNwCnPvJq/29Ta7VawHwxjCWdq+4pPPQ7
vr4Y0/2WXfqNlcwXw+jRoGXH/i8sY74YRpExw1cl9ljKfLnzv9bdOF/wWArz
xTCerfTH6COyz0595NcGftbWfmQxX18YtwC3AXcQ94vPkdVm/sPrkr7l9cK4
BbgJuAE49ZG7D1j89yFrIa8Xz+qxQ3Mfm5TCfAl49L4EPHpfAh51/qmP/MK5
iZ8srLSY+RLwJI/p+sXCnhOZLwFP/VXHcjafM5b5wrkFuA24g7hfvF99vXBu
AW4CbgBOfeQhtX480Kh/MvMl6PFfGjWkQFPuSxD4EgS+BD2/7V8ZM3s89yXo
eTh/wpo1sxbx9cVzrH7tDumlJjBfgsAXzi3AbcAdxP3iff3T7kc+cKrvrZ+3
fc18CXlG9fm4zZWli5gvIeY79ZF7Dnm37ufR85gvIc+NTxae3lJiNvPln9dH
/qfdjxzZZfympQsnMF8M78hxb87s0mg288XwrtmxqWH5odP4+uKt2qFX3683
zma+GN5F386s3LrfTObLP6+P/E+7H1lfL6Z338dnP1q+bT7zxfSemjypQj2H
3yduej/vX7pK41fmMF9Mb8TqNzPzRM9ivvzz+sj/tPuR9b5Y3txb85bJX3Ae
88Xylk775Vjy2/w8Znn3+lqmLZ85i/liefP375Y6sg+vl39eH/mfdj+y3hcb
+GIDX2zgiw18+ef1kf9p9yPrfXGALw7wxQG+OMCXf14fuXTq+BubNq9hvnBu
AW4CbgBOfWSVUx951IvBhk1rbGC+5PXXielQs+Lt5cwXzqmPrPIg4CHAqY+s
chNwC3AbcAfx7HnLDXzh3ALcBNwAnPrIel9yA19yA184pz6y3hfOQ4BTH1nv
C+cW4DbgDuJ+8U+9L5xbgJuAG4BTH1nviwN8cYAvnFMfWe8L5yHAqY+s94Vz
C3AbcAfx7HmzgS+cW4CbgBuAUx9Z74sNfLGBL5xTH1nvC+chwKmPrPeFcwtw
G3AH8ex5s4AvnFuAm4AbgFMfWe+LBXyxgC+cUx9Z7wvnIcCpj6z3hXMLcBtw
B/HseTP9RZM3r201xsd84dwC3ATcAJz6yCqnPnKO9Vm1+y76ifliAl84pz6y
3hfOQ4BTH1nvC+cW4DbgDuJ+MX9DK8SVmVJoI/OFcwtwE3ADcOojq5z6yDdG
l7mVo88W5ovBfTf0nPrIzHfJS2xYcsRZ9CPzhXPqI6vcBNwC3AbcQdwv5klf
L5xbgJuAG4BTH1lfLyGf6hf1kav/9Z9HPzy5ivnCOfWRVU59ZH29hHwPNT0+
ISlyBfOFcxNwC3AbcAdxv5gPvS+cW4CbgBuAUx9Z70sQ+BIEvnBOfWS9L0Hg
SxD4wrkJuAW4DbiDuF987n3r6ifXWvgL84VzC3ATcANw6iOXPfZovj867WW+
BHwn8k2ZsXxXKvMl4LNmfZZrxVNHmC8BX9rwjhtfTjrKfAn4mqzJ9/GunEeY
LwFflQH9SveYfIT5EvD5xxTJrPfJPuZLwPfYS11aTWy/i/nCuQW4DbiDuF98
skGJNyslOvuYL5xbgJuAG4BTH3l8Qu9554eF349cuHyDfKlrTzBfDGPI+je6
F8pIY74YxuFyVuEVX/I8v2FcfKhh99cGnWS+GMacJU81fHgT3xfOMJ6tP+/i
2QmpzBfD+OLID8W6P7+f+cK5BbgNuIO4X3yOAmv29PhqKfeFcwtwE3ADcOoj
d0z4u8Wgd4/xevFY5Uf2KLIkjfkS8Oh9CXj0vgQ86vxTHzmuqDO24rbjzJeA
54lc6a0nv7OR+RLwDOz98LQGQ1czXzi3ALcBdxD3i/errxfOLcBNwA3AqY+8
s13Bx0Jbf+fri2ftkcebvtmG+xIEvgSBL0FPxI2xP17pzH0JejasPdsjMxf3
5c5/f79e6rQhG5gvQeAL5xbgNuAO4n7xvnYUShz6doWfmS+cW4CbgBuAUx9Z
5dRHzlsopv6ijduYLyFP+r5LjxUpfJD5EmK+Ux/59YmZzeuOT2W+hDyj0seW
7zqS7zce8rQ42K9A49lh38cYNwG3ALcBdxD3i7+v94VzC3ATcANw6iPrfTG8
v29pvWf6R1uZL4a3cOK18RV/474Y3kWJg4cMfHoP88Xwjnk/a9qaE3y/ccPb
9t3uKzr128t8Mbx6Xzg3AbcAtwF3EPeLv6P3hXMLcBNwA3DqI+t9Mb36ejG9
19tN6/rOKf59zPSuaD83+ZFX9zNfTO/eOU8n7HrtIPPF9M6cMvWJ/1zgvpjA
F85NwC3AbcAdxP1CT+8L5xbgJuAG4NRH1vtiAV8sb/H2hX/caxxmvljek+2L
Xx/enect78zT3MWta/baz3yxvDGXtpy5/BL3xQK+cG4CbgFuA+4g7hf/P70v
nFuAm4AbgFMfWe+LDXyxgS828MUGvtjAFxv4wrkJuAW4DbiDuF/8d70vnFuA
m4AbgFMfWe+LA3xxgC8O8MUBvjjAFwf4wrkJuAW4Dbij50nZ8+/PxZ4jmZA9
nzn1z7Xk45MsoAN4kgnGA55kgPGIX/PpeQjwvyUvvqRMu5ibX6vHyR2uPk8z
TfJd7b8psjOPfK6Z5Oq+cymAi0/BeFL2/CflYO/TAZ83+3d5mL6oL+5jHOAB
oHMRcAvoRAMeBDpXATeBTgTgIaBzG3AD6Fz36Xl2nYb5FaXn8vzDdS5JXm5z
YbNEC/k8OKAfC/SDUkc9PtMl7zp6aZ5nin+pnjfC9OOBfkDqqNwPuA30cwJ9
8eI6Dhif6L/7zxh/pvb5lXyexe+wsPd5dzyvr6Q4PZfnea5zAXAL6EcD/SDQ
uQK4CfQjgH4I6NwC3AA6N3x6LtYvrhMFeAjoZEheNZB7boOlcl9roBMLeFDq
qHVxWvIca7dEf1eL77fGdeIBD0gdlW8B3AY6OQHPfoXpOPrxSdl1ccf/ztFt
6p19iu3HGzbP2d9Twt/n3fEGr68cgAeAzjnALaATA3gQ6FwG3AQ6kYCHgM5N
wA2gk+XT8+y64DpJkXou1wuukyn5ofiSE3/8ha0XYfoxQD8odboWanw2R5J4
XthZ8HctoJ8D6Aekjsp3A24D/USgL15cxwHjc/rv/vO6b3CTiqWaVBLnAbFe
8M8r7tsLe593x/P6Ssqh53K94DpnAbf0OkkxQD8IdDIBN/U6SZFAPwR0sgA3
gM5Nn56L9YLrRAIeAjqXJW+5r1/krF7i+UQm0IkBPCh1yjVfn3p5ibgP5Zzk
bS50mf3Ldr5fOtfJAXhA6iSfPn718Ve+EudhwG2gkwh49itMx9GPTxJ18Td7
vrNYL/g8b5HfL9j7zNbh9RUPeADonAbcAjqxgAeljq2s7xmAm0AnCvAQ0LkB
uAF0bvn0XKwXTCcpQs/lesF1rkjeXTnPm0A/GugHpU7dT2cWrNle7N9+QfJ2
uroI048D+gGpsyb/xprvRMvv7YDbQD8B6IsX13HAeLEu8Pn0e8D7yR7P6igp
Xs/lusB10iXPu/+HeXsmyN9rQD9Wz+W6cN33RMz08w83ENclLgFu6nWSovRc
rgvXfTGP7Tn312JxnrwOuAF0bvv0XKwLXCcC8BDQuSr5sM5P7XrvC/Z9KUwn
GvCg1FGfd39Rcu3xH6YTB3hA6mx5af7g5DXCl6OA20AnAXDx4joOGC+Ofz6f
4n5lrhMAPE3yPvNnrWz7sbx/R3J1/fpb8uZj41sl1RDHf0jyFOPkhmcuiPt3
rgEujh/GkwCXxwMfD7j0l48HXPrFxwMufQkb77/LUzwFH212ZE8Pcd+luE6b
7qlbp+2Y10L8+d1svLhOG6YDuLhOGzYecHGdNmw84tnXae/wxtMWHG78itwv
QvLyxw9ltqu+VPoteO7oxg1HNRP33QclTyy7YPOqc4KnSf7VxO3Tf+rEn/Oe
wp4nniL5mFtXutVqJvPqhuDqc8aFXykeq3efhA+/ShPrUfbnzfBcW/tSRtpw
6S+YB5GrusOPlK/23sM/MR+5v3GAB6RO29JDVhx+XfQ7LkquPqfeAjrRgAel
zlPKc9WvSr5z27+HlG8u+r8m0IkAPCR1Jm5461qXx0SO5bbkfn/rRzdWlDkZ
oCOu36Z7gnOef2dqV77fCPcrSs/lcZjuWVFs5qSfa4n9HC5JPrmor+9PG8Tx
Zup1xPXbMP2g1Pmyb++u+S6KvGi65KeW5r157Rmew+H68Xouj/N0dpz7JV+9
qfbpXTnl/R1AP6eey1c6qIt09lx7cf02i+3nIOqC+yiu36Z7tlub0je34rl6
Vl/i+m1Y3QWkTszkz/qMbiue73BB8qy/mxw9uJbvj8T1o/Vc1kW6Z9f8/bWW
+kQu6IrkW6o1vjmkstgn39TriOu3YfohqWO82yh/VkGxX98tyRdPTNv4ytt8
n0auk3399g7fXbfAtW8nin2BRF1wv6IADwGdDMnnnp3mf+kDsb+QCXRiAQ9K
nZg12z3HU0T9npb8rWKpX35aTawLFtCJBzwgdd5uGX/u7T4ij71F8mk9F4wZ
up33VblOTsDFK8OzYE6K9VzY/SMZnmHHcx6cnTv7+JPXbyO9+rrgPoo+c4an
i7de97xfiFyfqAteXzkAD0idC0Urnc27S+ynfU7y6Dfav7MoKHOzQCcG8KDU
KRx45pl850U9X5Z8arep7SpXO83qgutEAh6SOs99vq5lrd3ifd+UXJlnWRdc
R1y/5VzUBfcrUs9lXXCdTMmbd+uyKFCG9zW4foyey7rI8iyatr3ZLfncvbOS
L212MXf+8uJ+dkuvI67fhukHpE6N2sE1A0yxD9JuyZdse73x1pPi/npbryOu
34bPvyF0Aqs77Tlhi31dRF1kedTnbovrVLGgLvg8i+u3WZ657114uHqU+H4i
rt+y+pLXb3ndBaROeqvGe8uNFfm0s5LHrS40Le9x8T3H0uskxQD9oNRJip/2
deOp4u9lSr6scqETr69jdRGmH6nnsi74fGYBbgAdcf2Wc1EXXCcS8BDQuSz5
xZO9/uz6nLjuZwKdGMCDUie4OKrLpAWiLs5J3vb555Y17y32c7CATg7AA1Kn
ivK8+/2SFzx1qsWtA2I/NxvoJAKe/fr/dJTfBeI6VaT6PHpx/fbO9z5tXSTx
eRbXbyO9T6x55ETTivy+Hl5f8YAHpI43Z6nXu/wpzuenJa+eL/L53JfE7xkL
6MQCHpQ6EzpVXOfZK+4ryZC83cPVXl6UyNcLrhMFeEjqqPN/A3AD6Ijrt5yL
67fcrwg9l+sF17kieZFVWxdPni6vVwP9aD2X60Wsd/2RhQu6NBT9kQuSRzY8
Xmv2F6wuwvTj9FyuF7Fe80RklZutxPe9VMn3lGhX9fvtYh82W68jr9+Gzb8h
dCqbSTX/eIzVxR2ujhfrAp9Pcf021tvxyps1l6wT/y7WBVZH4vptWH0FpE6N
892Mp8aI5wCmS15pctYL52qz4z9MPxboB6VOgzderJ6vmviddUnyzUl1Tr7i
Z8/LC9OPAvohqaPO23XADaCTff02jIt1getEAB4COlclH96qf5lrLcT1QBPo
RAMelDrq8X9R8rwJCU0/HTudrQtcJw7wgNSppqwLRyWf1iJH3xE9+D6lXCcB
8OzXHZ1/Hzx0I98A+X3Jr5+3FHH8ekcFupzzLBfXJQKSJ53ql5o8UBy3dP2g
o6fT8ba/yecnSt7i8OXhiyvJ67mSj148eeXgAfL5mJKr7/8a4OI8yXgS4PK8
x8cDLs9jfDzg8rzExwMu1+Ww8Xd98efyP/9qxMDpV8T3fMrTqhyMd+Vp1fGA
u/K06njAXXladTzilKdVeQhwytN2eTf+zLgEeZ1E8szaj1f5aYXglKedN+OR
qt+WEvX+/3+eVn2flKdV+b3ztOr4OMAfPE+r6kQD/uB5WlUnAvAHz9OqOpSn
ZcebV6vzP8jTqjqUp/WV/6vs9h2in/XgeVr1+KQ8baG4Zc+cbinzCUD//7w8
7e62/sJ13mO5wbB5vneeVj3PxOn5/0aeVtWPBvoPnqdV9SOA/oPnaVUdytNq
6+IB8rSqDuVpF47aPLb7IJHfePA8rVoXlKcd3+vFek8Pl+sU0Pk/L097Yt/M
i6k1xO8jytOq83zvPK1aXzkAf/A8raoTA/iD52lVnUjAHzxPq+pQnlblD56n
VXUoT/vE5TcnLV8ovv8/eJ62RcTo6cnjxD7/lKfdq/zd/3vytM+27hTR6Hne
1+bzfO88rVJfrjytWncPnqdV9WOA/oPnaVX9SD3/38jTqjqUp1X5g+dpVR3K
017ut21U5RGij/Dgedp540vnf2znXHEek7zL3FW1Y9P49dj7z9PahwMNe64Q
Ob39gD94nlbVuXeetnX3wZvS/hTrLOVp1XmmPC17n9k6vL7iAQ8AndOAW0An
FnDK005Q1vcMwE2gEwV4COjcANwAOpSnVTnlaRUdV55W1Q8BHcrTNlfO8ybQ
jwb6lKcdF4we4B8krmdSnvZdXV2E6ccBfcrTnhk9NtfqfPJ7O+A20E8A+uLF
dRwwnvK06nxSnpa9n+zxrI5ceVq1vgJAh/K0Q3cUmb+rmryfBejH6rkrT9vy
473vPjRFXJe4BLip13HlaVV9ytPWeXjVTGea0LkOuAF0KE+rcsrTqjoRgIeA
DuVpe+aZ18FTi31fCtOJBpzytIMbHDvSvpy4nkl5Wu3xH6YTBzjlaf3PP3vg
5gB5fzTgNtBJAFy8uI4DxlOeVp1PytOqOgHAKU+b2GHkjBHx/L5RnKd9/eWm
vd6+Ldd9yZ35y/oZkWI/+WuAU25W4UmAu/K06njAXXladTzgrjytOh5wV56W
jfff5SmeP76umXtpjDhfUJ52W0bPEXk2ievbYLwrT6vqAO7K06rjAXfladXx
iFOe9vCz1ZaP6C32H6M87dzlteoW+/GI9FvwqRvqRBpXRG6N8rSnXrtWZ+lv
Yv8KytPe2jvv+LdesT8h5Wm3d56U3mT7TnGcS96zZYVK7w8VeQzxSvEsGnh4
z9SNm5lfKZ7qUzcPOFpW7FNBedqJL50rW6yl6P9SnladB8rT/vXGwO/OzdjE
fOT+xgFOedppRb3pH7whdChPW2SN0e/2RL4fJteJBpzytF1/6b7jeAmhQ3na
kYvfsTfNlfvlAp0IwClP+0Pc9KGvvyPymZSn3TryiazPDsp9SIAO5WnbjMrq
l+oRxxXlaVW/ovTclafN7BY9Oc8e0YeiPO3MM00L1Cwm998D+rF67srTVnB+
mjj1ovj9SXnacgtKN37tMZFzs/Q6rjytqk95WvU4pzxtpaojJ7xUT+xXZut1
XHlaVV+80kFdpHtGftf8UI8scf6nPG2bs1srtnuCPz+X+0h52o0l+iaeKcrr
gtWXK0+r1h3laSvWKvh51Q/FcUt52ktDU4b3TxM5dkuv48rTqvqUp/102qhy
NUyhQ3naUh17VTs5WKyjpl7HladV9SlP2/bFKsnBkeJ3LuVpqzQ8XbFbH3Hf
kAF0KE87oUOfR5Ymyly0V+iofkUBHgI6lKf9aklS79TRYp9PE+jEAk552sJ1
O3Waul6cHylPm5ZZOi1ffplnAzrxgFOetmcwfkChfiIvR3na2HrlhsRM4Pus
cp2cgItXhmdHyVKtiv1H6FOetsv+Gfud77K/d7nytPq64D5Snjb1owGh7QvF
PoGUp1V1cgBOedq2o2cP2vS2WO8oT3twx7Yni1fh919wnRjAKU/78dYzVxNl
7pfytI3/6rs690viPgUT6EQCTnnaicdia41sI/ISlKdV5tmVp1V1KE+rcsrT
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
8muyyPmIV4qnR4OWHfu/sIz5leJpfLVv5cJjk8V6lP15Mzyr6+cd+O04kfOh
PK06D5Sn/WzzR3atkUuZj9zfOMApT3vkoSofBlsLHcrTBtfdOF/wWArznetE
A0552oP7V8bMHi90KE/75pSnDpaM5/1urhMBOOVpB6Wvz9x2RezrQnnay/vb
fn7gptg3zwA6lKdNPflXxsWPxXFFeVrVryg9d+dpSy5NvpwuOOVpV3Suuqfw
UL4PJ9eP1XNXnvZa59i/LgwX80Z52mI7S5Q8m58/l5Drx+u5K0+rHueUp11b
/JfG/0oQ+2faeh1XnlbVF690UBfpnvqrjuVsPkfsn3Pv/WlVHylP26TIuBwr
qvG6YPXlytOqdUd52uTnkpfd2i7mmfK0T3yTMLdpBXE+sfQ6rjytqk952h8v
X3Z6OOK4pTzt81kLfy7zqtwXHehH6LkrT9t3feDnNcdFbta1P22rK7Orb+a5
Qa5Dedrpr3UbdmK9yOVSnlb1KwrwENChPG2t48P/lTJJ7GNpAp1YwClP+2ly
xzmzj4r6pTztsXc3JN4sJurOAjrxgFOetvvFhJatfhDHLeVpyz2flCt5lzhO
bKCTE3DxyvA0eymzdnxlcTxQnnZG6uXVM6qJ/cTuvT+t6iPlafNf6TQs6SG5
L2L2+Pvfn3bN5PjIJ9qI90l52u+TmiR0/lTU+4PvTzsqqXiX233EOk552jN/
zX33nRviuQ8Pvj/ttIyURS0TxL4xlKdV5tmVp73f/WlVvyL1/H+wP+3b7+1u
/nk3vg8n14/Rc1ee9sK8YWk1aorzAOVp643vOONMlLjvz9LruPK0qj7laT8b
EhxcLknUHeVp9/w2stGv08X9g7Zex5WnZfNvCJ0az+1scroAfy4DztPe7/60
HfvMu5z7SXFeevD9aZu9f7FN7lPiPmLK0xZ4P7Fsub5ynoF+DNCnPO3+3MW+
yP2KeJ+Up51SMqb3Qz+IfR4efH/a+83T3u/+tPebp0X70z407+9DE0uyfTgf
IE/b8erHJR57S9QF5WlfPran38gCYt+qB8/T5t+at0z+gmJdozztvyZu6rGg
qnw+CNC5d552r/K74N552vvdn9Yc3mVReh5WFw+wP+3nf89tNLKg+LyUp530
72sPZXpYXTzA/rQRZVPtxrvFeYbytH3iPzo+66rcZwno3Ht/2vvN097v/rT3
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
PO0360r3uXRD+EV52ufmzty6KkLuYwZ0cgIuXhke79jM2su7i+OK8rRfvP7G
hQs9s78XufK0+rrgPlKettxb4339S/L9Bnl95QCc8rS9CpSIqVpI/DvlaQeU
+bxjhVn8+d1cJwZwytMmPP3p60UeFz5SnvaP3i27rmgl9nMzgU4k4JSnbfv2
qaodZon9DClPq8yzK0+r6lCeVuWUp1X9itRzV55W1aE8bc9COU4PuyGuL5l6
naQYPXflafv1Lm//q6iYN8rTlpjS5JN+PfewuuD6OfTclaeN/Ptyy2S5rzLl
aRsnDjw1I5Pv2xx2PAN98cryjE9cf3TjY2IdoTxti4P9CjSeLb4PU55WXxd8
nilP+/G+NX++FZDv8+74JFZfrjytvi6yPO8PC10fVPOQmGfJvyhV/2zuKmJf
aEuvkxQD9ClPe6WYkdH5I7HeUZ72yowdAwZ+K/b5NPU6SZF67srTqvOZBbgB
dChPq68LrhMJeAjoUJ72y2kLT+QfI64vmUAnBnDK0z4+7fQ3wxuIuqA87bJG
Pcr8Iff/t4BODsApT1u8feEf9xpiXaM8bZtZX65cfFwcJzbQSQQ8+3VHR/1d
QHlaZbwrT6utiyQ+z5SnjUmuV2/CWVYXYfUVDzjlaVtm/Na+XklxfqA87Znv
0hduThP6FtCJBZzytCXONeif6RfnB8rTXl8Yb3QZtp2tF1wnCnDK06rzfwNw
A+hQnlZbF1zHlafV1kWYDuVppxUaVTnzYVYXYfrReu7K0+YtFFN/0UZRF5Sn
jUnferlAFFsvwvTj9NyVpy140vPvq/1FXVCetsHJDas7jBff4229jitPq62L
OzqHTtafu+gMXy9i2XjK06rzSXnatyr9Majlv9l1El5Hrjytfl2I9WY+tdNq
e04c55SnnT+rxBfxDjv+w/RjgT7laRcXHPRBi97i81Kedv/Qo+uvm+x3RJh+
FNCnPK06b9cBN4AO5Wn16wLXiQA8BHQoT7uyUMPfk58U111NoBMNOOVp1eOf
8rQFe5fu1uCC2JfVAjpxgFOeVl0XKE/rbX+i/YhEcT3EBjoJgGe/7uicbF/8
+vDu8vj36+eN8rTF7P4djy2R1wEkN+Yubl2zlzg+KU/7Uc5cS94rJTjlaWMu
bTlz+SWhQ3naft9MnrVmrlhPKU+rvv9rgFNuVj0PAO7K06rjAXfladXxgLvy
tOp4wF15WsH/F8KI5kE=
      "], {{
        {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
          GrayLevel[1], 3], 
         StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1mXfAV+Mbxs8XzykqJa23t7013/aexk9EyZZR2aIQUkZJsipJS0qDBk2F
yqZEFIXI3ntvPz/rc/3uyx/Xe13nfM95zjPu+37u+3nrDh0xcPgeWZb14s+e
8P5A19LFYB9QBpQGe4MikEAOqoBSoKqvK4A6oDzY11zb75cFNUA5UNPXtXyt
Z6u5rdL+ZnV/r5rbL+V+qX8VQSU60UjXKe6pv5Xcp9zvVOO3JtJwFdAYXRmu
677uJ07x3n4pxqX3K7sfRf5+xRT39K16Wbyvd7tx3QbummIMtT2mMh5rsa9r
epzNea4l3Ez9Ai3QjeGHwNXojfCD4Cr0A/AMcDJ6NnwrGISenqLtsm634HnR
nNTht2a6n6Lve3se63HdEG6Yoo/lvU6duG4Nd4TLgfoag+YVdPDzere9xgw3
AM3R9eHrmORSfHxCHvNRx3Na7G9qDefx3KnwAs+f5nkvr4vmtQg+FvRGHwMf
BXqhB8DtUrSpvp0I+qBPSNHnuv/OuZ6T7Xo+a3puNc+a91bwEaAnup/7sJft
9x3+TIXf1vgYw7OaD/gk8AX6RLg3eB59EHwg+BjdBz4VfIk+BR4KvkIPgbuD
59QfuDV4Bt0OPgA8rfWHjwOfo49Vm3z7ELWp+QZd0O1lU6AzurXttqptuJFt
/gDZkW1bz1wGBqIv9bsHuJ2jwWHogfBQzQX6VH3HdtJdNgX6oU+CjweHo4+D
x+h99OgU9t/QPnKibf5kr11rr0tv0M1tqv2u6M6y1RT2IJuUfRbbfv4joA+B
L9baoy+Ch4MB6Au8dq1sD33tO/38LdnhQfCN6hN6ErwZjEM/CT8GxqIfhd8D
16Pfhe8Hp6PXw+eAQ9HD3M656BvgZ8E16GfgJ8BZ6KfgbWA8+nl4FRiGvs/+
O9zf6uk1Pd36OPR4+AyP9+wUfqHn58K3gwvs41d6jcbCF3rtRsLXgiPRE+Fb
PFfTvEYHoq+CL/HajUoRN853rHgJTEbvhF8Ak9Db4WVgMHo5fJvtZybcwDZf
H/4f14+jf4f/1Fyg/4AL/LZWcQeuAnaiK/v51X7mEzAN/TG8D7+9oHgEVwQ7
ZEtwM/Auuil8N8+NcKyowPUWxak81uIiz/kK6+Xu/4XopfB82SJ6odfrMvTj
8BZwE/ppz/MpnvPJ4CT0VK/jFeiV8Fqtgde0rH22DHyzbXIKfIfWEj0nhX91
sb+8obVBv27bG2E7XOu1UDx/FUxB75J9yf7Qi60vR2+Cd2i90S/Cr4AJ6Jfh
NWAoeh28xLZ6j+dkCHp1ir1DtqR95F5wnselPh+DvhPeIFux/T8CLkU/7OfH
uM3B4Hj0BPg6cIL9Qr4z0n3Qep3m+dfzZ6Pvgp8DN6O3wvvmYT9a6w2eN33r
jizWRc8pDnSED4NnpfBN2aHiUjfHq3PcB/lOrRT7kWKm4mcHx5D+KWLmQPvC
IPvO5Sn20FH2L9nAFfBujQ39mn1qiNdXsbSP4576c7TXWnN1pu3qLTAR/abX
5WLPv/p2MHpIinjbHX2m1iHFHqSYpvjWy7FOfvQUWgnLbV5f+fVhXH+iccHV
/UxNuCv4EN0FvgtelIWPLbSWT96fxW93Z7G/6bcF4Dbf029zsliD5X5P99Zl
4bt3gvngV/rxKPxLijZu9bP6fYqfUbtrrB+S7YB7zbdbL5GNgxm+vwzMdl+m
+7cHfL3Y/b3PbW/R3kmO8XQe/V3hPvfj+j24P3wR2INnLoQHgPe5fzTc2LHl
cHgs+AN9NbwKnudxLHDfb7EtKjbOzSJujLENLwI3oj+0bStWbPf90VnElhWe
T717htfu7DzGqjFvBNdwndPPcfAJXsdBzh/ekp3AZ4G35RPu/7fo8+CTwUfo
0+D/Kr6gf0sxT2s8jtUeyxqPTderjJUe81W8n+jDlfBMrpd6fYQHPf+6t973
7nSfF8JLQDX0YuvS6Hvgc8F+6OXWBfRkeIrX5VZ4BSjy89PAnugZ2kNAA/R9
8Bz3bR48DHzK94fDj2kuuP+o/AA0QT+peAJqoNfDT4Ba6MfhBeBP2bT2FPCX
xgQ/AmryzMPwdPA792fBs7Vvaf3gdvxevxB9msT1b7INrSP4G31jHjFcubri
/FjnfuPdTplCtHko+I7751srSb8ZvgB8n4Wtah729/z8TVtPcv+vFHu9cmbl
AFqLWfaZpeYNWeSwyqVV81zP+9/A53js5Whzvv3iB+5fksc6VvHcjswj/7wM
ngvKFmLsmqt9CzFvk7y+N8Cj8siHx8DXgq/RE/OwpZ+zsOfR4Kcs7Ep1wa9Z
vLsIVLX9/JDC779PYZ+THUcUS7VfKzf7yb6kmKP4s9J2/pBjycMe/zL7lPaX
F+FyeczPBtuu2nkELsX9Onnk5LVlL2AruhiulEd+vr/sEWzKIp9R/FnrGKRY
qrio+Kgc5jF/Sz4ov1JetN6+s8RxbLGv7/b1/W5vkdsqzfubtYbypzzqjqp5
jHGj48XPtLsdbpKHVhxW7qS6480sag3FmV/Qp+exX7yKPiKP+uL1LOqXYV4L
xaKDwTZ0I7hVHvGzJVzP/WkI93Sc6ZFHXiebLIKvsI+M8Rxu9HyOsh/JllQf
7cpiz+oIXspin9Ke9bLb1HeV+7WBB9t+FNMG2C8Uz3PwDrpvHnFPdjXI95VD
Klds5nVX/weC3VnUU509dtVx7X1f9ZfyyQe91vKn2bah71LUBbLJe3xf+5bi
vfKTf/dJ7Q1zbbOyXcXSmfbNpX5mjt+Z699luyt8Lf2Nc4ZvU/yu+9pvlJ+r
3ldOqPpFOa3qjm3OK5QHan+ab3/Z4RxMOeEXKfbQz1OMZZbb3+28TvmJvqu+
fg1/lWIf/jJFbrAgi7bnuS8an+ricfD7Kfb8abZd5f/aWxSj/vbeo7ylltdX
+Ul1r3uR/Wu9bbu37VZ1sWrkN9Dd7Juye9Uaqjvk38n+uM4+8lGKWkx1hGz1
FXTdPGrqXbbbmfa/GfZV9Vn5jsaoMSy0P+redD+32PqzFPm25vAjj1ljV6zT
PqLYrnme4HmT/8qnVRcoP1curRzyea6bEuu2wttBMfoF9Q3shb5dYwWN0Btl
j6Ah+gG4DXwg6AOmKr6or46fpbznak/S8+3BGs01vDqPGK7cZr7brOz2tVdW
c+6k/jRDb8vj3X3Q6xR7tAboZzQm91n3VS+Pos0P4Ju4rsj9lfCqPPYs7dfa
J7Vfti1EjqaxdynEvlzW++xO0AK9I48cYG/3WW3WQz8Hd/C4NC+anyre67XP
dyrE3q88oZLnqqOf1X31vwJ8bx596FyI95Q3FnktlD9Udc7wch55wiuKH6C5
10i5QTnnD6oXdB6iGkHnEjqb0rnK1eAg9DjFjBS1j+px1YaD5fspznCaZnHu
Md/1gmqukhTnbm3h6inO5opT1Cx90UfCh6c4i1Ad1DTFWWWLFGduOu/TOeHB
ril07qHzkB7oQ1PUg8pFVUvqnFDnEqptVeeqBtTZiM4TVPOOgM9PcWYyzN/t
5D6o5tWepbr7ddCaOdmdx7mQznN0RqR6UHXrBM+J6kqdP6jG6Y8+1+339bfO
cj91XzZWxjmbxtLC/T8FtEWf5ud11qG6SeeBJVmcDWrtWvLuS/BroAT9KrwZ
lLcNKxZtcnzQHvQBukMeZw5PZHFG0TaPGkF70JFqC31UHjWFcjbVC8vcpvLG
FnnsrTq7036tHEP5Q0/HIp0HKp//EX2829/p7x6TRw6mekT7r/J8nSW29ndL
8thbdZao2mS6fVO+P9X+ovxzin1QebX2zY+z2PdHO7Zc7m994D5cmkeOrdxv
RB55rHLpkY4tF+dxzqk4rDNM5ZDKkyfax+vb3/XuZ35e87DFfVYto9xjgr+l
sasPM+2nyu3nOBYp7umctkEWZ8jKgVUjKDce6PY1/53t700cRxRPuhYiTtR3
nOkJehTCDhQrexfCRts5Z1dsbAV6+dlubqOZY1QXx4hdeTynOKDaQXnvpjy+
2czvqI0Sf0PxRnGng7mx+9q9EPFNfWru625+rr3jmvyoLvyGv1nittWH2rZh
1X3Kq1UDKofZ6v2xxONTH2TzdeyPrTw+zYPiWA3H2D5+vo370tz9k52rnjrC
Mbmm/ail+65ntH9V9x7RzfOg9+WbOmPUee9m91lzpf996H8hPVKcRXdyvNL/
EfT/mPIp9lbtuZ867ulcusjxs79jpmKdzn90pl3BdqJ3dZ6m81udz9dwXC12
DnOd8xmdZ+q8Tmeb7RwrFGN19jje39W5q86ydB6r/xn9//87jsk6W9b/CFSb
3ID+Ef4HcPYfuA==
             "]], Polygon3DBox[CompressedData["
1:eJwtmXfc11Mbx8+Nc6yWhqJ1N++GJiEZiYhoEzITDZU07BHKVsnOygiPvVdG
Q1RGKsnIJnuvx34+7+f6/PF53Z/f9+zrXOdad7Phxw8av0FKaUFFShvp744l
pbf0902hm/glOaUx4qOFC8UPKNFGnwPFXxc6aWxHYbX4TGFT8U2ES8S3c/+1
QhfxDzXHVPGzhU/EW+vbu+LrhN7iB3v9t4VDxP9TYi7mvEf8G425Sm1XCl+L
71li7DvC7uKf6tts8cs8/2El5qL9cPGjSnDGDBfv6d/02UX8J425Vvwa4Ufx
zfVtifjzwibiL+bYO2d4XvwIfftE/FPhSPF9hFfEXxWK+Er1uVT8Er6J/yCc
L36B5/9CuEL8cuFz8aYa86T4U0KleDvhffH3PF9XZCj+gdBJfC9hjfgbwr7i
OwvLxJf7PJwP/pLlM1JYL/6ZcJz4NiXGMkdb8bXaw3TxacLr4v1LrMWaA8Q/
yrF3zvCB+DB9+ziFDA7lvnLoCjpzl3h9fXtc/Amhgfe73vLaQ7yj5+eM7cV3
tTyZs4f4Z5rjHPFzLZ+GJeZCRo3Ed/L6Hwk7iNcRHkuxZl3rA/fFHOvF3xVm
ic/kzn0f3PXVwveczfsfJUwXX6I52kr32giLSujDI2p7VKgm/pzQRG2NhafF
F2rM8WqbYP2YKxwufoRwm3jNEmPZYy1ko29Hi49ARuLzc/BjhKfF66nPAvGF
wpZ+P+g2Z3hP/BlhfIo1nxV/WBieYs5HxK/nDaTYww3ib2qOSu21mfCW+KtC
Q/FGwgrrG7q7wveBvM6yvrPeGuEM8TPROfF7hdPET/V9v6wxW1fEnK+Iz9O3
U9R2Mm9efFmOvoxZLt5K2F68m9Bc/K8c531O+FP8yRxrseZj4jfmkA0yus76
gL4vtX7Nsfw4/9UePy6FjJ4S30B9FosvEirEr9C3sbwF4TLbi6/Ev0xhf7iv
F1LYAO77qxy2hzf7Jbrj+ZnjSvFpOXRnJPZA/FbhQPGh/t2ixFtc7vc91/oy
3vfzqPczzuflfraRLNtbnp29nxdT2NO+tg+8of1K3M+MFDZnlfj9wlEpdOIB
20vWfzmFvT0vh26iH+eKb1FC9txBbWxZDtt1se/rrRxvZ4bvn/eJ7Zrt9zXb
+seaM3PYF2THnjuIz/B+jmRO2ztksczvGf+z1L+7i28kPJzizWF/zxG+Fv+G
/YrfIfwj/q9wp/hE4Xfx//ImxM/0fTLmLPH9S9g+bBD28pgSc9GOP/iVN8Xb
E35GV0voAnOcJj5N2Fh3UYSzPf9f6Krbj/L+6I+/2Vv41vs9toR/ZG/scZb4
5d7vH+iU+GXCBpp7Q2G2+LXIQDwLc8QnuL1CGCd+ZYm+9LlK/ALhN58f/zu2
RN8k9BGvLjzr91VDfLz3wxj8wb1CbfWtI9wnPtnzs+YJ9M0xHhn9lmN/9dRW
1+uvzuE7sNevif+RYy3G/C7+jnBeCh/zpv3Hz+I/CQeJ31/C128mPFDC//yg
tu+t39gPdPEidCqH/DZzfDDL74G+3wlV4oOFH1PMgf/6zuvjv7D379sf821d
DvnSlzGc92HPv7nwiPiL2ATxWsLSEv7/lxRnwP8RH30h/rkwSPxE/0aHTioR
38D5Rvz0aAnZIcPHLN971Xaf5TWmhO9/3+d50vLeUniqhD/n7n4VRoivyCF7
/N3L4qdbvuzxDOvvr77v6eJTvX++oc/0z9anU3hbOXwP9uDvHP2L9ZH58L+r
1LY6hb/Gf8NfF3YT71WCE1/g74eWuGvkO0T8ZP9mj6zXqkRfxjT3+g+IP8gb
z6G/+CZ81GYl7PlDKWzEhuJbeT8rU/jLxt4P37YWb1PibaO/v2i+j3P4JnzU
LeiG7QFv9nxkUcJWYjNblrDfxGbz/ftoyxMZEv/hv+5PsWfktSSHrl7o+XkP
3C19/nR8hL3DnhOvXOr3ynubUSI+4ryvpYj3JlufkdmUEvE1Y5mDeL2Of7+Q
Ir5A34ltiJm/Fd+0hOxe8fm/sL7wZvFn6Osftk+TxK/2b+zbNSXs4Z+2V+hz
KuFLF/p+sNfEyot9HxeXeIu8SezPzdYfbOgtvv+NbO+m2H5t4nb08wbrI2Nu
LOF/p9l+EP9z36y9yPc7qoQv+Mf3x3mfsf1BXzYW7ha/J4V95/6IRdf7/eD/
kDUyxz7OK7EX9nS7+K3C357/NvGbSth/vs0toT//+Df+6TrLiz7XW17oMjpb
Yf1cZHk1KeHf/nZ//BX+iL1iE35zfEAsdDpziPcQmvFWhJ3tn4mXiNmIb0cK
B6WIP0Zw3hycmGQ34idkiOyERjniX/ofnCLfO0foLb6X+x+Xo40+o8R3EXbm
7Qs7idcTqsRbo8/EhsJ+4vuzZ/E69OFtur2T0ES8qdBZvKbQUryFUN3jiV8P
FU4WPytHrHKY5+M3c/dLEb+wPnPXZw3xB3PEdmMtL+K9YZ6PeO2kHJxvk3PE
08gOGRIvniHsIb4n34iPhLopzlDb8d+h3s+14pM8/yHCBMeDQy0v8oltc5y1
UtiO2FDYyfIbKj5F2F28l3Ci99c3hQw5/yBhX/F9hP5ej999vf/DLQ/6DxNv
LzROIeNtvB59GTOYWEzYLkX83cT6sjdv1fe7l39z/3uI98rBe7s/98ldt7I8
7sgRTx4p3Cl+dw5OzHeP+AChJ7qEToif4N+ceaL4KTnOjsxPxXZ6PHOej6x9
H/Q5GF11f8YfgC4LDZJ1WnxcjrVYYzy66N+7IkN0VWiUQkZtxLsIbcTbCl19
35wNnawlvic6n0Lnd0f2OWSFjPb2eQaKD/B65F/E9uOsH91yzN1O2N7vpz13
4/ka+3c7v8fuOXh7v68hQmfxLj5vfe+3yvreIsdc9K+0vDulGDPQ77eP9Wes
eL8cnG99c+Sjk8Unpcgfd8ixVmfr6yJ0Et0UFuSwP129nx19H/Cuvp9Dcuhi
X+s3+kS+t4PlRf7B2+3v+yUeY27WoL7QM4ctQP41LD/eS3ffT9scczFna6/X
w/czzPrT3/dBvjHav1nzWOtDxxQyQh87WV4d/V7au72D9YP7wVY2tHyRNxwd
ail+VY7ckxzocvHncuSrx1pe5D/sBR0hP6KeRK3gBGFpjnya2gk26z6/H9om
+D1hHwZ5PO/lGMuPNz9cfFaOscxxqfjNOdZmDzf5fQ1OMQf2hfiE2IecnHga
+4HsdvF85H/k6vibV61v2FbeWIMc9pW207zf461P2Bfs30q347NWWT6szR7I
z7GvQ/z7VL/XAdaHMTnyyYHeL/J8yfKYmCK+nePzMAf1APxHnRQ2mvfarIRv
JSZp7vgSviRFvYv64lby7Q3s37cvETsSL1JPquffxATkwwuF+u5PPWiZx1Pz
eKlEPQN70dr6SPyypeP7OY5/6jt+J555xu18e7ZEvYm5mfOFEvsnFiaGJT4g
X6V2Sc2UfLKr4xX2uG2J+gC1Vmp65Nt3E3M4XxwtPl+oJl7d9SryYfoypp/j
GdroQ7xCPkouWNvxKPlQQ5+X/OzxErkR/Z8Qv7BEbkSOdKfjx82dz5HfUp+k
1kqNt7vjo2rOr65x/MtaW3i/A0vkUp95f2ttn6akyB/J76hNUv8b4vuDf2h5
NMthO7gT6kvUQyb6veGP7vD7owZDfY762STrF/US/F032xf8H/W9qSliBOpt
1Dt5O7yh28UX56j9UAOi3jXU+6FGSX6LPa1MEbNhL1d4P6xJvkx+11pnb+V8
sJfjU2qi5FPk+3Wdn1MfeND3w7eHSuTzyAqZUf8g30ZW2NR1tkcnWn7UF6kH
dtHYzsLaEvk7e0HG1H8HWp+o4ZPPzvd8tFOvnOj7IZ8lX6DeQKxPDk19gngF
W43NHuz3S256tu3dPOt7fecD6Gdj1yPRJ+wbtgh/jb3uk4PzrXcO/WvkeiP5
eQd92zGFT2iXw18SG/RM4f9ec3/WWFmi3tFCvLlwUQn/wPy72f4sL6GLtd2+
yvuj5rva8m9ZEXNQL+nn9Tkz8dm+9k98w79SD0U3Rltf8F/Yiirv94gcsSYx
zmE56g3Ua5sKz5eIB3pYnsQPb5Roq/T9TdW3A2wPiVcXu539LihRX9na9oX/
p/D/myaef02J+ipjmQN/cVeJWnGl6x1N9a12Chtb3eujO508Hvl2qIiaJfVk
4jVigW19Huxlu4qoqWPfyEeIJ4mfRth/EDuTYxCf7JpjLHOQ33SxPiHPjjnq
79irGj4f+VkN2zfyMeqDNd1Ovkb8TSzz/5jI8qlhe4V8+X8Xa7MH/Cf2uaoi
3iT1Fuo1vM2Wfm/Em8RzxGD4Q+JJYgViMOKBZrYfxNjEL8SPtHWw/lIvp7bb
zv6jj8cTcxCfvo2Nr4g3Sr2efI14kDWJb9H3Kq+PPPBP/K+iyv4EfeV/cx2s
77MsX3IU6t38P216ivoX9YH/ARaAWKg=
             "]]}],
          Lighting->{{"Ambient", 
             RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
            "Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 0, 2}]}}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
          GrayLevel[1], 3], 
         StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNmXf8l2MXx3938b1uZCcRpTIys5IRkfbQ0PJraQ9pa6tUyipUyEpkPvaI
bB4rIyXrkUjDr0VpGWU878/rfLz443w/577v677u6zrXuc451+dbudvAVgNK
FRUVnc9PabBDVlRUjDRG2qSiovvA1uAlyDz09uAP4Ebka+RwrseCR4DHI8PR
TwTrIHPQLwAvRh5FbwVWRq5EPxLsn9Mv370MPJ3rq7hfU+25Ppv7bcFDuB7D
/cPABlzX5H5j8Ciux3G/Gng+Mhn9QrAJz86kzUXgIKQYfaAQOQe9E7gb7S6n
fQKPRcajn6B5FYqKRqLvh14VGYZ+NHgQMhq9fIpx3ox+mr87C722+kMeRu8P
nonM8FzqI/eg1wMbI3PRG4GVkKHoVVLY8AbPUfO93t9qidyL3gz8lbH1Q98F
Hsj1IPRyYFPkNvQm4MnIBI9N96eiXwRORB5Ev1pzYv4dsMNQcA3Xu6GvBdch
u6NvBMvx7DT0s8GJ4FXIYGSI3kMmIROQQX420NfjkZ5IL2Q4spy+SoErwL3p
6xj0MuAErp9kPJPA/bmuxv39wD2Qo9Fz8ApwCnK1ZTIyDPmJdxK4LcU4hvrZ
2VzfRZ9npWivturjIfrqAT4M9kLOQ+8LlkeORS9rP2lsm1yKtEXvAo5GOqKP
0Hv0ezf9nwvW5roG9+uADyDd0R8E+4NXImMtY+TbHuMwj3MUMhLpo3Ego31v
BNLbz2THccgA93e5r9W2n/sdyzheYzxjwIORweiHprDt6+jjwa34ykD0LeAm
ZID2LdgFbI5cipxKu+vAGmBHsCnSCdmb69vBFmBn32uG9EC6IxfLt7Loq7Pb
XwuekiJuzHCsWM73eqNvBrv6my2Qdjx7DGwL/lwIf94BtgS7ZdF2ZyHm9RvY
kHZT7Oc1sXVr2Q38jmftub8SLClE/FpbiDE18xibZDG3Dr7XyfPUt1r5ey08
tuZ+p7nntp2+RoHbwJ+QPtYLjg+7p3i/le1yhvev/HBP5Ar0PVK8O9J2+Brp
hf4j2NM2bZ1FjJ2psSqOIs+iX6HYgzyHPgqsK/9GbwBWQIagVwRraT84FmkM
d3pNOyH3u887kHfQbwdvRd5GvwXsjTyF3ssx6ibHHMXDa9CrO77NRh/ob2mc
53g8tzj2zkIWoc8EO3i/dAaPsR2O035PYc+yKdb0Vs9F853nOfZ2nOwHdnes
6Oa4OtHfVVy90bG0pWOy8lRPx7oeYFeP7W/9Aa0x2Bd5CL1Pirhxg/e1xvw4
erHtNsvtlcumO4ZPR15En5YiJkzLIscNQ15BHwp2QZ7w3Ic4XiqODuH6Ge4P
AC9DnvYcm9gf5aPN8OnqtG2Rx7sTHXsbOXY1BOsh56LXBXfw/qnoZ6IfgVRA
rwqegFRErw5OQZqjXwseiRyGfkwe36qN3hQ8FKmKfrjjXlPFHsVjx+Rj88it
DZ1/FQProZ+nvpFGzrkXO5a2Ak91jK3h/NvEOV0xtj56d+V9jRv9ILBlHnWI
5q58dJBz04fINmzzEfgLUt7xfxGynfsfg+8hW9AXpqgrGjnvKwcdgP614lke
sfS2PPLIweibwU8Ug3h3KXgyzypx/zTlPuQi5R9wluP7TPDePNZkLviFxsS7
X2m/IOWcQ7/h3rfIJvmZ7aY6p6LWAL0yeJxz4onOfeWcH3fPY+7KgyOcT5Ub
ZM+zwFP8bk2vy0muedSP8ml557XfPPffwc+099B/dfysi97BvnSi/aqj17SL
x3m6/eGePHL9HOXuPMYyHvyDvg5EL8qj/8roB9vfuthuByL7om9XntHa2w9n
IN3Qb7avnoR+fB72r26/PSuPOrCG9ePQa9nnq6Af4jx+CHoF7RfkAuV9cDrS
FX0auBeyN/o+4F+Ky+il0EvrGXpBY0T2QT8AHGA/HOz9coL3VDXbSntHfpij
71T8yCMvXw/elEfOvxF8R3Gf9X83xb0xzt+XO7crp/d3raDnGn9Lf/du23CO
fU11ltZAPtwJvMPrcqn9UP7Z0b7d399Q7bDK810J/spY1imfZrHXTuZ+a/B/
PMu8R6Z7DFoXzavYc9FaV7Uv7XQf67OoVTQX1YDX5FHPyw7t86gFZ+dRd2kf
9QRvVYxQnWNfaqf4CI7No+4a73fbyF72NdVKqosm+DuDvCe0N1RnzssjVt6X
R43U13aeZx+7X37hdVTMHFXqn/pLftgKvCWPWm6o28sHWsiOedTDF6JfAp7j
faG4V5LCf74HNyC/K6eDKY8YW7CPVbC//Zdnm2nzNvgWUsT9L1PEENW0ij9q
8xdtPge3gquyiH2rbHd9q1se8V/2VD2vuKoadRPP/qDNFvDbFGukdd+K/In+
aQo/r+i9oH1xOPqeeYxnP/SfHVd1LlC8XZziXKAYu0PfzyJWar5luL8+xXe1
v350LNTzkizGIpvovLgB2ZXFHIQb/awN3z6Fd8/Io/2PWYx1bRb+qv4Unwu0
WQKuyWIc2y2yzeos9prsKdsq7m527H3Pvq092C+PPKj6f2UW9t1i0T79Losa
UWdf5eThtKtD+3ZgQ9UaqtEU6z2f9cZlno/ifHvF6jzsVGJbaP46Ky9XncSz
M2hTH+xh/1ceXGPb7nCfG20n7Yte3guyyZfew+u9B9e57Q+25wbbWM/lJ814
t2sez5fbvp3zyO86C5f4u59nMYbPfL3C9vjJ9t1mX3wCO74EPuW12O7nsucn
bvNGivm+bh9e6furjUudG5UjF9n+37ndw9oD4KMp6pnjGWelPNp//K9xCRd7
nVd4nHelOPvcAy5xf2r7kb+j731h3yqxb5X4erjjgHLHUo9T8xmU4v2nwce0
b9GftC/VdnzY7PmssO8U21dUD78K3gaOc9xWTbXM/qB1U+6u5pz+lX1Ja3i0
/eQoxWevs9a+Sh5nT9UPGVIWfTe/qzVX21f43vvgqynWupZ9YJBrVNXnH9t+
GvN/XNM+Dr6GfOC1+9RrJnuc67U4P499ufZffrjO323kPK56cnaK8+mdKdZA
3/p7TZbYtqobVc+oVlTuUDyeCk7OIz5Pcr7o7vg8l77e4L154HMpzjLzU+yj
Bt5393P9JvcfSsE5qMYTt3Af1y9w/4EUfMjz6FelsOGRrmFUdx1ley5IYe8X
Upyb5qPfncI/l7p/1RKH0v5PcI77vDfFGD7xOF9KYZsXwRkpznQ6cz2ILPR4
nkmx7570/QXoj8huSGn6X60aI8XZ4UbXmYqHm+2Tn3q/TElxrrkWnJziTDfV
8V+1jfJC8xRc3FD3r/pN/IzOLzqPjwBHpjgHiVuYbV+RD4svKuvxLHY+WOJ4
u8j7c5nrjG/kg97/H6Twsfc9r10pajbVTqpRVcupLtW7qqlUS1+Xgk+b5jG/
jH6z89oepaJ/5V/FSOUg+bz2wMsp+Eadf8UtXGN/mGr7v2Ub7nI/WjtxKTqv
iTOZ69ihGKLzmvhPncEVWxbbn7XW79ofJtsnJ3mNFLuu99zFfS30nlrm/ahz
nzg9nQE/9PrKPoqZH3L/TfvMQs9Ftdn+rhPEA+gsfyU4LsV5Vj78hPes9u9J
sjX64BQcizixYtvhaY9NZz3xe6qftdavet317h1Z8LSq2yu5Hp7ivSP+ULyB
uIjbvUYL7G86Fz+CflOK86+4X53Zte/e877QWV5cqHiG51PE4vn23zWONdrX
ykXPpjini9vs7/bvej/qXNZZNbFz4heOjZvM+4jvWuDvat/lKbhi8b2qq1VD
3qWcYm7qG7AoBY/9VyFidTP3/2ch+J0sBW8s7rp0Cl5RnJ54v1WFqAtWg3fm
UQ+rPhf/I36nDLihELzTRvM/bf1d8eHiEMSfi9MWzyBuXHXRBa7Pf6fdZR6b
+Ki+6L94zP09HvUvTns9uK4Q98WDXec6VuegUik4Z81FZ9iurpk1R/FIfxSC
SxQPL25ZfL44N/E2OteIN57pWkjzFe8m7kpcoPirNeaoZYdVHudK20b5UHmx
xHP5vhDviTMTdyZ71EPqZ8HpiWdbATYA2/m+OEHxdC39bT1r6Hfru117o57t
m4L/PCCFDfU/gvhzcemjbcOt5kN3eO062zfEsU/wu9VcJ+t8Ktt2tJ0132LP
pZ7H0SYLTlX7SFyofKyd5zLZ9aFyXF3PV+3F24tz038QGrP+j9grxZmllnOu
+EbZWlyieD/xYOJ79T+CeD9xgDqb6Fwv3l5nkDKu7cXBjqDNPim4OPGH+l9D
XJw4W/3fIQ5W/Ke41gbOp6pR9T+I/lvR/xSH5ZHvVI+Jt9H5UTyJ7utsrjP4
TvO88iXVuuJ56tj3tNbiS1Xnqx5VLVrFOVd1jrg78YF9vGcH2A7iJXQeFF+h
XPm244NqEv2nI05A/+OID9T/QarpPndcUGz5LPunttV91beKn/MdS/X/jjhw
cZL/B8g+fo4=
             "]], Polygon3DBox[CompressedData["
1:eJxNmXnYltMWxt/nlXc/qYQUJZFKKmOTUDRoUApp7mv8qL7mkZKIEpGhQiKl
klmm45xjyhQZj3nmmDPPM5H7Z92uyx/39d7PHtdee++111pv/ZGTek8sFgqF
B7JCoZJ+y/NCoYsKugoniF8lTBGfLKwSX54KhUfUdqNwqfglKuutuuOFS8WX
CRPExwsXi5+nNg+p7YPCOeLnqWys6iqEc8RX5jH2JOFK8bOFAeIDXd9LfS5T
32XC0eJVhZPEZwjbiR8kLBQ/V2guPlRYL36zMFj8co0xRGMNFa7I45sFI+Ny
8dPd/hZhrvgZebSlz2nio/PQRTdhjL+Rr7/1Mz6FbMg4QfxW4UnxJ4T1Kca/
X3yDcKr4heozrhg6WCR+RwpdotN/ifdWWXfVHSUcI36Ryu5W3V3CBeITVHYs
dYwhfnOKurs93xyVHa26npb/YNakujOFNuIj8qijzVDxG1X2guqeF64T/6pU
KMwUP1l4U3yaym4Uv0mYLn6P8Jr4q8wpvsrr4/xc5e9nxZ8RVrB3mqOP5uor
DEDf6FB8lHCq+J0+T48K/xafnUfdiW5P/cuqe8n6maeyMcUYY674FSl0e7/n
a5ribHBGmiFbir1gTx4QP0v4D3OhE/GjNcYRGutwdC5+gsquUd06YYT4TMpU
V+7zjXyspZ/lP8P67CWcKd5DfRao79k+r705g+JXCMeL75eiboHl4/4w9khh
ie/DMPHhvm+L86gbIVwgvk59HlPfTcKaFPdzuOtXix/CHVPdIuFQ8XYp+PnC
4eJr8mjLmGu5iyq7TXW3CqPFWwhzszgzLdGF2kxX22nCOvFaPk+0qSG+lzBf
fJ6wR4rztkR8sfsP8PdSYaB4XcuDjLXFr9OYM4oxx7XiSWWnqW4O9kj8N53B
2eKnCD+L78Md4i4IjcT7pJiLOfp6fNqfKuwuvmuKvrM93wzN0UFzdRROEl/h
+z7M9udBtXlTbd/weWG9k8WnCLuIn6w2ZWo7GJnFz2cNqrve93N2Ctuz3vcd
e3Sl+EphmPjV3s9y6xP9rGUvLf8gYUUWfQa7Pbqf6v1aqrJ7VXefcLH3l7Yr
vN+TUshyne1RF9svbHon8U6cOfoK7bkPPm9DfX7n2F6yxlPEL1GbO7h7tvez
UnDKTrI9aau27ThTtv9ltp/Y14U+n8yxQPwozqz6rhK6iE/LQ5eDeGPyuN/Y
VmzsfPGMNmo7VfhD+z8jha7Wev6l7l/m9+YVlRXEM+FVy0vbqzlDKd4v5L9T
uFz8f8K2altJeBr7J+wiXkv4XLy+xmwo3kjYC93YvvZAZvbf9vg430/ORw/b
V/Q3w+8j9VOx/Xm8bQP8npR7vdiT4eKT8tAFbcaLV+Rh67Evo8RPzIP3tL6x
D4zd2/Zjd6FBMWSuJ16w/JT97vflEPFDebPF++XBD/N6Fno+1nSu7XU/v3fY
2ymej/qJeZyfXn6P2N+qQmPxvYXK7I3tJW/AweKzOIPiR/q7j+9je3Tk9fP2
dfd5aJuHbMh4CHO5nve4h3jrPO4yY/S1frv5/UR/3f3NHegKz8PWc147ix+Z
B+cMd7B+2/k9QN/DvH7WUJbHee3u/Z9u/fWwvOjz2DzWwpvSM4/3+givD331
z8NX6m37U2F5aDPW+m3v9XBeOuZxdzvTRjzPQ7ecx23FdxaaiO8j7CheUzhI
/EChpXgboT5nV/hB+99A3/uKNxP2tH4OFm9jfaJfOGfkGJ+nluIthDrM5fat
2WPrj/H2sz4b58Epa2h9871/Md7XhZLhv1m8wQtSfF9re3VuiveNOtpck0Kf
B3g9nA/ea8Y6wPpt5fOLvM1p6/a02Ve8RR59/xpD/OcUukAnL/Iee72sqal4
7TzW2vwf+tpNvK7X873K9hTfQ6ih76Lr6whbVbclxV1jjl88fmPvz/7WH/vX
2PMdlEddE8tfymMuxtzG+uR7d8YQ316o5+8qnB3vTyufj+utX3zCG1Loh7Gb
+v7slIfsjFHd+qrn9aAf7B1jtbT9aJbHXPWsz12EHThr1t83sslDeduEb0tx
XzirnNnhlq+z7/th9M3Dvu7q88r5hdemTPxDjVlFfDvhPfG3hRriOwlvin+X
oj1jfJ3C3tTydzXx51X2o2T5SXhZ/I0UfZGX9+ALoZp4VeHTFPqu4u8k/oLK
qotvL3zr/aQ/MmA/fxS2ZvHGPMz6U7RlzC9T7E8196/u+1qzGDJW9nlhbVW8
v9vlMXc17+ezGuOHLNbwnPhHKfrvLHwg/m6K/pWF//u9KiG79fGZ3zPKPre+
qMuFn8RfS8Epe9nj8/bR52Pxp/y9jfBkCn0mj/ec5/9Fsv2axf6wX/DfhM3i
jwnFYry/m1K8x+h+B+vr0RR16O8R8ZeEL9X3K+Eh8Y1+v7f6m/3aIv57Fvpl
feiypuX9JMXctPnU+834RZ+XgXncZe50Ld+Px7PwobEvxD/Epw8T44jfIryY
RUx0k+X9WvybLNZDvEU88bjvF/IiO21YD/EGvuPrwgbxu1LESq9g01LEe8Qy
zHG7+H2W5wm3v024Jwsfb7L4MnwU8aft7x2ax13q5PXslsfdbuL782vyXfJ+
Ex8RizHGZdjaFLHec/hE2NoUshFjEX/hXzLXU55/bYq2xHRX+Xx8J/59Fv4S
8rNWYsJ77U9Rxxl+RvzKFLHdI/a3mJ9cADon3lydIpahzUrLA99kfbEf7M1G
6+tCf9N/UQr/dKP3b4n1vcn7e7flJzZ90Os92/NTNj+Fv77B/vRM8XluTzw5
1/qnboP1RzzM3rBHx4if7HrK/o6PH/P5QB/EB3f5PeN9WyzckEVMTf8h9m/w
P4jHP5MNHZKFTf1S/BdhuPgI7lwp4hliJ/IdNVP408RDFwndxVulqKNNa/Ge
KeqIkY5LEd/i/18qnCg+JgUnh1Eh3tXftDlSfGePR45lR/EdUvBzhM8lT8MU
sRjxZf0U/mYN26tMvFIenPuKv0L+A/8Wn/0i8Q4p+jJGR/E9/U2MSPw2PEWs
gjzE4/t6Pay5iXhnz8838cT7KeZDhnfEy1LEnowxRPwIj0dZ2xTxEPHrWV4v
64cTn3dLEW8Sj57u+XZKEfvyXV18b7dnjAYef56/ia/IRyzw+I3FfypFPDqL
O1QK/cJP8X5ukyL2JX4tpIjHF3t/DxQ/IEVuZuY/9E97ZGxk/dF3jvejSgpZ
qc/FD7M+iJfJB20tRXvi4y2l0C/t53o+2pM7mmd9kT8gFiUnSL6B+Id8AjEe
8UKjPHxDfAjipfZ5nG3OeDv7s9TRppP9H3y3NvaPaI9viv/Ywf4Hvtx+9n/a
2t4183hdPB/+W1e/p/grdf2et7C/g8/W0ucR37mhz2cjf+OT7W3/BH+ssf2J
PSwPc9bNw/62sH+EPzPY9hgfp8z2GPtbx+3pD8efw98mv0nukxwW8W0f+6f4
7MQvT6R4e3m/Hk/hr+5o/wd/8i3KsniDef/xP3gb/8jCX+F9x/ehzesp8hvk
Vsl5kv8kn0PugZwW+RbiZ3K143wfeb95677NYn7kgWPz8Qd4b6vaf9ns+4a8
leyf4K8V7T+8Y3kr2/9AHt6n3P7Lb+J/uB6fBv8Z/6dkf4T3A38cXxqfuo79
1798q2L43z+UwvfERv4oXsfnlRwV+Rryccts77r5fo0Xn5BFfonzPy6LsoLv
y0TxSb7fH7p+rPCB+LtChfgY4R3x70rBK3yfPyrFWPTZXAr/mLEm2p6T35rg
b+4j9n6i5flU/PdS2PqRWeQ73i/F3Iz/XinsR4XlIR/2ljBafJTwhucfLF4m
fCxeOUU+dLpQSpFPG2v5trh/P/H+nCfxT0rRd4jlwb7Rd4bt17b+JidTTKGP
AeIDLR/6GpSFDJs93gTr9295TuDtySJ/j/5m2Z59Lf6F0DcLmVgP85Vn0Qf5
2e/J3h/ijbdLIfsA7wf6QpZB3q96KXJHyEt+Ev3yTT7vV7+v8Mn/OD9802a3
FPnw0d5v5CPfOc36bOD3YJL7kw992+dhtPVZz+/BmR6PfBZ7W2798Z7O9HvA
+3pGitw0+anTUvhPcMrwj+b4mxwW+ayJwu1Z5HDHpciPkZujbGqK/19u8zf+
0mqPT4xN/pj/L4i9icF5//GPbvV4/F8zMsV/I+QzyV+SnyS/yf8B/VP4S9TT
B39qlPtTVp7CP6ItffCvyIfj++AD7Z/Cn0M2ZMZ/myIszyJnTn0/96cP+fPt
U5x19Mv/E/yfRK4Mn2KR/QlyreREyXfj37A2cvr4O+S7yT+utr7QJ7nBddZ3
mb/JGQ60fmm7xvok37zG/fGn8E/oS58h3r91no//F/i/4Rrrd4H1Q+4TGci3
9/T4fHe3vpF/lfVHPp/cLv8ftLY+4Cus/2NT+GL4ZNVS+EP0ZQz8Kf4fQ5fL
Xd/K/SlrbvvL+1Tb9vhPQRFJ/Q==
             "]]}],
          Lighting->{{"Ambient", 
             RGBColor[
             0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
            "Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{2, 0, 2}]}}]}, 
        {RGBColor[0.560181, 0.691569, 0.194885], EdgeForm[None], Specularity[
          GrayLevel[1], 3], 
         StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
Cp1Z3ffPQj/rfat4Wzm0z+27NZbXKZ+bjbxHoc+mzoXGKNuuWEt2JpONOfzA
e15nRPtNMYziLvlH+aHJubhTVPQ+bGcbonuEcpXKuSn3KHtb2vbzGdAmGzkK
5TyV31OuUrGf7i+KJ99PkV/6IEWucq1txR+Ur+L53xoX6IHelmK/dfe5UL5X
ufGdPo/d0Kt8pjqjp6fISyuPrdyycnrKwytvppyS8tX75SP3q/hcsfEUny+N
d6O/9SH8j/ug+tL93beVKfJpq31+u9lGaf5b2P4od62cvHLL72r86DUp1jTj
da/kGFW2V/ahi+3Jm17r6dZ6d2qKeF55e+Wot6awY5of+YhS9n2at47oJSly
9fqfhf6PoHU5yftnHbjC8/+yzg/6yxQ5cP2/YK/rtPc8yEfofwfKi8q2XGo7
ttvtyA5o7eRH9rlN7fkVKWxgV9s3zVsvP1eOUfko5RuVY9f/FJTDV95e9x3d
sxQPNHNMoD1zuW2v8o1nZiMnqd8VdyvnNYJyJ3hZCp8v3688w1bvq09TtCVf
pPhic4q7mGy1coNtfQaVP5Q9V55Q+VLlxpRvVF5Odls5t7Xeb7Kxysu1zkb+
c5L3v9ZLucqW9jX6Vgf3YYT7L5sw0e8qN7vc51f7WX5K+c7xKeIKrZ1iLu2l
a7z3lLNVvlC5XOUudI9WPkR3Vf1PZ4/72dt7T3lC+XflEtWWYkPFJv8HyDN3
yg==
             "]], Polygon3DBox[CompressedData["
1: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
z+955D9yDzmIeo1+i/p0g+Mf+njW9sr3cV6rS1EjV3X8gfPbWeKnpqidVzke
faY9ZonP5MzEz/b737ofJt5ucP1L/OP8Vrr/rYivexyZThE/0ePscZJ4U8uH
D1JfHeV4vMXng32Q+5+0/e5t+VbaPq6xv5JTyJeHpNDVJuunvvXHmvQ3tVLI
ikxniJ9WRK4kp5xchHzbnA9q2h97Or42KkI/211/I/9lfiaGt3J+QtanvF5z
r8ecFt6PMWoY8vNhKXS52v7T3PkNmVqI78zjrJfbHuknqQWp/+gvqXeoHahB
qU+od+hv6Imoj+lf6KXp4ekv3hHOF68jzExRz1EfUVNTz9BvUxtRI9E/XuH4
Q4ym/+iT4q6ivvAiuTBFbU89vyFFvqB2Geb8gf0zTs1KfUo9ydyu9odhKWJ9
beF18ZFCI/FL/PxCitx3mvdjfzg5hPuSoUI9fEl4ze+zFjlwVIp6nl6+s+MD
8QJOz06/NM7fw30F/TP9MXsjw4IU9dXFWdxp0C98YPkaZ9Evch+ELlhjNLHR
67PnR+JLU/Ty9ICfYS9F5IaRPl/2p3dv5ff3Eb7QWS8VKot3KSL3kfOuL+K+
gv6JM+I+hPxELiHHUD/Rn/LuF/a34x2/lrpf3V9Y5vF97Z/wZfaHnT5/9qAe
Tili32dCefFj/Myax6bIT9QS1BDk/+kp7h64g5iaoh+lvifG0R+iP3rtdtZv
HedXakDqZ/r1puJNsrgvo19vjq6y6O/pl+il6JnXWd/ojzsQ7l+oZ6kdqa+p
b4kv9G6D7L+dnV8HW5/0t8jS3vbbxfOpR6g3Nlle+nf6V+6rOKvWPt/LHD+o
gcn33Ketc7zjvov7Nu6a+K2R9cczdwxH8n3y6fHiE4hp5HJhrPgYYXIe+fNt
8WnOz+Rr+HTnmzl5vMsaM8mNecTqd8hB4u/mMZd3Zou/IYwUHyGMEh/Hb3Bh
rHibFLGMOxvuV0bmMXc4cPz/0fGOfMH9SWOfF/cby/OYyzsjxBd4/dHCwjzs
6V3xec6n2Pt88QW2x5/z4PxGPUN9A3+PmOx8PM/Pe2C7+m12KXLUkjzqg5l+
3i6+VZhcihrpe+uDb0WmedQ+eehqhuXb7OeZri8+z6O24v1POQvt2SwLG+U+
6X399qrGhlIz5HHf08Tj+Hsvx6e65JAU97n03vTI3F+yHndTxORp4sNTxDJi
CvfLvf3MGvRfQ8gxWfRkzzo+1nf8oz+Y7njVMIv7QfoNakt6GO5/qa8ZYw79
4iw/E/O4D+T8uVvjDq+V8wX+18zyDU7hi82dP5CX3NLS8XeCvx+boP9Ybn0x
f4XjYVOvx/3mR3no7jVhcR79S2PHX+L3XinOer7j4TDHZ2SmP6jlePZlKe7f
yAfIwh3yc+JzU+i+np/ph7mb2iOL+8aDUrzLGgeI359ijDnc56/Lw17nUvOI
73A9hM1Rv27Mwx6Zsz6Pegn/HWd7xB/x5bGun8bY/vDB0axlfxxl/9w1Rayl
ni7x7fptouPDXO9P7fyx7Rv7H2f/XyG+TJhSCptdmsd9Justcbyh3vjU8byG
7XdSKfaYT6xwvJn6f/47w/EGf9npep4al3p6dR66meP4tcHz8aHv3E/Msf5K
zkfEwrXOH3zvXOuvvM97qfML/v1HHrL8TyZktT6JJxPziBd8K9/8Sx72hL9P
sj+ucfxDprX299GOr8THCX4mHozP4+8JDewf5K93HJ/R8TTHk/ccvzblcT5D
ShED0N8nedjyMMeLWY7XyD8jj3jaV/wlx991Pt9Jtp+NPo/JXp/13vTzYvdP
s61v+rPVjv8TbZ/kkzm2zxXOJwPFB2ET1t+AUvxGfnlb6FMKmYY73iH767Yf
zpNecZH1R/1AfF5ofyF/vCze3/r7LY+xBT4P9MvYAJ8X9Tn1LD0Y/cx055eR
1g/6Hiz+SinyGfkKXfWzv5DvGBtif8CfGEMG8hf9IrIiM38/mJLHtw/2+fH3
BcboHyt6fJz9E/38BQKw1bc=
             "]]}],
          Lighting->{{"Ambient", 
             RGBColor[0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
            "Directional", 
             RGBColor[
             0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[
             0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[
             0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
             ImageScaled[{2, 0, 2}]}}]}, 
        {RGBColor[0.922526, 0.385626, 0.209179], EdgeForm[None], Specularity[
          GrayLevel[1], 6], 
         StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
QyPbj2oT1Q6q9epnkROqpjgWvqQQ+bxsUjXCCMcv1YDKDc7NItbfiXTTN9L/
1vlQFuflDtviJ44Fn4I389wTOkPgA0h3nYcU8XFDPuLvRNu21i5bamt7ap9F
7XW3v9PK37qV3z+pc5eitn0GfleKWmZbPuoUvaOlf6+9qwhOKcS57Ogz2cLz
fsRSuievpKgNlWP8liLnV26j2Cd/2LoQtXP5LNZ4f4p8WDVs10LUL4rdyouU
vylfUmxa7d8qz3mN6++lWGdrnx3Vqppbe/DVQtQ+ihdvKjfiet8U+Yb09jj4
PuPXud4/RU74DvydFGvU+nR+lEvvD35ZiP7BPb7Xgec6gY+BM1PUOLNT5O2q
8VXr63zL1+p90sPH4LgUtX8772NXr6VLinqktW3jW+dy34MVi5HTHuK8V3N+
MsW75VNVz29nPDmLnsC8FPneXNtbG++v8uFx8IUpfif/2zmLGlk2rLq1kfPM
M4uhQ8XDNwqx7mZeu77byeu63jqRjf3s3En5W3tfK70nW1L80P4utP77Odfp
Dw4tRL2sPEHzUkx4MAsfq31XPtnFc37QqDUofqhOV+2vml1zu8n3ejm3ebkQ
+dgS51eqO17i/vMpzpr8hvo83VJ8Q/2T6YWor6f5fJW3/SsWq+ZVn6Grz472
Qj0f5cPq26hHcTR8JvgR996Dfwh+IDvLou5Qr6ardJjC98rPya92sn+QPWwp
RKxRjT/ddqh3PpFi3572M/rWdtv5C7Zh9Y6et81Lt2VswwNS1Br9HZtUI28s
RF9LPYp59iEt7UcG2W4Hgp+nqGsGg8/aF/UAKyBV4ClFb0ExQj2BdYXoKSnm
jkxRV34H/pii3vwhxRkc6LMs/fS0rvRO9XAUo3um6C+p97Wcd+0NX1mIObyR
RQ14I9Ib/iL4aIpaWL2pvvZpsmH9VnFfub36KuotqD+gWng0fHmKvoF8u/pg
v3jvxqToK0qHsiXVd9/5LPdyftvTfuwD+Gcp+nJ94H1S9CtUP6rWVg9B9Zrq
d+m2r/WpXHee83DZjPp4qovHpqiRJ4BLUtSwi63bit471aGKv8pJFK8Vayp5
/p/rXKboOcjnP5LinO7kW78WwlcP8DylQ8Ua9SXUD1EdcZznMNR6GG5fqn1U
30B1vXoFI+0/tae7nAeqPlJvRD3GSbYf9TBVp6suU59TcVP9qzq2YfUNZmRR
g8t3yOfKl9RlvAE8Fdyj84es0TdKAtdmUbOr96IaOV8Sz2cl0ZeYA6/q+l17
p3q8HuON8NPAw5Ap8MPBGu4J1CpG3a0+j2pt1ctb7RvVN1Bdr37mOrBMScxB
fU/1d7dn0b8p7x7ORr63CqzD89WKMeejwbOKES9Ugx9RjHVpnmVL4p16d64Y
fjtfjPf8kUUsyHldqutXWye7s/D/w7Pw85qvYpHmol6Beizqj9Xnt5vgpxej
P6O170oxnxXwpp6n+sbVwQyZ6zloHYpHO7PYi93+9vos5q05Kx6N8jvVk1nt
50r3TL87yv0r9ViqIIut/5x1qfVrXxbBD7V+5lpvVdzLUi+oQTF6ZmeAx3s/
ankf13r+9fx+rbekJOxCe6++tPpX6nXP8ZwVx7Ve9WHK+53qXZ9YjN74ZM/n
pGKsWdcVN7XPDcGzi7H/TX1ftii9KE9Q3159Qum+XEnMpbZt/uRixFXlMPfZ
9u/1uIP9uXIbxTjFfD3b2T5feUg3+0/FhQH2jfLb6vno/x3qC2k+Gzyncu41
ykZH2WaUb0xM0V+Vz9F3FEsVbxR31DfT/w4auD/W0Par9cru67tHp71Qvqqz
q/8LlFjfWndP+z3FDvVvm8Avtn+Tv5IfviFFvnqT/Xkf+y71VBXzVR8pj1Xe
qZ5nF89ReYFyJ/1PQX1a5c/KS29x3FH8/dlr7Acf4t8qp+hqP7PIPkF9Rf3/
Rb3rrT536k9Kb1qHdHcKz80EDyxGP1ZxRL3fU3yOtKday+PSY4pcTj29SrYf
/Z9FPk39cPUe1dPW2drl8yVbWgmeUwzfIj3v8B5Kn7Lj/wLjBcur
             "]], Polygon3DBox[CompressedData["
1:eJwtmXf81+Maxr/5fRKf55NKlCikQUhCEik7M+M4jnk4zl6cgbIqIhKRoqh0
SlGkgUqUUhoa0rAqbe1Fe5Drfe7rj+v1vT7Pvp/nucdzf2vffe8N9xxUKpUm
liuVMv3uSaXSJyKThL3ixxWl0nfiS4Tjxd9Q2eviA4TXxT/IS6XDxasIo8Q/
Udk48Y+Ej8VbqM9u8V3C+eKjVDZYfIgwWvx/wqvivYX+4muFKeKfCt+Lb9aY
x4vXFraIv0of8X5CT/HPVFZRvBCmiQ9TWQ/xl4Th4mvyqKPNWvHFKWRDxm/F
P/J4/YVx4n2EV7JYU1/xRlrzj+I/CKeKj0kxN30+ED9HZTvEtwtNxdtbHsZ4
RPxJ4UXxbsLj4iu8P+OFleI/eT2ThZ/Fq2uMReKLhaPEqwjTxKcLh4svSbG3
jLFU/GWhq/jz3o9vhBHiIy3fc0JH8SeErpyd9iATL0MG8R4q6yneiz0Tn62y
SuKVhc/FewrluBhCD/F3hQriB7O/4l2En8skh9BWfJfGmKG6mcJuyzdffJ7v
01ZhtPgY9lT8Ism0Tny9cLH4xxojFz+UOyT+X7XpJP6UcJ/4JWqzj7HcfrDa
7Nfc+4Q3xO9Xm0dV1054QHxqHnW04X78Q2XPqq6L8HfxPwmdxZ8W/pjifrGX
L3Anxd/PQ/Zyvt9z8pCdPfhC/EG37+r52nu8Z4QOKepZS3vhIfGHU8zV2fdj
vvfzEGFBHvrEXAcJY8X7Cnu09t3Cq+I1ithL9vRo8a0qq85dYT/FN2vML8Tn
CBvEpyGD+HvolO/rKnRLaCbeWPiGuyKcIX6o8JX4l5yxeC23X+n5KgnLxZeh
c+JLNecx1HFnxYdqjmHi76Dj4p+q7EjxI9A58bOLGGuV9QX9466OsD7NFiZg
O4QZ4nWKsD1LhbqsTWVjxT8UvhafIwwSf4PzEC9ze2xWSfyAymaJz/b3H/Td
Rrytz7uBytaIrxbqW172doFwbBH3g7YPCn/2+Iz1uZCJj1fZW+JvZ2HvsH/w
ocIk8e15nE0NYUce9o56+vS1fFvEN2dhX7EPjD/L+j3f/av7vi32fr2LjOL7
89h7zuAn8SoqO0m8AfZC/Ms8bDM2+ivxhSl0c4b3bwc2PIs9fVd8XgpbM836
uSqFLcY+LU9hv2lLn24pzoOxPnP/8bZPnM+H2PIUtm6c94P5qaPNItsD5poq
bBJflmKuSZZvZApbMdrnO9b9WQP+Y5/lYb/2i1csYizGPEx8Y4pvfMq6FPd7
iufLxcsVMR8yHiRevgg+xfd/cIq7zHkOwt+kuJvINNX2Fl8yEZ0R76893lsW
OvtaHvYMTtkE8UmuxyZNFh9k+0TZAPHeeeg+NqCX+Id56D5jYA8X5WEbc+vb
S9hc1e0UXhRf7f1mjWvwVXnYesbsI97d9uyA2r8gvt7yTLC9+DGFLMi0M4U9
mWD5tojPdT1ln4ufKDQVP0c4CV3QmBs19ib7g6H2D8z3jviIPDhrGCk+MMXe
ohP9fV+G2n5M9X7Dh9kenFKE7cEG4Y9r2J6sEKoV4a+X+/t08apFcMoqi9cr
QtexfyfY/uF/1gqnidcuom6V9f+CIupoc2ER8cwat28pfkQRvot67GfzImKd
ncJ5RfjzjeytsF3rP0bfm7Iow7+fJSzMwudvt3zEGlvZT/EzhW1ZxCDIg/0k
1qCsifi5RcxFDNLM692TRczF+hp6/az5ZK9vtb/Pd3/kXe319rE9Iz57xfoG
f8v6TLxA/Pam8C/xXq6njPjhPWKSLGIK6hekaDvY9mKEMNzn+Y74CylsNzZ8
uO0/dcN9v9baf42y/qLPo2wPsBeTU/g27OFE7moKjo0cZ/tFPWMQT47Ow9fi
c9/LI54b4fnex5Z4fNpPtz1iPMZYbn8z2uuZZX2g7wjrP/Eytpwzrin+tedD
Z7/Jw1+iu0lYJl5bfU4Vb8h9FK+Xgp8m1Bc/JAWnrDz6qT5niDfOIh6uyJxZ
xMgz8oiXqTvd3+OEqlnYf+KJ5Xn4YnzyCvHvXE/ZEvGdwplZzLGNuhScsiPE
f1ZZXfF6wgFsVQpeXygTX6eyE/29WrwWdzoLGY+1Pzohi3h+nvhxKmsifjYy
eHy+zxL2eXzqmng+1s98db3e6UI1yzNFfKLlQ6bxecSz7A17NITYV+PVFK/l
/Vxk/1nD57M7D07ZnjzOj298MPFZKYWvZYxy4ivz4Mf4POfmIRtzEj9/7/in
mvdjo3BYFjH2EMeT1V0/S3xmHrE0NvPpPM6b8U7weWA/K7s/9vR9+3fKRtre
Uscc9Of9U8vrXeX10baK93+d9481bPJ9YG/rCAu9Xw19fsh7cIqz5YwrpPA/
q7XWNcLL4nV8XviEuuJPqWyl6lYJz+ThH9eJr7e/w//BNzh+78aelcWY+LPO
+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
             "]]}],
          Lighting->{{"Ambient", 
             RGBColor[0.30756835, 0.18676585, 0.147065275]}, {"Directional", 
             RGBColor[0.2306315, 0.0964065, 0.05229475], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             GrayLevel[0.3], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[0.2306315, 0.0964065, 0.05229475], 
             ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}, {}, {}}, {
        {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0L0uw1EYwOHjo61vrRuQViJmrSrVaqsiVgmrMCAGRsbGpHEFuomtvQQm
toYbkNTAztAL4PmH4ZfnJCfnnJw3fXi+czYQQjjQoKL1jGZjIcyxwly0z01e
cY/3POYzL/nJJlvqKBEP4ZELfOU233nKb97E/x7rMMUuM8wqpyXltayCVrSq
otZUUlnrqqiqmja0qDf3pdlmkk3+ePKEX9xij/N8YYwPbOtWff+55gcv+MQj
3nGXDda5zyzLzDClpKY1pUlNaFxjGtVINB9FI3AsDGvof/6/GFgkeQ==
          "]]}, 
        {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0DkvxEEYwOF3FShkaURrP4DIKkTtvtaxuyJKYpU2Crvu+yrp1jdARUul
phMdH4FKlHj+UfzyzGQmk5nJLJTzy6mImNeAQb9m9FEfscR0Q0SVnTzjFC+5
whte8IF3fOa7PvVq/stvttRFtDVGZNjDLs6xj+ssssYSK6pqLVnThja1pW3t
aFd72teBDnWkY51oVVfOW0zOYYGz7GU3s2xlO7/cr5kv/EnerTc9mj/xlvc8
5zXLrHGCp+xghU0ssaiC8ppO/kuTyX7lNK4xjWpEwxrSYOr///8A5SYvjw==

          "]]}, 
        {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0LsuA1AYwPFPiWDgBcRlECsPIMLAXjtxiZEFI5NrUdfWKgb1Btq6q/sb
YBMbTyAVv8bwzy/nDF/O+drHppNTVRExqpVExLIOVKyLOOE7CyzzhS317tjL
b47wlwtsqo5oU7eOnPtZ4hA/OcHahohZdnKJg8xykjnmVVBRZzrXhS51pWvd
6LYyW3e614Me9aRTzZl3zAFm2MFF1nCGH94zXpnFJA/Zxy61Ku3cyHmW/W+Y
X+zhG5v5zB97yfOVOWaV0b72tKsdbWtLaW1qQ+tKaU2rif/9/wHO2Dql
          "]]}, 
        {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0L0uw1EYwOG3/q2P/lsTK7ETBhdAYmTQ3aB2jXAJDDaRcAmITQxcgqrP
qo/WHbQ2MWnxJIZfnrwnOeck70S5UlrPRMSqaknEtd61m4/44Cl7rHE464zj
LKYRM5ziPJdY4pq2tGHe4T4Pec5jNnjJL1Y5WohocZYddtXTj34VuYiM+pQo
q5z6NaBBDSmvVAV9u7fgvTZH2OSn/65Y5wXPeMQ9HrDCbW6qrBXzMhc5x0lO
M+UY2/ZQZJVd+zlhhy019aZXvehZDT2prkc96F53utVN8r//P9rAOMg=
          "]]}, 
        {GrayLevel[0.2], 
         Line3DBox[{1311, 1293, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 
          1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1312, 1315, 1316, 
          1319, 1320, 1323, 1324, 1327, 1328, 1331, 1332, 1335, 1336, 1339, 
          1340, 1342}], 
         Line3DBox[{1344, 1294, 1313, 1314, 1317, 1318, 1321, 1322, 1325, 
          1326, 1329, 1330, 1333, 1334, 1337, 1338, 1341, 1345, 1348, 1349, 
          1352, 1353, 1356, 1357, 1360, 1361, 1364, 1365, 1368, 1369, 1372, 
          1373, 1375}], 
         Line3DBox[{1377, 1310, 1346, 1347, 1350, 1351, 1354, 1355, 1358, 
          1359, 1362, 1363, 1366, 1367, 1370, 1371, 1374, 1378, 1381, 1382, 
          1385, 1386, 1389, 1390, 1393, 1394, 1397, 1398, 1401, 1402, 1405, 
          1406, 1408}], 
         Line3DBox[{1410, 1343, 1379, 1380, 1383, 1384, 1387, 1388, 1391, 
          1392, 1395, 1396, 1399, 1400, 1403, 1404, 1407, 1411, 1414, 1415, 
          1418, 1419, 1422, 1423, 1426, 1427, 1430, 1431, 1434, 1435, 1438, 
          1439, 1441}], 
         Line3DBox[{1443, 1376, 1412, 1413, 1416, 1417, 1420, 1421, 1424, 
          1425, 1428, 1429, 1432, 1433, 1436, 1437, 1440, 1444, 1447, 1448, 
          1451, 1452, 1455, 1456, 1459, 1460, 1463, 1464, 1467, 1468, 1471, 
          1472, 1474}], 
         Line3DBox[{1475, 1409, 1445, 1446, 1449, 1450, 1453, 1454, 1457, 
          1458, 1461, 1462, 1465, 1466, 1469, 1470, 1473, 1476, 1479, 1480, 
          1483, 1484, 1487, 1488, 1491, 1492, 1495, 1496, 1499, 1500, 1503, 
          1504, 1506}], 
         Line3DBox[{1507, 1442, 1477, 1478, 1481, 1482, 1485, 1486, 1489, 
          1490, 1493, 1494, 1497, 1498, 1501, 1502, 1505, 1508, 1509, 1510, 
          1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 
          1522, 1523}], 
         Line3DBox[{154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 
          165, 166, 167, 168, 169, 170}], 
         Line3DBox[{1541, 1572, 1571, 1568, 1567, 1564, 1563, 1560, 1559, 
          1556, 1555, 1552, 1551, 1548, 1547, 1544, 1540, 1539, 1538, 1537, 
          1536, 1535, 1534, 1533, 1532, 1531, 1530, 1529, 1528, 1527, 1526, 
          1524, 1543}], 
         Line3DBox[{1574, 1605, 1604, 1601, 1600, 1597, 1596, 1593, 1592, 
          1589, 1588, 1585, 1584, 1581, 1580, 1577, 1573, 1570, 1569, 1566, 
          1565, 1562, 1561, 1558, 1557, 1554, 1553, 1550, 1549, 1546, 1545, 
          1525, 1576}], 
         Line3DBox[{1607, 1638, 1637, 1634, 1633, 1630, 1629, 1626, 1625, 
          1622, 1621, 1618, 1617, 1614, 1613, 1610, 1606, 1603, 1602, 1599, 
          1598, 1595, 1594, 1591, 1590, 1587, 1586, 1583, 1582, 1579, 1578, 
          1542, 1609}], 
         Line3DBox[{1640, 1671, 1670, 1667, 1666, 1663, 1662, 1659, 1658, 
          1655, 1654, 1651, 1650, 1647, 1646, 1643, 1639, 1636, 1635, 1632, 
          1631, 1628, 1627, 1624, 1623, 1620, 1619, 1616, 1615, 1612, 1611, 
          1575, 1642}], 
         Line3DBox[{1673, 1704, 1703, 1700, 1699, 1696, 1695, 1692, 1691, 
          1688, 1687, 1684, 1683, 1680, 1679, 1676, 1672, 1669, 1668, 1665, 
          1664, 1661, 1660, 1657, 1656, 1653, 1652, 1649, 1648, 1645, 1644, 
          1608, 1675}], 
         Line3DBox[{1706, 1736, 1735, 1732, 1731, 1728, 1727, 1724, 1723, 
          1720, 1719, 1716, 1715, 1712, 1711, 1708, 1705, 1702, 1701, 1698, 
          1697, 1694, 1693, 1690, 1689, 1686, 1685, 1682, 1681, 1678, 1677, 
          1641, 1707}], 
         Line3DBox[{1738, 1674, 1709, 1710, 1713, 1714, 1717, 1718, 1721, 
          1722, 1725, 1726, 1729, 1730, 1733, 1734, 1737, 1739, 1740, 1741, 
          1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 
          1753, 1754}], 
         Line3DBox[{1773, 1755, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 
          1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1777, 1778, 
          1781, 1782, 1785, 1786, 1789, 1790, 1793, 1794, 1797, 1798, 1801, 
          1802, 1804}], 
         Line3DBox[{1806, 1756, 1775, 1776, 1779, 1780, 1783, 1784, 1787, 
          1788, 1791, 1792, 1795, 1796, 1799, 1800, 1803, 1807, 1810, 1811, 
          1814, 1815, 1818, 1819, 1822, 1823, 1826, 1827, 1830, 1831, 1834, 
          1835, 1837}], 
         Line3DBox[{1839, 1772, 1808, 1809, 1812, 1813, 1816, 1817, 1820, 
          1821, 1824, 1825, 1828, 1829, 1832, 1833, 1836, 1840, 1843, 1844, 
          1847, 1848, 1851, 1852, 1855, 1856, 1859, 1860, 1863, 1864, 1867, 
          1868, 1870}], 
         Line3DBox[{1872, 1805, 1841, 1842, 1845, 1846, 1849, 1850, 1853, 
          1854, 1857, 1858, 1861, 1862, 1865, 1866, 1869, 1873, 1876, 1877, 
          1880, 1881, 1884, 1885, 1888, 1889, 1892, 1893, 1896, 1897, 1900, 
          1901, 1903}], 
         Line3DBox[{1905, 1838, 1874, 1875, 1878, 1879, 1882, 1883, 1886, 
          1887, 1890, 1891, 1894, 1895, 1898, 1899, 1902, 1906, 1909, 1910, 
          1913, 1914, 1917, 1918, 1921, 1922, 1925, 1926, 1929, 1930, 1933, 
          1934, 1936}], 
         Line3DBox[{1937, 1871, 1907, 1908, 1911, 1912, 1915, 1916, 1919, 
          1920, 1923, 1924, 1927, 1928, 1931, 1932, 1935, 1938, 1941, 1942, 
          1945, 1946, 1949, 1950, 1953, 1954, 1957, 1958, 1961, 1962, 1965, 
          1966, 1968}], 
         Line3DBox[{1969, 1904, 1939, 1940, 1943, 1944, 1947, 1948, 1951, 
          1952, 1955, 1956, 1959, 1960, 1963, 1964, 1967, 1970, 1971, 1972, 
          1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 
          1984, 1985}], 
         Line3DBox[{477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 
          488, 489, 490, 491, 492, 493}], 
         Line3DBox[{2003, 2034, 2033, 2030, 2029, 2026, 2025, 2022, 2021, 
          2018, 2017, 2014, 2013, 2010, 2009, 2006, 2002, 2001, 2000, 1999, 
          1998, 1997, 1996, 1995, 1994, 1993, 1992, 1991, 1990, 1989, 1988, 
          1986, 2005}], 
         Line3DBox[{2036, 2067, 2066, 2063, 2062, 2059, 2058, 2055, 2054, 
          2051, 2050, 2047, 2046, 2043, 2042, 2039, 2035, 2032, 2031, 2028, 
          2027, 2024, 2023, 2020, 2019, 2016, 2015, 2012, 2011, 2008, 2007, 
          1987, 2038}], 
         Line3DBox[{2069, 2100, 2099, 2096, 2095, 2092, 2091, 2088, 2087, 
          2084, 2083, 2080, 2079, 2076, 2075, 2072, 2068, 2065, 2064, 2061, 
          2060, 2057, 2056, 2053, 2052, 2049, 2048, 2045, 2044, 2041, 2040, 
          2004, 2071}], 
         Line3DBox[{2102, 2133, 2132, 2129, 2128, 2125, 2124, 2121, 2120, 
          2117, 2116, 2113, 2112, 2109, 2108, 2105, 2101, 2098, 2097, 2094, 
          2093, 2090, 2089, 2086, 2085, 2082, 2081, 2078, 2077, 2074, 2073, 
          2037, 2104}], 
         Line3DBox[{2135, 2166, 2165, 2162, 2161, 2158, 2157, 2154, 2153, 
          2150, 2149, 2146, 2145, 2142, 2141, 2138, 2134, 2131, 2130, 2127, 
          2126, 2123, 2122, 2119, 2118, 2115, 2114, 2111, 2110, 2107, 2106, 
          2070, 2137}], 
         Line3DBox[{2168, 2198, 2197, 2194, 2193, 2190, 2189, 2186, 2185, 
          2182, 2181, 2178, 2177, 2174, 2173, 2170, 2167, 2164, 2163, 2160, 
          2159, 2156, 2155, 2152, 2151, 2148, 2147, 2144, 2143, 2140, 2139, 
          2103, 2169}], 
         Line3DBox[{2200, 2136, 2171, 2172, 2175, 2176, 2179, 2180, 2183, 
          2184, 2187, 2188, 2191, 2192, 2195, 2196, 2199, 2201, 2202, 2203, 
          2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 
          2215, 2216}], 
         Line3DBox[{2235, 2217, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 
          2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2236, 2239, 2240, 
          2243, 2244, 2247, 2248, 2251, 2252, 2255, 2256, 2259, 2260, 2263, 
          2264, 2266}], 
         Line3DBox[{2268, 2218, 2237, 2238, 2241, 2242, 2245, 2246, 2249, 
          2250, 2253, 2254, 2257, 2258, 2261, 2262, 2265, 2269, 2272, 2273, 
          2276, 2277, 2280, 2281, 2284, 2285, 2288, 2289, 2292, 2293, 2296, 
          2297, 2299}], 
         Line3DBox[{2301, 2234, 2270, 2271, 2274, 2275, 2278, 2279, 2282, 
          2283, 2286, 2287, 2290, 2291, 2294, 2295, 2298, 2302, 2305, 2306, 
          2309, 2310, 2313, 2314, 2317, 2318, 2321, 2322, 2325, 2326, 2329, 
          2330, 2332}], 
         Line3DBox[{2334, 2267, 2303, 2304, 2307, 2308, 2311, 2312, 2315, 
          2316, 2319, 2320, 2323, 2324, 2327, 2328, 2331, 2335, 2338, 2339, 
          2342, 2343, 2346, 2347, 2350, 2351, 2354, 2355, 2358, 2359, 2362, 
          2363, 2365}], 
         Line3DBox[{2367, 2300, 2336, 2337, 2340, 2341, 2344, 2345, 2348, 
          2349, 2352, 2353, 2356, 2357, 2360, 2361, 2364, 2368, 2371, 2372, 
          2375, 2376, 2379, 2380, 2383, 2384, 2387, 2388, 2391, 2392, 2395, 
          2396, 2398}], 
         Line3DBox[{2399, 2333, 2369, 2370, 2373, 2374, 2377, 2378, 2381, 
          2382, 2385, 2386, 2389, 2390, 2393, 2394, 2397, 2400, 2403, 2404, 
          2407, 2408, 2411, 2412, 2415, 2416, 2419, 2420, 2423, 2424, 2427, 
          2428, 2430}], 
         Line3DBox[{2431, 2366, 2401, 2402, 2405, 2406, 2409, 2410, 2413, 
          2414, 2417, 2418, 2421, 2422, 2425, 2426, 2429, 2432, 2433, 2434, 
          2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 
          2446, 2447}], 
         Line3DBox[{800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 
          811, 812, 813, 814, 815, 816}], 
         Line3DBox[{2465, 2496, 2495, 2492, 2491, 2488, 2487, 2484, 2483, 
          2480, 2479, 2476, 2475, 2472, 2471, 2468, 2464, 2463, 2462, 2461, 
          2460, 2459, 2458, 2457, 2456, 2455, 2454, 2453, 2452, 2451, 2450, 
          2448, 2467}], 
         Line3DBox[{2498, 2529, 2528, 2525, 2524, 2521, 2520, 2517, 2516, 
          2513, 2512, 2509, 2508, 2505, 2504, 2501, 2497, 2494, 2493, 2490, 
          2489, 2486, 2485, 2482, 2481, 2478, 2477, 2474, 2473, 2470, 2469, 
          2449, 2500}], 
         Line3DBox[{2531, 2562, 2561, 2558, 2557, 2554, 2553, 2550, 2549, 
          2546, 2545, 2542, 2541, 2538, 2537, 2534, 2530, 2527, 2526, 2523, 
          2522, 2519, 2518, 2515, 2514, 2511, 2510, 2507, 2506, 2503, 2502, 
          2466, 2533}], 
         Line3DBox[{2564, 2595, 2594, 2591, 2590, 2587, 2586, 2583, 2582, 
          2579, 2578, 2575, 2574, 2571, 2570, 2567, 2563, 2560, 2559, 2556, 
          2555, 2552, 2551, 2548, 2547, 2544, 2543, 2540, 2539, 2536, 2535, 
          2499, 2566}], 
         Line3DBox[{2597, 2628, 2627, 2624, 2623, 2620, 2619, 2616, 2615, 
          2612, 2611, 2608, 2607, 2604, 2603, 2600, 2596, 2593, 2592, 2589, 
          2588, 2585, 2584, 2581, 2580, 2577, 2576, 2573, 2572, 2569, 2568, 
          2532, 2599}], 
         Line3DBox[{2630, 2660, 2659, 2656, 2655, 2652, 2651, 2648, 2647, 
          2644, 2643, 2640, 2639, 2636, 2635, 2632, 2629, 2626, 2625, 2622, 
          2621, 2618, 2617, 2614, 2613, 2610, 2609, 2606, 2605, 2602, 2601, 
          2565, 2631}], 
         Line3DBox[{2662, 2598, 2633, 2634, 2637, 2638, 2641, 2642, 2645, 
          2646, 2649, 2650, 2653, 2654, 2657, 2658, 2661, 2663, 2664, 2665, 
          2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 
          2677, 2678}], 
         Line3DBox[{2697, 2679, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 
          2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2698, 2701, 2702, 
          2705, 2706, 2709, 2710, 2713, 2714, 2717, 2718, 2721, 2722, 2725, 
          2726, 2728}], 
         Line3DBox[{2730, 2680, 2699, 2700, 2703, 2704, 2707, 2708, 2711, 
          2712, 2715, 2716, 2719, 2720, 2723, 2724, 2727, 2731, 2734, 2735, 
          2738, 2739, 2742, 2743, 2746, 2747, 2750, 2751, 2754, 2755, 2758, 
          2759, 2761}], 
         Line3DBox[{2763, 2696, 2732, 2733, 2736, 2737, 2740, 2741, 2744, 
          2745, 2748, 2749, 2752, 2753, 2756, 2757, 2760, 2764, 2767, 2768, 
          2771, 2772, 2775, 2776, 2779, 2780, 2783, 2784, 2787, 2788, 2791, 
          2792, 2794}], 
         Line3DBox[{2796, 2729, 2765, 2766, 2769, 2770, 2773, 2774, 2777, 
          2778, 2781, 2782, 2785, 2786, 2789, 2790, 2793, 2797, 2800, 2801, 
          2804, 2805, 2808, 2809, 2812, 2813, 2816, 2817, 2820, 2821, 2824, 
          2825, 2827}], 
         Line3DBox[{2829, 2762, 2798, 2799, 2802, 2803, 2806, 2807, 2810, 
          2811, 2814, 2815, 2818, 2819, 2822, 2823, 2826, 2830, 2833, 2834, 
          2837, 2838, 2841, 2842, 2845, 2846, 2849, 2850, 2853, 2854, 2857, 
          2858, 2860}], 
         Line3DBox[{2861, 2795, 2831, 2832, 2835, 2836, 2839, 2840, 2843, 
          2844, 2847, 2848, 2851, 2852, 2855, 2856, 2859, 2862, 2865, 2866, 
          2869, 2870, 2873, 2874, 2877, 2878, 2881, 2882, 2885, 2886, 2889, 
          2890, 2892}], 
         Line3DBox[{2893, 2828, 2863, 2864, 2867, 2868, 2871, 2872, 2875, 
          2876, 2879, 2880, 2883, 2884, 2887, 2888, 2891, 2894, 2895, 2896, 
          2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 2906, 2907, 
          2908, 2909}], 
         Line3DBox[{1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 
          1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139}], 
         Line3DBox[{2927, 2958, 2957, 2954, 2953, 2950, 2949, 2946, 2945, 
          2942, 2941, 2938, 2937, 2934, 2933, 2930, 2926, 2925, 2924, 2923, 
          2922, 2921, 2920, 2919, 2918, 2917, 2916, 2915, 2914, 2913, 2912, 
          2910, 2929}], 
         Line3DBox[{2960, 2991, 2990, 2987, 2986, 2983, 2982, 2979, 2978, 
          2975, 2974, 2971, 2970, 2967, 2966, 2963, 2959, 2956, 2955, 2952, 
          2951, 2948, 2947, 2944, 2943, 2940, 2939, 2936, 2935, 2932, 2931, 
          2911, 2962}], 
         Line3DBox[{2993, 3024, 3023, 3020, 3019, 3016, 3015, 3012, 3011, 
          3008, 3007, 3004, 3003, 3000, 2999, 2996, 2992, 2989, 2988, 2985, 
          2984, 2981, 2980, 2977, 2976, 2973, 2972, 2969, 2968, 2965, 2964, 
          2928, 2995}], 
         Line3DBox[{3026, 3057, 3056, 3053, 3052, 3049, 3048, 3045, 3044, 
          3041, 3040, 3037, 3036, 3033, 3032, 3029, 3025, 3022, 3021, 3018, 
          3017, 3014, 3013, 3010, 3009, 3006, 3005, 3002, 3001, 2998, 2997, 
          2961, 3028}], 
         Line3DBox[{3059, 3090, 3089, 3086, 3085, 3082, 3081, 3078, 3077, 
          3074, 3073, 3070, 3069, 3066, 3065, 3062, 3058, 3055, 3054, 3051, 
          3050, 3047, 3046, 3043, 3042, 3039, 3038, 3035, 3034, 3031, 3030, 
          2994, 3061}], 
         Line3DBox[{3092, 3122, 3121, 3118, 3117, 3114, 3113, 3110, 3109, 
          3106, 3105, 3102, 3101, 3098, 3097, 3094, 3091, 3088, 3087, 3084, 
          3083, 3080, 3079, 3076, 3075, 3072, 3071, 3068, 3067, 3064, 3063, 
          3027, 3093}], 
         Line3DBox[{3124, 3060, 3095, 3096, 3099, 3100, 3103, 3104, 3107, 
          3108, 3111, 3112, 3115, 3116, 3119, 3120, 3123, 3125, 3126, 3127, 
          3128, 3129, 3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3138, 
          3139, 3140}]}, 
        {GrayLevel[0.2], 
         Line3DBox[{2, 19, 1295, 36, 1313, 53, 1346, 70, 1379, 87, 1412, 104, 
          1445, 121, 1477, 138, 155, 172, 1526, 189, 1545, 206, 1578, 223, 
          1611, 240, 1644, 257, 1677, 274, 1709, 291, 308}], 
         Line3DBox[{3, 20, 1297, 37, 1317, 54, 1350, 71, 1383, 88, 1416, 105, 
          1449, 122, 1481, 139, 156, 173, 1528, 190, 1549, 207, 1582, 224, 
          1615, 241, 1648, 258, 1681, 275, 1713, 292, 309}], 
         Line3DBox[{4, 21, 1299, 38, 1321, 55, 1354, 72, 1387, 89, 1420, 106, 
          1453, 123, 1485, 140, 157, 174, 1530, 191, 1553, 208, 1586, 225, 
          1619, 242, 1652, 259, 1685, 276, 1717, 293, 310}], 
         Line3DBox[{5, 22, 1301, 39, 1325, 56, 1358, 73, 1391, 90, 1424, 107, 
          1457, 124, 1489, 141, 158, 175, 1532, 192, 1557, 209, 1590, 226, 
          1623, 243, 1656, 260, 1689, 277, 1721, 294, 311}], 
         Line3DBox[{6, 23, 1303, 40, 1329, 57, 1362, 74, 1395, 91, 1428, 108, 
          1461, 125, 1493, 142, 159, 176, 1534, 193, 1561, 210, 1594, 227, 
          1627, 244, 1660, 261, 1693, 278, 1725, 295, 312}], 
         Line3DBox[{7, 24, 1305, 41, 1333, 58, 1366, 75, 1399, 92, 1432, 109, 
          1465, 126, 1497, 143, 160, 177, 1536, 194, 1565, 211, 1598, 228, 
          1631, 245, 1664, 262, 1697, 279, 1729, 296, 313}], 
         Line3DBox[{8, 25, 1307, 42, 1337, 59, 1370, 76, 1403, 93, 1436, 110, 
          1469, 127, 1501, 144, 161, 178, 1538, 195, 1569, 212, 1602, 229, 
          1635, 246, 1668, 263, 1701, 280, 1733, 297, 314}], 
         Line3DBox[{9, 26, 1309, 43, 1341, 60, 1374, 77, 1407, 94, 1440, 111, 
          1473, 128, 1505, 145, 162, 179, 1540, 196, 1573, 213, 1606, 230, 
          1639, 247, 1672, 264, 1705, 281, 1737, 298, 315}], 
         Line3DBox[{10, 27, 1315, 44, 1348, 61, 1381, 78, 1414, 95, 1447, 112,
           1479, 129, 1509, 146, 163, 180, 1547, 197, 1580, 214, 1613, 231, 
          1646, 248, 1679, 265, 1711, 282, 1740, 299, 316}], 
         Line3DBox[{11, 28, 1319, 45, 1352, 62, 1385, 79, 1418, 96, 1451, 113,
           1483, 130, 1511, 147, 164, 181, 1551, 198, 1584, 215, 1617, 232, 
          1650, 249, 1683, 266, 1715, 283, 1742, 300, 317}], 
         Line3DBox[{12, 29, 1323, 46, 1356, 63, 1389, 80, 1422, 97, 1455, 114,
           1487, 131, 1513, 148, 165, 182, 1555, 199, 1588, 216, 1621, 233, 
          1654, 250, 1687, 267, 1719, 284, 1744, 301, 318}], 
         Line3DBox[{13, 30, 1327, 47, 1360, 64, 1393, 81, 1426, 98, 1459, 115,
           1491, 132, 1515, 149, 166, 183, 1559, 200, 1592, 217, 1625, 234, 
          1658, 251, 1691, 268, 1723, 285, 1746, 302, 319}], 
         Line3DBox[{14, 31, 1331, 48, 1364, 65, 1397, 82, 1430, 99, 1463, 116,
           1495, 133, 1517, 150, 167, 184, 1563, 201, 1596, 218, 1629, 235, 
          1662, 252, 1695, 269, 1727, 286, 1748, 303, 320}], 
         Line3DBox[{15, 32, 1335, 49, 1368, 66, 1401, 83, 1434, 100, 1467, 
          117, 1499, 134, 1519, 151, 168, 185, 1567, 202, 1600, 219, 1633, 
          236, 1666, 253, 1699, 270, 1731, 287, 1750, 304, 321}], 
         Line3DBox[{16, 33, 1339, 50, 1372, 67, 1405, 84, 1438, 101, 1471, 
          118, 1503, 135, 1521, 152, 169, 186, 1571, 203, 1604, 220, 1637, 
          237, 1670, 254, 1703, 271, 1735, 288, 1752, 305, 322}], 
         Line3DBox[{325, 342, 1757, 359, 1775, 376, 1808, 393, 1841, 410, 
          1874, 427, 1907, 444, 1939, 461, 478, 495, 1988, 512, 2007, 529, 
          2040, 546, 2073, 563, 2106, 580, 2139, 597, 2171, 614, 631}], 
         Line3DBox[{326, 343, 1759, 360, 1779, 377, 1812, 394, 1845, 411, 
          1878, 428, 1911, 445, 1943, 462, 479, 496, 1990, 513, 2011, 530, 
          2044, 547, 2077, 564, 2110, 581, 2143, 598, 2175, 615, 632}], 
         Line3DBox[{327, 344, 1761, 361, 1783, 378, 1816, 395, 1849, 412, 
          1882, 429, 1915, 446, 1947, 463, 480, 497, 1992, 514, 2015, 531, 
          2048, 548, 2081, 565, 2114, 582, 2147, 599, 2179, 616, 633}], 
         Line3DBox[{328, 345, 1763, 362, 1787, 379, 1820, 396, 1853, 413, 
          1886, 430, 1919, 447, 1951, 464, 481, 498, 1994, 515, 2019, 532, 
          2052, 549, 2085, 566, 2118, 583, 2151, 600, 2183, 617, 634}], 
         Line3DBox[{329, 346, 1765, 363, 1791, 380, 1824, 397, 1857, 414, 
          1890, 431, 1923, 448, 1955, 465, 482, 499, 1996, 516, 2023, 533, 
          2056, 550, 2089, 567, 2122, 584, 2155, 601, 2187, 618, 635}], 
         Line3DBox[{330, 347, 1767, 364, 1795, 381, 1828, 398, 1861, 415, 
          1894, 432, 1927, 449, 1959, 466, 483, 500, 1998, 517, 2027, 534, 
          2060, 551, 2093, 568, 2126, 585, 2159, 602, 2191, 619, 636}], 
         Line3DBox[{331, 348, 1769, 365, 1799, 382, 1832, 399, 1865, 416, 
          1898, 433, 1931, 450, 1963, 467, 484, 501, 2000, 518, 2031, 535, 
          2064, 552, 2097, 569, 2130, 586, 2163, 603, 2195, 620, 637}], 
         Line3DBox[{332, 349, 1771, 366, 1803, 383, 1836, 400, 1869, 417, 
          1902, 434, 1935, 451, 1967, 468, 485, 502, 2002, 519, 2035, 536, 
          2068, 553, 2101, 570, 2134, 587, 2167, 604, 2199, 621, 638}], 
         Line3DBox[{333, 350, 1777, 367, 1810, 384, 1843, 401, 1876, 418, 
          1909, 435, 1941, 452, 1971, 469, 486, 503, 2009, 520, 2042, 537, 
          2075, 554, 2108, 571, 2141, 588, 2173, 605, 2202, 622, 639}], 
         Line3DBox[{334, 351, 1781, 368, 1814, 385, 1847, 402, 1880, 419, 
          1913, 436, 1945, 453, 1973, 470, 487, 504, 2013, 521, 2046, 538, 
          2079, 555, 2112, 572, 2145, 589, 2177, 606, 2204, 623, 640}], 
         Line3DBox[{335, 352, 1785, 369, 1818, 386, 1851, 403, 1884, 420, 
          1917, 437, 1949, 454, 1975, 471, 488, 505, 2017, 522, 2050, 539, 
          2083, 556, 2116, 573, 2149, 590, 2181, 607, 2206, 624, 641}], 
         Line3DBox[{336, 353, 1789, 370, 1822, 387, 1855, 404, 1888, 421, 
          1921, 438, 1953, 455, 1977, 472, 489, 506, 2021, 523, 2054, 540, 
          2087, 557, 2120, 574, 2153, 591, 2185, 608, 2208, 625, 642}], 
         Line3DBox[{337, 354, 1793, 371, 1826, 388, 1859, 405, 1892, 422, 
          1925, 439, 1957, 456, 1979, 473, 490, 507, 2025, 524, 2058, 541, 
          2091, 558, 2124, 575, 2157, 592, 2189, 609, 2210, 626, 643}], 
         Line3DBox[{338, 355, 1797, 372, 1830, 389, 1863, 406, 1896, 423, 
          1929, 440, 1961, 457, 1981, 474, 491, 508, 2029, 525, 2062, 542, 
          2095, 559, 2128, 576, 2161, 593, 2193, 610, 2212, 627, 644}], 
         Line3DBox[{339, 356, 1801, 373, 1834, 390, 1867, 407, 1900, 424, 
          1933, 441, 1965, 458, 1983, 475, 492, 509, 2033, 526, 2066, 543, 
          2099, 560, 2132, 577, 2165, 594, 2197, 611, 2214, 628, 645}], 
         Line3DBox[{648, 665, 2219, 682, 2237, 699, 2270, 716, 2303, 733, 
          2336, 750, 2369, 767, 2401, 784, 801, 818, 2450, 835, 2469, 852, 
          2502, 869, 2535, 886, 2568, 903, 2601, 920, 2633, 937, 954}], 
         Line3DBox[{649, 666, 2221, 683, 2241, 700, 2274, 717, 2307, 734, 
          2340, 751, 2373, 768, 2405, 785, 802, 819, 2452, 836, 2473, 853, 
          2506, 870, 2539, 887, 2572, 904, 2605, 921, 2637, 938, 955}], 
         Line3DBox[{650, 667, 2223, 684, 2245, 701, 2278, 718, 2311, 735, 
          2344, 752, 2377, 769, 2409, 786, 803, 820, 2454, 837, 2477, 854, 
          2510, 871, 2543, 888, 2576, 905, 2609, 922, 2641, 939, 956}], 
         Line3DBox[{651, 668, 2225, 685, 2249, 702, 2282, 719, 2315, 736, 
          2348, 753, 2381, 770, 2413, 787, 804, 821, 2456, 838, 2481, 855, 
          2514, 872, 2547, 889, 2580, 906, 2613, 923, 2645, 940, 957}], 
         Line3DBox[{652, 669, 2227, 686, 2253, 703, 2286, 720, 2319, 737, 
          2352, 754, 2385, 771, 2417, 788, 805, 822, 2458, 839, 2485, 856, 
          2518, 873, 2551, 890, 2584, 907, 2617, 924, 2649, 941, 958}], 
         Line3DBox[{653, 670, 2229, 687, 2257, 704, 2290, 721, 2323, 738, 
          2356, 755, 2389, 772, 2421, 789, 806, 823, 2460, 840, 2489, 857, 
          2522, 874, 2555, 891, 2588, 908, 2621, 925, 2653, 942, 959}], 
         Line3DBox[{654, 671, 2231, 688, 2261, 705, 2294, 722, 2327, 739, 
          2360, 756, 2393, 773, 2425, 790, 807, 824, 2462, 841, 2493, 858, 
          2526, 875, 2559, 892, 2592, 909, 2625, 926, 2657, 943, 960}], 
         Line3DBox[{655, 672, 2233, 689, 2265, 706, 2298, 723, 2331, 740, 
          2364, 757, 2397, 774, 2429, 791, 808, 825, 2464, 842, 2497, 859, 
          2530, 876, 2563, 893, 2596, 910, 2629, 927, 2661, 944, 961}], 
         Line3DBox[{656, 673, 2239, 690, 2272, 707, 2305, 724, 2338, 741, 
          2371, 758, 2403, 775, 2433, 792, 809, 826, 2471, 843, 2504, 860, 
          2537, 877, 2570, 894, 2603, 911, 2635, 928, 2664, 945, 962}], 
         Line3DBox[{657, 674, 2243, 691, 2276, 708, 2309, 725, 2342, 742, 
          2375, 759, 2407, 776, 2435, 793, 810, 827, 2475, 844, 2508, 861, 
          2541, 878, 2574, 895, 2607, 912, 2639, 929, 2666, 946, 963}], 
         Line3DBox[{658, 675, 2247, 692, 2280, 709, 2313, 726, 2346, 743, 
          2379, 760, 2411, 777, 2437, 794, 811, 828, 2479, 845, 2512, 862, 
          2545, 879, 2578, 896, 2611, 913, 2643, 930, 2668, 947, 964}], 
         Line3DBox[{659, 676, 2251, 693, 2284, 710, 2317, 727, 2350, 744, 
          2383, 761, 2415, 778, 2439, 795, 812, 829, 2483, 846, 2516, 863, 
          2549, 880, 2582, 897, 2615, 914, 2647, 931, 2670, 948, 965}], 
         Line3DBox[{660, 677, 2255, 694, 2288, 711, 2321, 728, 2354, 745, 
          2387, 762, 2419, 779, 2441, 796, 813, 830, 2487, 847, 2520, 864, 
          2553, 881, 2586, 898, 2619, 915, 2651, 932, 2672, 949, 966}], 
         Line3DBox[{661, 678, 2259, 695, 2292, 712, 2325, 729, 2358, 746, 
          2391, 763, 2423, 780, 2443, 797, 814, 831, 2491, 848, 2524, 865, 
          2557, 882, 2590, 899, 2623, 916, 2655, 933, 2674, 950, 967}], 
         Line3DBox[{662, 679, 2263, 696, 2296, 713, 2329, 730, 2362, 747, 
          2395, 764, 2427, 781, 2445, 798, 815, 832, 2495, 849, 2528, 866, 
          2561, 883, 2594, 900, 2627, 917, 2659, 934, 2676, 951, 968}], 
         Line3DBox[{971, 988, 2681, 1005, 2699, 1022, 2732, 1039, 2765, 1056, 
          2798, 1073, 2831, 1090, 2863, 1107, 1124, 1141, 2912, 1158, 2931, 
          1175, 2964, 1192, 2997, 1209, 3030, 1226, 3063, 1243, 3095, 1260, 
          1277}], Line3DBox[{972, 989, 2683, 1006, 2703, 1023, 2736, 1040, 
          2769, 1057, 2802, 1074, 2835, 1091, 2867, 1108, 1125, 1142, 2914, 
          1159, 2935, 1176, 2968, 1193, 3001, 1210, 3034, 1227, 3067, 1244, 
          3099, 1261, 1278}], 
         Line3DBox[{973, 990, 2685, 1007, 2707, 1024, 2740, 1041, 2773, 1058, 
          2806, 1075, 2839, 1092, 2871, 1109, 1126, 1143, 2916, 1160, 2939, 
          1177, 2972, 1194, 3005, 1211, 3038, 1228, 3071, 1245, 3103, 1262, 
          1279}], Line3DBox[{974, 991, 2687, 1008, 2711, 1025, 2744, 1042, 
          2777, 1059, 2810, 1076, 2843, 1093, 2875, 1110, 1127, 1144, 2918, 
          1161, 2943, 1178, 2976, 1195, 3009, 1212, 3042, 1229, 3075, 1246, 
          3107, 1263, 1280}], 
         Line3DBox[{975, 992, 2689, 1009, 2715, 1026, 2748, 1043, 2781, 1060, 
          2814, 1077, 2847, 1094, 2879, 1111, 1128, 1145, 2920, 1162, 2947, 
          1179, 2980, 1196, 3013, 1213, 3046, 1230, 3079, 1247, 3111, 1264, 
          1281}], Line3DBox[{976, 993, 2691, 1010, 2719, 1027, 2752, 1044, 
          2785, 1061, 2818, 1078, 2851, 1095, 2883, 1112, 1129, 1146, 2922, 
          1163, 2951, 1180, 2984, 1197, 3017, 1214, 3050, 1231, 3083, 1248, 
          3115, 1265, 1282}], 
         Line3DBox[{977, 994, 2693, 1011, 2723, 1028, 2756, 1045, 2789, 1062, 
          2822, 1079, 2855, 1096, 2887, 1113, 1130, 1147, 2924, 1164, 2955, 
          1181, 2988, 1198, 3021, 1215, 3054, 1232, 3087, 1249, 3119, 1266, 
          1283}], Line3DBox[{978, 995, 2695, 1012, 2727, 1029, 2760, 1046, 
          2793, 1063, 2826, 1080, 2859, 1097, 2891, 1114, 1131, 1148, 2926, 
          1165, 2959, 1182, 2992, 1199, 3025, 1216, 3058, 1233, 3091, 1250, 
          3123, 1267, 1284}], 
         Line3DBox[{979, 996, 2701, 1013, 2734, 1030, 2767, 1047, 2800, 1064, 
          2833, 1081, 2865, 1098, 2895, 1115, 1132, 1149, 2933, 1166, 2966, 
          1183, 2999, 1200, 3032, 1217, 3065, 1234, 3097, 1251, 3126, 1268, 
          1285}], Line3DBox[{980, 997, 2705, 1014, 2738, 1031, 2771, 1048, 
          2804, 1065, 2837, 1082, 2869, 1099, 2897, 1116, 1133, 1150, 2937, 
          1167, 2970, 1184, 3003, 1201, 3036, 1218, 3069, 1235, 3101, 1252, 
          3128, 1269, 1286}], 
         Line3DBox[{981, 998, 2709, 1015, 2742, 1032, 2775, 1049, 2808, 1066, 
          2841, 1083, 2873, 1100, 2899, 1117, 1134, 1151, 2941, 1168, 2974, 
          1185, 3007, 1202, 3040, 1219, 3073, 1236, 3105, 1253, 3130, 1270, 
          1287}], Line3DBox[{982, 999, 2713, 1016, 2746, 1033, 2779, 1050, 
          2812, 1067, 2845, 1084, 2877, 1101, 2901, 1118, 1135, 1152, 2945, 
          1169, 2978, 1186, 3011, 1203, 3044, 1220, 3077, 1237, 3109, 1254, 
          3132, 1271, 1288}], 
         Line3DBox[{983, 1000, 2717, 1017, 2750, 1034, 2783, 1051, 2816, 1068,
           2849, 1085, 2881, 1102, 2903, 1119, 1136, 1153, 2949, 1170, 2982, 
          1187, 3015, 1204, 3048, 1221, 3081, 1238, 3113, 1255, 3134, 1272, 
          1289}], Line3DBox[{984, 1001, 2721, 1018, 2754, 1035, 2787, 1052, 
          2820, 1069, 2853, 1086, 2885, 1103, 2905, 1120, 1137, 1154, 2953, 
          1171, 2986, 1188, 3019, 1205, 3052, 1222, 3085, 1239, 3117, 1256, 
          3136, 1273, 1290}], 
         Line3DBox[{985, 1002, 2725, 1019, 2758, 1036, 2791, 1053, 2824, 1070,
           2857, 1087, 2889, 1104, 2907, 1121, 1138, 1155, 2957, 1172, 2990, 
          1189, 3023, 1206, 3056, 1223, 3089, 1240, 3121, 1257, 3138, 1274, 
          1291}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
      VertexNormals->CompressedData["
1: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
Q1QaO+PL/eaQuj/w2APEl44eCoqsmQbYah+wvfqiDbQoa/0WlIkGx47NCAWT
dMMpShmzkeBAqIMylfAxQoHmgVfep7Z1QbQdyalYQw+o+KL47HIRCuAnheWL
tzXAINLbtenbuIHCkxI1kpw/ny/0k/uLZV9Ywe+Em5CL1QfxZdYydCliNRL6
t7uJLQIp8DhuSDAL8cXwk8xznssOMMQgijH35XPg+Mnv1XkkPskvpHH4QSMk
Pz5sVzelAzJ8Vl+PR6EB9Ve/maQr3VDWfJ+8Z7Q6qA4ou6VpgAJvUWfKW1I6
YeLgKmeN6h0wooOSFmxH1j9bLtlWDTast0fSkK7i5vu/fPnuSzgnS4H/mch1
/pV3VUccOX4c31lIRIL48p03X/nwbu04S6VZRmkB8eU7Vz/dYoAXjQYMzp5Z
4Eb3Olde2mqdp4v4cvdVV/K7znU+2u1W19v6ly/feZaro9rzmxt5TgnclcyP
5HneIcm2nSx2nZ/XZjl+D5nfc+vNCHru66zriXQnfF07n3be50iO54X29XgD
q49XMCoTIEunJjBfv2OdT2rEyXZSToDE7qdcgssbfl2ttZma50OBaXjLgwaW
rfPAuat7KrX/+89Xb+Z7j8yaDXUarefhkPlnkzokz+PhDfa5AfLrXCXsnvfa
dYf3jJ0Odmw+63rMuY/4hpb/fHn7d3PKKjyC2cGNcazW2LHDfW091uy5L6DV
aP3vOM82Oa75tYPJ8+VlZbd1Tk8nvlC/8pcvfzT/y5f/m/wvX36MP3yebIrv
oQM1iQeejWEdbwZYndZ27jKCT2j9jeqweNBP8rBNnGTiluko4gt7fniZJsKL
ImTuy69dX0YH0QEuM9B1O/aJCdIeO5cAw2iEVx6065h0dQfD8x1Gom5ikP4g
HiriT+DLc/q7Bo+5XaFUzKtP81j7q+H5eLe+ihu0FuOrwa5PTRwcV/xmHrnl
oAQJtxmcp5LYchXZrrLtx64MhBO984++xmoLkvnO8AXRO8PwFY/3XghfnXjq
/rbPExDHU27zb3OADKcHd9hjzfu5+GdViDod4M2bMlu4sOrhwyZ+61JSmZ+7
GKg77fNg7qItNGkeGTPAiv/ej7/33+/8NA6OKx4Xp8LBD/xtHeQAY8p6v3Bi
8Yyxk+h+pG4bh3RfYtc5Lh8lFGudjsQ//N3zyd//ZziurW14n209fr5WUsTF
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
uIHI4RX+bkQfo0d2vs+vGab2NMUrc2bCcx5nSh+vTPyuzmZOcHmgXpWrE476
Kb0jScqGuXUuI9JFKPCa1Xoft1c3jNjtKFQq/x4GLuy7X8CC+mn9VaOyStSe
HnidY2a4Xuc9PB1yLFDqEAosLNmBocftEC9BR937QAIkOCYUs1Xs59v/6CO/
ZSv5R/ggu5QcPzoUnrn3UOTDQzQQ117SiScsgqhu/urpvQ7QuSeyYWs47jwX
6bb0w5tq0FuLaFf/TTowkMwhgn3+hIuAl0ON1Az6zDgcgv+Ez3PH1hGNWsCr
+tNOLiyUUELyrUfk2vx+rnzmIo8HNCbDO6gnwAtLCMSHHFd+Xj982EvmUE04
HDOKGO47pgkpY9XkGJB+8altt7yGfwg8tFTJn9pmBIeXqSLmv/68PqrQRPiD
uTus2dPkNm5iDrfQnJyXRtpZWxe6bKWXC3v5ls853LCB4OLdHbnVv6+/uc5F
0A/Qrk4NkKaOBW57aAej0fmv2UvQP+07Ll6jS0a9Y6IZDn/KuCUq5Q+ddhiT
yxL+vH7ao4Mluxu74JOyrGo4FgpXA5iLTjiiQOZ4lO1eum746ciEmML2MCha
jN6npPfz/aKfQP7JolEXFGQ5EEKZEgylr11kfR2GAqyWEyv3wtsg7eCBAndW
V/ioQUJN1Pbn+0Ui15a9Zy81wuiMtr08ChrQa8+tkG/xaMBWoB7OZVUKFUbM
Dk5duADCD3hS85jh7hduAh4xQvefQENPG7NlpJ630Jw+/SvfdTrPXx/tzWQF
P1RruM0gOjG78YjWzhvnXFPaeXu3B2xyo95yOe0+pJlKcPf4hffACPiM0stP
REKaC6Er8YcpoVVepVA5cvxCMyCv1e0dBpeyCQ4YyQrDzCCPD6uLP6//uHdX
yqFSJ9ieokcvLyoF4nUuPydH2k92ht7RMiIdNt21z/p4ShS0Bu3nFvmF966b
y7w2MOJuhFPTZURtdUKgI327Tk3cz9ftya3qrK0nmyHH7oUKebQmVOhtNnjN
9vM6TMUkTDEXuuHdLilhuj4duCM+mJ35BQp4pwWpX0R3wb7r/inCunJQuk1i
H4fDz9f/p4XpOZ3STljRdvlsnYIWvDfuKsHzEQUO8LGFzwm3wzu7jOk70m6C
kvp9nKMKP1//hM+mJhL6GiAXJ8Vg+rZTgN8opTP/PRrQbBFA0eytgt8jw3Qe
YYgEcftVVeR4XPGF+Hp8wLNa6V+5T4N+cn+x7IuN78JzE3Kx+iA6Mrzb+mxU
nWCj11y1Fjcd8NzbEEjzC/pfJo755fJEwhwija5FQAc+oyVceBYwQNb2od7H
K+EwmMJiC54RH6idtrnv9wv1r0Ykw3j6sgM095TbkfeSDwyMmt4WQNq5LX40
NUA5GvZtXZ3jxL8G7st1/+Y7sD+qzxU/lzv/oBEuteYs10/xgiHhRFa8aNx1
u4TnMWIEm2A6c7vO8cyrAM9m1vCaFhrIhj47/UyoG7ZqzH7wir4K2pKsW9me
o8A4fa2l5dFu6GVnOPxV9RQ4wP9lKM8MBToYDN99yeyEJ68Zi9QgfL7vCyRs
QwFqcaEoWduOdb+eHti5eIgcqcMtl2yrBhvWuaQhXcVNpK7uxx5O9NbduP85
+cHN4vbtv37d/y/+n+Err5ylpYUs1n38GHDxWTxS59+/+/6d1/3je9m3dmtJ
m57WXdcbcX94cu39jcTNnvsCWjfek8Z5tslx7f4r8iod+i/HXdf5SYag7LXj
CHwmz5eXld3WOQOd+EI9wkPc2CyElTfuP1T2mLj2I/cfHhtdpnbukoJeHTnz
335hPPmL/xo37RcmtZDYeD9Y061a/8JfyD+uejvXTn3sTY/C+t9dJmpjXvwF
fVz1iZp5HCnt47TOfUhmD1H/gj6uepbtvPREUll7nesc8v5/7b11VFVd26hv
oiJiIKKggBiAgIGFgN5i0KEgooiCCEqDSHdLinRKlyiNpDDp7pRGujcoIRj8
FuecR/bHb+znEd53vOcb43z/OS4X17rXXPesteaea+f4fzA/mWLY09wuvkSl
XFmc+v/CeW3tS7k0++XQZe7HLPjlT4iv1m9HwEOI/3fzO63wGEwSs4lQG6Cu
12yzFhgX+qVtX7UG/8HDk5ZzWL0IPO5iIYl57ublbnHEPJ05PEOqCRxwxWGo
1xbjKVNPfn5bg19FbrJb28MYHCzT8652PEBzrodvFGGeZPF2mw8tDnD+axC5
KMa3327ezrEGv/6Ci7dJswv4OvMVLbRwINGDh7RzsXrhNXCkO67FEN4xvaq/
2sqB+F5Qia9lve5auXJydPPpAmtUwuHkZId33tX2Iw+qGdRjZWzR1533VZXx
jifEVxvnQwIeQny1fkJx/rv8Kz3z6zkP7+jXQkPnGoUyMc7zM5fu1hr8fR5G
F167WiDNn9a3FbD2TcS3dN0RzJPT8mjL3vqs7BbybA2pfiu0+RVfk+sa/Pfv
aFE0pFlCmh8lU26mJSr/IfV0aT1GSeTeT+UnXgHTwtVNG6+aoQ7zYc3WNczf
oxjPh8mmu4GXY1/r6AkTZP/29ZZrmOc20bDklh4rsLLsIzvSYoi81GdMZf+F
8j/ZfyOYs80QSbuy/tF6+PJL4j0b+61gN9FgC365xT4d2MeGlaeze2EzPifk
30dfTKqMtX+99ZVSjX/ATxHwEOJ7CHh2reBqlsE2Ma7XYLvu3JadF3VRAk3U
Qsff8LXGv/U5c8dmLK9xRl4pfX/AV3pUtY9pycsoID3r9dPuMnrIk+W7K/77
+m0EPCt5lFDKQG6SObLxeidRwG2IpnVM6C2X1rn1Xvimcl0CXbamOzZsq4/k
mnjo1hJ/Y6R3pziyhs83Ni48vWOKeBq1FQQx7lqiSKP6wREmTsXWJrkbo7sn
BOD7r9X7GUXqLvD0uIOu8Ubcdm9jpBQosZsc81yN7xn3p7IHkynHphu+xuj2
OoYaajwPMQE/If5t3bVfrJj/o73GtVI8fnyy+uPOdkPUoSJmjJ9v/JkysQ/e
VyBTF7uimlPLfNA5Umepnfn08r+2M/ME/P9nvAwrx8nmKzjrx3whMzYJ0GxR
r/JIMECHPGoeLOXDmQ4hc+1Tj4DfK4FL64Iu4lAzyG/F8xgT8Bus4OtnN6VF
9MtBnJZMg4Tic5RMH84+sDQevkk1dETpMTySOCQcJqGOXJ+9HB79g/hX8mrv
xakg/9zs8LYDendk1FEZy4GAyb/hhOL8NL3zQaSrLGo33EATf9IENFXuvc/F
O95jx/iRTDl1lKBd4oPvcVvBfXeYbNhzywrdSFvcgGMxAU6L5BFpjEsl9iZu
HNRCsqNngz60G4L/oABzMp7HiYB/JZ+35t7c1mUF3o0OWt1t2DxDn8ppqd2O
LUi6cPGAPSgpnpB1bTUEdy2Ri8f+wO+ygvd8r3Myw+rFroQGaVbMLyUTcZMK
qxdpl3Zt+ynmDEYK3+LosfhbQhmp8PsjOwL+mYHW+tBRLSQhKRiOXy9C9WIz
1DBPv+9WI/z8J9t88XzaIUHUv0OaHX89p2RforCRojnY1dKfWyo3b+UYKh+3
a0CnRNmpt9kYZvRSNpfjHU8aVIj6OhvReuJO6oY9EwS5vwAKOG+vCGI0g7Jy
mMfy8i6mpfue8Krc2rZdGV54NRErYnkS07LdIGUN/mwjPaO7dcpQp1c00XDH
FDKcNzkteTweHRUQb5GD7gr60gNipvAxWPBz5hr8b2VJuxz8P2enzSSa1guZ
wi+VxJylfHazoHv5KKkr+/5wJfMXQVOg33SsIO9v/Imu41F65OLoRSlJ7RjG
u3mlq2rwzts5WPW/PAemGP6Lp2MFr6YSeFSZ6wevSH6RfI2tQydZPuM2eE8A
20tHhi2yATDrVcDki3F6K78aDa9lfwsB/6cVPPaUS58sbQRcVNpT1TNeju50
b6wvYMXabW4KovniCNhuq0EZgHGOKwskt1gJe/7irSv4/XIPgYavIYDTuuTm
0VuAuDd/FjRyxEGqSMl7CA+G7J7ahAmMdwv0RLM7Efb8xbeFv6byP2wJs9kU
pkvfX6jwF7Y0PiUPodMFoTNyeejw81rJKbz98ajUvtpL1BsC7cP3fvj1wvRa
PNnBwAo0mH/V0O00DsTP7SRyeK8AA4OTJ5Y8A9EunyYwz2jToQTGdG3YdqQC
SYXmoj1fs+k/JuAgT2FDgUiaNgRwVNLIYHzd8S0kS1zGUrfyk6U1FNIcopx/
jNCgp09Obi7W/psby+uEWcH91jOGpLIIhcZoxJdhPNfVUIhX2x12MtP/Ys9N
QpRNV6sn+nGQxL291R/jrjuqZpa44URR7hKv2X3eXumSHlzZIZognxSJbI5L
MZPNLXNYwf+63uyHkZvHP4QhD+5BV4H5fz/PIMBJsm7MGI2HoU+MJ+Tp8bh8
+1UyfpL3qGnUrisRb71Qv8+1wbtpcSio/rbBdbz1b4caXwzkWASjh2NWdOfx
1mncFnvEWU8bj1RPtn9Jxy1z4f/D1f6Qi/wh71T5+cR/KA+4KuO2VnJFI+me
Irjkhx2/8fW16B+F8IJ0V6t75lt0NyLLL8MQB6b8DPrD/XWQdr6mhkjOELm+
0kM2rhPA5fjJhv5HPRyyFOFyGNBEr28yCdx4OgEF3+9xxopWgKzEZzZ3SSeQ
OFPlveccVo88SS8driyFbjFZSfXb9hCzlfk0gwQOuO9d5LIRSYcdUz4Hz8YZ
Ifj6jOJtMw6CvJJ3hrKnQMobhbZ+Nwvk8tLiblo3DhSiHbs8TsRCtx1OLE9Y
Ac48MnDKnMLy+aden8qGGBA7OndhZlQNbK0zDpfg7T+spe9ja7YhEeSOWk4k
jS7za73Kqev7y9AciwjzYbz932iu7iY7SZuK7ot7J5l34sCrim4k3D8QTlmR
0Lk9UIa4sQJEgrc+c2sqw46JD1HI/1IeldYsYW5zf8FrONQfGIocKyn9tcBS
cHpjwtL3jMR6bUJ0EoHPk18a4tWAX4Wh0G9k2UNEwL+SW6mSJMd1J0ON7XF2
CjNjOPd1Cpn2YfO7/aQ0xMlpwLh5d+wj8iBoRf3CHxrx2qUVnttFtG+OFeZB
h/aJC7xd4Wgf/4fyz4E4aLcez771JQ0Shu5Nt00HgzvfVOSXehwctGR8n98e
BAUXLTq1T0TBqbe2VcpY+Tc27JU9fbgU3tGcImYLDEcS7lR91PexcaDlMdI2
jnrwuv5ZU9M5AHEJ1Qgamk+AVpy+rr6xO7S8itRzno7E5qMCc7IzOFBvf/i5
0kgWzoYkx1HMRQJ5fPvudVj7cFwh1/KdZANoFgczDba+Qw2HJPZ18k3A5QuL
ohs9S4Ftb+qO+nPx6GGJ6NMBvPtrlD1pcKguEqa3XyI9jNfOGK/gMaZP77mF
FwLJ5piuqh/JiIKGk4pIDQfxepFHdX3SwGNrw+6SM2nIwz7K9+oHwh5C5y3L
2N782i8Vjp2SltGQSUauAQkiP/NwkEX+trqbOhm2R0rJj9IlIeGm0abo6n+O
f0fAZVKRjESI2G9YSYLlj6bb+hvT7u/AQYX+2MnkZPTieSAlR8vy8e/1Kwwy
a4NB+rCbxTa8dqmVPKkk63Aqcje+ymTcuczjbCnf0b7yRy0+95/XYHnb+L2T
Q9YrBCZkF6/xUCQiXtYRbcqB5ePtlRfrrbaUILEXXNcl1fDGhyt4ohpbdcau
BEgRmVE9X+mH3ARL5XOw+GVHA0MPeiOI3naIK/+LPmqeN2E/n0vY8xd3WME5
7TdSWWOeZK3dbO4ib6BSe5z8RxYOUNHkFgebHJA8ViDF3f8WhE7pVnbEE/Zc
oxmUFiLPAda0rcLS20pQIe1rSXpmbPwWnDw/fw5BQ2CTXRxxLMgLscvEJeNg
0lImqRcbh3SauBSP9b6HKT8em7ql63rZJO7OmA+ivLwTdIJl6PkDX9G+LxPg
4R6x7cSLEvgh87JtkLwWPaysiCJln4CZd6O6vKdew6vTF9iS0TvYsZFRHofV
L84tRjstrWRBMsbgkH5PNPjcrDSNmcauqyP+a/bdUtjDdc3ye3U9Uk6ruTiU
Nw5lizvdOeyz4VvFRh2x8CYU9LjQ8Xnc8nt/AW4BpQThaODwSW9lmcER5EnH
LKqkcwrArNTz9n7fJkSV5IdjNRqH0D6dDMrIfNjxbageJ9SA9G4KfRf6snr/
Peq0ihq1XChO2efM5lqPOK7Rxj+gnwCaiTZi0lNJYMZjhXa/bkA0flPJd/DW
XRDyk8t8Tkl/HwzHb9Rtp8by/CzZtfAvFolA5tRZYsPcgDa432Ms4Fn2nNsT
kfh8vxrcntraMvUHz6/47VUpTV4UoeydCo7rzHGQMXFsSGx7PsR6NjQ+Dy1D
UbeyL8jhJv6xfq3kJ74nyzsbVIP7YrVe7B6EkqXMYwYLJ4A8RnXHolc1HGJ0
zF7YFoyurTOYaf25er/w9Vs3YwWLYOOZs0RUV2yQtfHYFIcFDj46d9z8SFQA
D8LO95+TtoSHr3o9sn0Je4Q6cq/MpQRBb0h1rKNyFqI61vRLrBAHIsUjBmJe
COJei5iy8zlBarNqrH0O5jcfCfVziQayvUV1NCwW4HxmqjR0mrDHyvOmsU99
OFS7BT15e60IRRBXD/pi45PXZ6NJk47ogn5Lhbqnlj5IKe/ahj8v8ynXMCov
VoZntxcml/YV4R2M2+/vkQTa9dRNs2ZFyNNJV3WjAg4iFd+Wv4ZcuCNQrzWu
XoQcRPt2XDtP2PMX91/Bn6ckdhqKV4L4TBpt02ksziexFkYREyBpY8ouL1QG
hR3GrkQXCtCVdzzMx4aW79cbAn7fFfxq/djP4ge54JLrdcIF5aC35f7v2FVx
cIloeJNndw60J2WTz9xH6B6F8PYbBssebwL+/YrcfB9KNOBWS4bc0nfEZpo6
eNjCiuFrFd02HaocZMImWF96Gu/4ezOirNaiUO+1GPUn63P0m19PWfdkI6Fu
td0nCrB2yf6VBOqrBxrBE7u+tpug62aSRl8VV79uKt+y18LYvxU2bN6SqNrl
jExJOjcwHRgHiocqHhnxDdB0xvzo5g5HeKdxneIyz+r9M4evmPEtloN1Y/ir
ifVuQG5S33OaDeundOMdtRSKoL8iejb8rQ8YDKhc/2yy+ufkraqN7AZuWeAf
d9RF7aUdsIbYbzEvwcaHmWEzt2PeQSRxPk+LmAXoCJ/2TPib78JsrjrrTR3r
A77uz38xfcBu/M6vzYp4vysx7lWjrCp+AIvqV37gv1dayQ3u94mRFybAe6Xs
50m/bgFVdY0h5xiWz+u2+LYO5UJbctONFGJZ0KilOS0f989+sxX83XBSp4Zq
HfCJdz/kMfaCs6GVPg0hE2AwvcFsXLgKlGxen87liQAfhRfsO3YS9vzFDVdw
agf9MO2+LGj8EUX3mQvrf737zBzScbBdfp9Xw1w+TB8/uFkZmx/Qdo9nPn5F
2PMXX5nnssI07+NRKUiKjJPv6PeDyl1hQuria38/spJ/Tj1mhjtYB+5mkXee
d3rAj8AnHjRxq89bwWimN99N2uBwmZHR5rsucOB9jhld3xgcn93/xjW5CYhF
lY+ST7tDespuBqHh1a/3iwhxflRlXw5zxzhqGFzdYcPPaW+lKziglGdxregq
BA7zE1SHuqxh1Cd/eNPL1ZdP79ymufj8VNiznf5mxvFnoPPlJZl3Ow5CiSiN
XWujodXKnPe6pDwSPuo7kT5N2G+6aXzzM2ZX4OeeD1Ymvw2NO7ick9fwvgzl
Eyd1TCdCpVU1oxTZbbife+CR+TBWXzY+zI1kygVuCl19xkuW4FAbfdL7w+r9
exwkXaO+1cMnyWM1Xk58kOQ8SD+BzaO/jx6gevurBg7ukcsMZjaGUnrd9tiW
1efD7TFrKxfONJAUPWBTpWePcJ0KXFatONCpSZrw6P0IdQsfR8/z+CC+iPx6
htLVx++fMSWbu7EEuMW95HPdvNDTuMGboiqr97C13yysrKsGesHHKroGPihr
lzkJ44/VX+9Q02Sj7sF2WBBNObIo5YrEY+hJfmaNwZWZLVlWGZ+AnemNxwl3
V9T2hs/ljsUafgfR0vlizKMcipp9bc/GaKC3Lge4VAEHAbjpeafQYigWzCgs
djVGX6ssDndprr4cblB657GtS4WqLA4O9d23kUS03O4ObHzFxnmqrTgyYfl5
+VvyCJMxwv6xH+Vjo1he/kUC7b94hK7hfW5TWG3fU7bl7y3WUjwb6R7CQWoL
sQT9eAYYztA5M2lIoHhvgQNOdav3P10nrR72sh4y3I8a1ktJIM4zod+49Ceg
j1r6smxBLcQov5Lb5/QCHYx7/Xgwa/X5QHck9OcIUwrE+lPIhZm+QJsMDh+g
/YyNA9Vsdwo+Tgd3sr07LOU00Y24Ydyr5tXHf5/hiFDYQDE4iMkq9jzWREYx
ZNWN6oQ9I8eLxbUPVgBxqhFpnLcyktLd5PX1Ita/xDn/evaxHfLe/wrRM1JG
e872i+V7jUHchIH+R6I2GNtQme3fdwsZWnt4fFw/Duc77c9a362AU8Lf+y43
3UL8VBc9U87hwN7n6JXUe2W/z//i+CEOz1vYeLvRLcHLOnV5frOdovJeBw74
yn+yi3sl/+ZXoix2a69hXf3/8P+7/E10YlfWVPjv/ze1CBjU+4aDohO359TI
3v7msUG1vEyzOFBpU4xZ8PREf/HZmPnQ9Vj/uG2E/oSaUdBvns1V9yoHmy8v
0Bqj+LNJv3n6wKbrY1g7YLpF/+zH/OTfvP+T79h6LH8sL0f3RRQur6tkjQmg
df+D9ic9qY2ZJccMvPPZWtP/g+uy/l/nZ1M3RkZVL+9HHTz/fa/ewurLn1C+
faN9EZEqb/s7H+RccafWsr6LUH4KRiMS6dCE3zz40KK87d/0j4Q4oXw2xOml
bC52/809t67nuvUf/I628JuSxZ6+d+CoUfaw8V/4Tuj0/vw3+w/bwYf1H2jw
13cR4qv1zxLwEOL/3eNPHD+k8upBIBTuYegdpLODo6UfVO2/r94fPh2tW4vV
C/pRs2xHajsIjE8idprBwRfXHULGvVLInJsp3fqIHRyj88l+tJZx2kB1zQO7
YIQ7ej67rdQMIkW1Noxi9Zdk6ywLi088ursZt7OizAzY39cGG02s3u/HSxT2
48YHZC2XnNbgLwOObvk9Ub040LxXyvrNOwhFiH6fdQiSAeEfSfoxayiftfLt
z3bnb2SMhlCnhBJBvOe9q+1H9p47vLWTJwYOle5CXnjvDckJ8NXGSchD6Lyr
9f+n41d6RfKOcZ8PpOx7a3qdLwaqOpvX0U6u3k/lM56mxxsB720tjM51vwOm
t2KKZFi73fGoINTQgBH60zTM4qjfgkF7igLdGn7vZn1Ml8f1USQS/rluhjs2
EqoEDGPjsPyXcDFTFxhPQMPZCxY6+qHg5q0u82UN494XLVYWtaqpKHabvtZ1
XDA89b+t7voJB3BXZzi8IApRc8eQLLgEQQHDRMvBf6H8+4m6qX7GBIEFZ217
xB/ULyouWZFj5G/RI9aOSUa8cquPkvhaRvkWaPd2mB/D44T8N72YBl8/CoTq
b80Z9D/+mRPy/Kv++kiWPl+Bp+gQ2QZzryY/uJqpQj31N3yt8ZO/2swuRe4D
IUe3Zdj//Ge+0uM+kyex6aoTSPWW+tPcfAN7SsYP1H5fvZ9u3a+NC1fCgTHr
1Kfnd4NAmym5uGAaB7mLjy9nHTOGzTH+kY/dAoCxwbz8yBri323Tekg+4i0S
d5t+Tx8RApEVO4VuYvU3Z08ZHdVMPCJWctC/YhYM78IEus4Pr95f8qnhikl5
Gmq56TjDHBMMnpJENO4N2DxC2eo7BVkcCjZ1oJwsC4ZeYcfOydG1l3+0U1hk
XGwwjN5+MHsQr5xFL+1pFk8Pghz7SVwQHk8yIpMMtq8E/1St5ia872PSMvmR
ZGPtzJiv+jP8doaQf///Hi+jlePklVzC9IW47S9D5Gx4JxI3HAiZjz5yNWCe
gjq/d5XMFuhVa23+bKEf9Ngd6337Y/V+9qpy55rjdqjRk/OyUI87pEF0YAxW
Pk+PJirKf7NCPf2B0+a1rvB1/2D3qV+r9z8dZExL6lOFzibbngQOX7jvJ5fF
9ZMwJ+R5GDb19KiADci0FoRvpwtBn3uTtsrgnXd8upJ698QbUJTOXG/2gzCH
Z7ZWw/eiIH+jeE88RQjSaa7l9J/CQeDc3ocy/D7Ayt2Y1JwbhPzaitUOzq/e
HzQTwTpsF4UuXzTbRZIahEQvsXRewNrt95Qfju6oi0XSOXcSnMKDkPSWFyxV
Y6v3BzYXhF+tTUNPXIIulMQEIbd1lj+3N2L9aaiG6K/ARCR5bjSuJSMIlU5E
uQz2/7Mfl/DUrfFACDAx2G36jFeeXnbhDWrZQWie+/jNAPx9gWqUo7jnXeGi
osqcF14+5FjpCpwbCEOHr9UzMGPlZratyeSo/FPE82FX4zb1YPSa024XG57n
CZVecxhqguuU1sZb8d4jrOTXghR1A1JeoVsaR87hVIPR2SfhL+9gcY6cblPp
R6/RlmoNJFwVghzdfKhl5lfv71W/ytF1zRSFPXwx5OQZhG4QX57UxuI0U1Gq
Stj0GF3kr9G7dyEAXZpvMVbCK7fHBPwrOf8oqVdOsxNIFt8b8b7lgSYy40cl
sTznNI40GW21h2n+MUm2JjdEp2dJk/eTcPx2JKcvfbyjD7vso7Vf5jTBJyEb
48Sh5fOS7eh4/gTzqFlf0dDB3+9oBX8tISE28iASZgpvtb93aALKH4dyEOYX
IK55XXQgGM7XK/c4v2qCibTSbPXxcYIeQufVdSM3r/oZh8wtzI4XlzZCynz8
oZDNE6DwRcqh0T0BHX8kSZaEcRWTHU4HNkysOn7fmoTrCVOJyJ6639VapAnK
POIuHh8Yh0w/kSufAuNQ6fx51ZlbTdB5TaCa4Q/idxo6Tv4r3RcF3KNyPY+V
/4M+1Wg3NyUIzuHz0iJthu31j6N7WpY9Et9uCDkGuyLvp99aw/A8x3OfxlQL
VAJp6SN+x+M4UNFsi8y/LgZVAe43vDFP3C3bHQOYR2R0OnRw32vkX62fd/98
M9zOb/goXIvxkgS6MXonJLqQVe0DzUCXoSJrXj0OO3Me8u6XtoBhri/RPVnN
8Jgu4Rd16jh8Wv+598FBWxg+cv7qmbpmaLvBMVaROA6JM+Pbk8odwfqQXM3Q
Aub3aCmTiB4Hc6FElnM3bCHc8NfUN4wfft8i4YFxIddvs/dV72LzsL672ts+
QYblmdDrUYT5X9d7qji0XYX8E1j3T976FP7v5ycJcM2ezTFz9J9gXposdE/I
MqdrkNp6f283EG30N0mIXt4XTufUPuJW2hKIvpmbfkR1+X5Zby45FKigCFvI
vIbx9+fHScSzZh8pgZDR42fXqa6dj/8hLxFLoLhha4+o9v8k199WAlZvZJic
VZf2/2d5OUntjK5s3hZiQVQCBXfkyDQw7iEu6lLZ7om8XhVp+lMUQ2Bt3REL
XRwkN5wIVTHzRm2jOpvqdheDB7Qc08X4rxe65gbXQlGI2nZ2S6kiUEv2cqEz
WlrPX5/nLxaKrM3iZTtkiuB79ZDXgCGWt/cO3RM0tUFv+584CwYVw1eq8KNZ
mjgop3Qqij9ihirCp7YPhReDXWIBaxrGVdc9o0jPtgUj7o7Hb32KYXtzZOcU
xiUpDuUPNryC6n3+gt99i+HBCN+cA977LEu3DXEaDgUg/1xOssxjmVfdLj6Z
9cYNPpjFMZni1S+XczfLBalr4EuCs8TU3ATs6vxZRnrrJdxe/LnhsnwxSGyu
/KGtvXw8P+4sMsI9h7OzO/vxfwe0kt840RD88qINnE4eYSzVKQbX3SyvE7Rw
sMeajqW9ywr4YqqoL7QWgdhIStlXw2WPAAH/Sk6jNrUOSu1gx7p0oS37sHKQ
OHp6UQ8HUxI+9l84POCU/3sKqoUSWO8aIpshQzhOcDNdd1nHAaEjx+Y7nqgD
Swgn6TmMb70jT3NYyBOICw1nxIRLIYHV9ZuoFA5sTsgsGGy2gYv2Ua6dKmWw
VSnDh1gEB9sCvYPlTFwR7q4Rw5ysOnjwsjj7YuVsJ1tpvl/IH6Vx7FJKUXoK
r1iUtzVj/V2foD7OxcQAhqbbexkUysCedRf4YB6lWN6e9DO8MMb+bP4yxh17
hZ8UYFy0X0CSueINCm2i02vv0oWBUFYeOcyz1fDBxxLfAGQf1zB08bIhzE83
5DDg9aeD5F9GReTLgLo+0XRMZJkPreAP052GDg8EIhv9XQ9VtCzAgdJ/cwLW
X3/fd7JeE9khHfVIGZ1EK5i813Ac94uwh9B5c6RJNf1LzdCmeNmro6Vm0GC7
jewFVs7ER+91i0daQm6z+fFgKXOYPqG+G3+ff0Lx39+5WUMipwAOtOt8DXLD
QZE+v2immSv4jKTw391mCSw2CetE8OJ8Rkq8IcnPHR75iF6TwOOh9h+d9WrM
YETR6Db+86jtj7YY3BmTA5rSzwxLv99/MCpepaz9CvJmNhNLN9gBjqSB8zme
pybyFG+apQtcy1nPVonHa1fwz9Esn2g22YLHw09dCsXWkCcedn4e4zbrt+yY
z/SFR7lsZu5PPSFt8jEdfP9nf/UKvln29fl12PywJc8/tVHKHRiV/dO8sPHb
Pci1vpQeBg+vBkqH3Q6BxdoZ123ThD12Xhe3TNe8RDU13dMJGLeNzZQDjAfS
PzFW+BYKdqe+GyteDoZ6JYpt1DM4uD/NfnVGwgHenB25MlwXBGcXdpl+wsaT
pxjS3k24OaL4G2o/jHrdQDl++GQUNh7Y2XV5VxmRK/LyDeqcr/SD8nsSbz9g
1zv6XmJP+mFt6GbN3pblFghRdxbTl74X/Hm/VXc+Ay/oyOnq4DYEgmOmhenl
pXkHKc8GsQ5XFEv8EDiCgsAjMgPHh533EUXqaYf9nqi+bsw8MzwUxr50J5Pi
7YdP2eqGZEICYEbY6Y74D8L8cNqzDnGyIGRlqkRnGRYKwlIRcuPY9bbHX76Q
Ne2O7t01uV91NhjyrmyzjZr/Z//+Fbzyq+fD+GprJEXk8sSOKwSy9b+pi2Hx
Hwu/NlDqYg2FXo8j9guHgtLZ4jtpeH4KAv4yPsoER0t3SNL3O/IAu1/CH9j1
SqdcYTbsapJDbQgc79lbtRPP45hen5EZJAYbTiKTP1k3OKnd963p3mvI05/M
ncb8w6PyNc9KrYH4jLFEPF8QRN31rX/y/Z/rV9AKPtOVL2aspAHh5y4cVtvh
C0RXQkV4sTyRa+ujmC7yhplh1N496w6zzCGiPd8Jewjxciats1wGocDFS03s
4eoK/LKzGWlYPozRy/8K9wqGtEMx9evu20Nl86YNRguEPRQs5DZMTxVRUP7t
3anHXsJCC+OcOsZF48Kj948FgvdV1nOpfubgEOvNlIrFGWlQuunJEHYft9Q1
bSNRBYEDZ+sN/sYTOrfTfDPzc9TJHjrS0uQKpZUWAUvf19hOaWb97cwjkJx7
RG7tJwNqbhsO4+/vcVpv4MhFalFQiPyYunQfnV6xBSnSGaPDfc0V4URuUKkZ
PSqDec7Z3+66kuiOPqIUXqdNbiDhNtSEv5/5Ss9f/MwKbvVwZtL0cBC6mrR5
DgI9gG7bAg0VVm5NDZyC3e2u6J7d/Zu56t7gTqnYyP2DsIfQeac+CT4rO2OM
RD6OUFi/8YZzpSYpKlg+lPfdum77XgWcj3QHl4t6gZjd6P76n/8c/yidpIdF
nzi8cUyhXeKVB8dOb5jRh4CsZIbPba4QMGl5RhOvXZ3hPWvNx8AGI1k2bX/y
Hb2uUMGxB8o2sCGo4a4FdrxMwJvBSSs5JEC19bnvLSsgVUu7spZ9J7LCVThu
LWiiBWd6tysNtjC0752UyNL4pKNf7YKEIzzu+BxrqWsBW4M3j39ew3tPJV6R
q/3mb0Dq84G66n0WcJ50kp8Hu1/t9pe/9dD7AHte1+1D2YoQ9Ew30+jn6v0T
XT1uJgaecGmnLiV5xBP4QCsTuA6LU5L6+vzOEiuIvnpkzNGKDfzU1/e4/U35
HOj8OT08+RjxpF6N+Dp5GG72a3zF34fTXu2h6EXqa/CcERez+DdcXIuGnqRN
D3XPLHrZj1Kg1LO1MkvfOaqRySiNK3ZCNeZQKFv6EPazX6+mXoPfiG908xev
N+jBpBjZM/uT6K2fy3c3rDzjtjy9ZjHmjkJZuTsTrSgR2c1EOv5fq/fXsTsY
3eyzRNqyQu16j+8gtVl7Lb+l439G/Ty2xxSVejKpKBprojOxTAKxfxD/yjwv
HAPamWhsni5fOhAvcB953VN78mUNeUuIf5nSS3t98gFontzz5kf0QYjbjDvw
cw3+0QMtbQKnn6Hu0RnRnCZpUBhRDl1aP68z8Par4gVzkNE/aZjn9RBuSRhb
JK7B78zLE/FZ2Qf6DaR8fgqJQmBopYQelv/u1ZH9TYpecPL1tHaH2DU4lcur
2LaGetHCQHLwyHpsnjJo8+u13354ovMjlxvLhyvwXKlQxR50Ji1I9XtY4AXO
99Htv4lfiViS3EPpPqp1PLyxFMvnA2eKdNdSnsa17Xs97QyQ64iGdD7m6XvT
Ob/0XbxEtvo5q612iFwm4Yp/lxDanl+jtZb3+OyyNHzPGAOQ8EXTedNWChQm
c3eXJlYvtLgVN3oX+qDUXbX9X2a40M6c03LP1lCeFKwRYzw+lih6+Jopx5fb
cH7mckoAFiftfR45H3Vt9Hh40SY9WRa4fvHVdKwhfu+zHrJVPAawj85UUgnz
fAzIfbiW/am6HjXOp41pQndAsFpHigKUzWjs6V6DR7zqufenGwrIOTPigTK7
HPy4IfFsaT+HuwmvBHkcVMFVJfP8xLfHMLDD8dZa9peretxdc8nTC4x9RIa8
iQTg6MfhrjrsvozG4dodAz2BgTHsQePYDeCq6UhcXMP94pQOz+B1dwf3ebO3
e4YooHPj6+f3sPwfKFT+TO716vff+XaSk+z7m/gRmRsrzzA/+ovkcXzhX8v3
07VR5tbrwwa/PZNqxh/rMM+P2e2n7e5aooumGVeUxg+D4DNi45A1+PcRj061
c79BTWoccryY5+mb5+8jsPxve3+L1umNL9q8ienLqRF2qOd+LsqxhvLkk3hm
enfUHMWo9hoQY57Q8C6HOCzOCB62B709hsiNtoC5aZgdaEtvsK0lb/v5yH25
SwzhgLfIYDbmIWHpcP87z1Ch9wy1nw5AxdfrrhPnIMFj/3TX0rhUJjlz9ooG
4izZEWqP8YWzyfI4jDvrUDL3d/CgQfGCoegRCthxUEp96T6u57+lE1HmCYxq
LAfVMH7iwnW9b1j5bKiv6NF44fn7/OrZW/q3LM1bXRhevZRz/81/tJfsXxr3
st5kXNj5aXk/xs+a4i65/8F1Yv/D/z383oZwvRO3An7X0/v3ZYcVlt7vBypK
UIoG/+Ykuz4GiWDzLxHV/Uz9xs6/feb9cju2LrWTOVHkvZPL+XOwXi58Csur
CQMeohsB0cvz41PPZ0ensXHF/dbknOL3v3n64zYGkq84kCg3+UZUarT8nPKr
9IWKP6hfflZK1IWHdFGdDq3vv/Jd+//hq+NkR8h5Or/7/M6TD1FfM6TW0N4S
yjf/hweNbPab//67EfLAiZQ13F9C+fkz+9SEt1bUb04ZxvIgYg3rrwjl88HQ
EurJUsffvP+DStnp/2B+2qrIjOhzhaKW6Jt3z61hnfNf/xrKq8r0uWuOEvez
f8Lfv4sQX61/hICHEF+tf5SAhxD/V+MfiNYjTY70QEmG/iysEubIKG2iumsN
9aKWaPQuO1Yv8uZCiPLEsfGI3+iTTVi9mNG4a23kKQ4HzW7wPcP8E3EXFtcy
L/N6NTF3/4k3zGW1hR45qotiMrmiHLA4bRBLDm5jJDTuNsjPxTiv5FNPz7nV
+zcpWg6aG8dA1oUpNhkiCRTLzysu9wUHVy2ERvM3eoFrWYFay1YJlD/Tc3Js
DeWzVu5L+QadJA1B7uYpvoN49WK1/UjBkQqumxfDEJM3CvbHew5MiK82ziIC
HkJ8tf7/dPxnZJ8lL4q6IN0cx9IMjItbks+of1u9nyYnSCajNACZ+UT6T0Ao
4pWfMTDD2m3bgaheqYFdqLDtfF2NeDCazAz1F1rDOm0Vi6KALVxBkNO1KdPy
QRC62jfXHYflf/su4e+m/VFgeW6YVH3MFwn+tLijv4bfKdhFdHzdyx0PxH6H
s1IGvNGIsfH4unEcUNzbS1lwMRgK/JTTJ395oikG2feC/0L5D8pSXijY7YUc
Fi5+HP2D+nXV9GpWtGgwnMy2ERXBKzcOIdJGmzvBaKet9y1hPE7I356LuhKi
PFDdLramE3jzgk4CfIiAhxAn5Fl5XvmHVIxV5Y9gqnr3njxON+RY13zK/m/4
WuO/xfCl6iOW10cT4nrq/4Cv9JDyfZSNOWeFmumPP3h4wR1dGta9s34Nftlw
uf2G99+gfRt+6IR6eaKrEd+zQrH2jcHxqZPq+xeodz+70dljHuj0m+pghjX4
LU7xKxj1BENEMc2XxS4fpK/3kFYWq78RUSlnjIIigbJa3bpdyhud3rEx+Ov0
6v2mFxWItrInwCkvzmdTBt7okfKzbPJRHKjqPHHVdA4Hba/kA4OvvBEdR/gO
mdm1l382kcnF40beyHN33NMovLzS/1w+f/2AF2rzGH48gsdh48aQbFIvZNQT
yoPfTz1+Yk1Tj7Uzp8ks/ks7gwj4t/zv8TKsHCev5PFFpg7DfC8gUvVC4a99
nkit7Fb60nP+ojecp5N36oOoyp7ZaxfdUOiZaq1nv1bvX3jS36B/zxyExu7t
39ruiJQvxDn0YZ6eAeZCtxEjuH3wKum+n3bIuVqtm27xn/3bVvDyaMEpk00D
2ZNS+wfXbbFHJldoQ+8uEuZ/eUhWeLgK90molpsg9QTpivCtPuByPWz8Nt55
++dA0pDEHu2vrn+A71nJOzXiH51vCEKVuRN+5et9QF1z987DWLv6ta3iupuc
CzqzjsVyK40XfLNuycj4sXq/PPOMzImjweBBtdvtLYUXeMqR5Yhi/kpx+7xS
/XAg3nfGB7fdCx7F8sSkzK7eH/pqndt6zgQYpbpVab7bCzId+UruYPVCbrEi
mKL9Ldx78P7NKUovkJIkH9PC648+E/AfY6d5vf+BC2JQKcmpw8uf6R1UrKEH
veCr446iYbxyLjB/csHk5jP0+EOO3Rye57D0LqqATn8gvqv4OBsrt8wZF0a/
9kfwNX3q+qfd3uBdva4lDc/zoUdUXv1xCKIl12VJWyDM75VNXcWdtgYvnHXB
IczDMTD+TBDz5FxuD3M79BJGjpUtzi/4wNE9F3mbf6ze/0TfrS2P7CVs8r4f
zvXNB8pn5rk/YR6n4cB2Bj5zSEl6IiE+6wPFhT9oyfDiTyDgX8l16TliHmwk
Qqn7z6XW4nyAWJObWRrzFGeEPkqv3ois2YUfpU/4wB7nU/LSf1M+PZ9LiD+I
PEfn56/TccmGIC7e9tkw/HncE9n/5XFOdPkvnpXcVblemG4qHp3076DZm5qO
PvzomLIswIGHyMWKKM8YdJyTdzI5Ix3pPTqhlleyen/5l5qXSuGvYd8tlblW
mULU+D5npNEBB97kNL/2/3KHUX/cC+3HhShMQlGZ0eGf/etXcKtv61tOhoSC
TqQSfyVfJXLXK/quT4vN3z/VFS76BQCXw7qSUozveqC2dYiOsOcv/pQx+cn5
D4HwYYxMeg9235m7fbet+6CNLOYf0F8IrEGxWgfmCwaW1/3ylYV67trpBfSq
XWz47X/1hwr99Dce6FbrrgRmrB5tWHS91liqjt7bEqvwYJ4ANZKKGsyTzbqw
+6ScC9x950SaLVaDuOmzF1NxE6BlS9Ir+cQFWGWuNBVgfGSvItsSZ/djHBYY
0YGYu8kJU/Y1qPWplIr+8ARso6Zd373vOcyWPm1c51CDjDhJDGww3nqhSCxZ
NRjs/W9SWFmUIf/djvIv+XBw8IAKr61aMJwffp5qifF8c/tpG4yD6s9bjMpu
QGQacrKlLg+dYMn/+DycMP/rettv9wlUxeeg3EVNT9KMf+adq+SEPLLzu3R3
dOYgiz69OOe0Zd5l9O3OlG8ReuyADl82XeZNW2R3u9hnI82It2dNCpd5Co76
qVatH9wvsli/gNdu2BENKCiJZ6Ny8ZedfEXL3HGV/OUfcuK552pRfllI6Ln5
Sfs5hDaEOCjo2eLgwTP7XTE3c9Hg+/49ZbtyUO2EfG38CxykFZkHHxKqQkWl
/NecbPLR9g3UNerJExDYeZc7anMNKsvoY2NNy0d0ktvZyD0nwPTbO5NtzAWo
sXwdB6t6IVI0FTugfxQHfBFKBxmHctGHexZ3z98sRM0CJ8rlOHEQM24yeOVI
EuoyEjf4dL0AfX7O365jjgO94feLiC4BRZvyE8eTFiC3R7qWrFicxZs0oiTb
fNGZbusdfl4FiL/DPFLDFQfpgRe1Nh1xQw93XmQ2silA1F0Jn+zd8cZLlz3s
67+VQ1b1s5rFS3jjfOdUnW/PCoFxyL402HGZ0zNHZ0+65yM/tZSDroE4iNzU
0m1UGAmclqaVxw7kougmZrl3McvHP+SeDMgNDoXqSOLy+XnC/MBIS7Htunj4
cWBuPlQhB3U/m7Pleo8D8utlHT1tpbCvwe27kEwk2lIRJvtQePV+zgQcr97t
Snj+deKms3EI6u8SjEvH2iuPoV7F/S11IFl0uLrpRgr0aDozs2pNEPSI1K1r
qBnKQmk9n4RDhYLhToC3wqn8pXWqPaDysw7o66yOErGng843s6e35CcgPrT9
68ixDLjcuGHMRCoPArNNXn7H6sUhjTSxR7sKEMmtswMhTMHwq55OebcnDl5E
Ofs9SKlCD0s9FEikvOEuTmODMCkO+lkZkhk94mH342uXzl7Kg73mrU+Y/LBx
DqeTtNQJE6Asi+DbJpAHmbv3XIp7hwMtjZ5oS/YaJFDhrSsjFwlmOxIOKI1O
QM8JuZ1Mn/PQ68qT12O3vAOG/YeCWvD2V/y8OYLvHXMeMFD5yK3Du48dK7jP
3gv1LwKykeJWaUrr3ARwcn/uLpqAjYcPVR46YpKIPIjLD1zhTgaNa8pxFTWE
Pb/bjRWcJqhKxCc6EbWhOBGu3ng4fqpXSOgTDqqHX9T7MfmjBdxIvPGHBOiY
zQ2/gfc7wW5C/qMTDNbklZCcnHsogxEHws2hnx9GW8B5psjxFPEkYPhilHFt
aPl45njBrtvFmTCb/XZbMN7+t0SXLHukniTCedoZoma8fZL7PtUlRhV4gqW7
jcM81h/Zl/NpO23JBEUhejKLqkxo7rA00g1ePj6c2bFniDofPnzlUSIPI8wb
pcMf/pzIho+igYLlCWlwKfrtQeM3OKCaTGAu3FIHhuqXvTIr8+H+KNGuO0IT
q/Z32tGj+yeb4OwTA/+ullxITLrc3B47DnEHTtopDDZBV1xNkVxoGSzQePsQ
Hx4n6Pm+bkA3JzMd9Soo7OvA+P6zanrUBjiYS+vHnTvWBK5yvriW0yUAztIK
Cgrj0GQjdiZhew4kjzSaaZGWwPitz20XmXGw4/aWq71Z2Yih/l5DBlMhnLJn
yyMVwwEve6/0Xbt8REWTy8bMUgGtCbeOhTRMQINcTX6WdTTsTGaR/ZVRCLum
7fnGjHFgXOnTTR9mAkLBDPZkxIVQLroh+N5rHBjdP8FWJFCANsnfCLtnWgMD
D7c+/GQ6AXvZLpsG26eg3b0swcWk9ZB77djxbcrL5Xk9Volc07UAmrsvyZvj
/e5gJec62b7dZ1s2suc3S+sirgeKHPaDCbcnIEtxxCDVJxup8Ao7uczXwHf+
Cw7Rb/7Zz72C1wSKUjm4f0QNV95EDm+sAeXj6TLaRRMwWVIeZXTTA9ntZqv3
JqsFYc8BbebGCYKev/jdC6xlWvaZwJKM+6CF1dOZaQmNvs5g6Lvdw5ERXwt6
J0nHQzOXPfvGhB+t+2ILAxy3VOX+4Hns09kKe9e2XLhouHCtJw4H24UsyqJa
EiF+hNZTNKAa8r2CR06OTvxj/fr/8QjRGcQdB3MsPLUiHhXgsZt67/PDOBgw
ECW5GFAJC+HEfSRPSiDAZShS8uXq/WTE4tvFdzbBR3/WyB1bCyG4jFXouts4
/MyZFskga4Dwoc8UPKFZYDMvoqXBQNhPZCDfM7XBD41FTH2g/JUKN+4ry+9t
wepvGhkziWgdWEwaaK7bkQz9w1+/j7yagJrLpCdbczJAs1WDpHdDCFTIeNhu
ryLsSeMVnmXKC0bh1VyKnB55cONizh52rD7GXN3qRU7hBtPkrBT2mzyAjU8g
ugVvfHVx+OtYIdFLaKv/qWGI3cdhddmaUL44xLD19gX74jzwCGQ41e2FA9sv
lcUkBenouvbbl8k5eRDfdkzXyZiwhxAnrokg7b5WhCQm3n77JZgH22TM9sWy
4ODwDPFbl9YCpInUySNlEFTVKdyYFFu9/9QxGc+tcx+R06SCLy9bOkjYCVrx
heJggvl51AP/UCR3Ll9GYOYjXB0RzHpU+M/+iftDv+rrHMAigFbrytI+pVzC
3N7THvCTNO7SkRM58Irxx6zlx+XjzY50vE5MUoOkSMebf7Jv88wZcdtRuzTI
K5mV4mnFQQPDw5YwAU2wcs3uXr8uDXBvqIOa2lb/nDnvZZfn5b1GKE1A9XuL
ahZMd104blqKA8/56ezZp/nQw3Y1p7zwA5wsrqoQsVy93yWM/ptxfy3M5J13
4V5MBjV9nuOa/hPgQvqDa3a+CqYzlXijeYKg6+YBJvatq/czRVt/una5HGTF
IrdfVPQGwfKHZ+a5sPs4TN3brZEOV4xOfj/3WhN0HFMrpf5m37xLIXZaqgfd
kWibxbF6mjtgxBo/poj3XIWFqLqwg0gXvgicbMd/r7SSl3O20BJ/eofsfc7F
JifwIwo00dX1FStPG1r248OZSJC9oPUAUkZH6DKMqKtX73++b5LfQLoSaQVZ
ZUi3uiMReb7D4Uewfr+L8+fJtyVospTjtlp2KDpmYkB7S2b1fkO9G+/Ndqaj
bonXX5uD3yK/O7TDd7D2hP+e4x5ix3fo7FHlYhXTMPSMsyvx1fg/+1fmeV1F
MQSYRIMgx4l77Fz2KET5S8L9v9kfdbVcjYd11pUlAo6++ESiTakEe/tGZ26s
4f3UGz5T7uhsOyBzuPSF55wHjPp6enlj47RjDCqxL65/hG87ouKTCt3gjLcm
p2zF6v0hbfucZ4erQenyrpATJnbgl0/lGPID6/e9acpyDlXCJTJ6WLAzAFVp
xYHdjKv3L2pvli5SKIVg+SOLTl23ocYOEc1J4aBC4Fyd93cErac3ZnHGSwOp
SAFfJSLsn1LjvG6m74iYfX9ReRXzI1xArue5Nbynri17rmmcEoNq7hIV+RXy
I61JoqHTX3DQ68Zt/EMoEwvoolXjTVNkaXg9dUvt6v3Tx69oX9pXg+7UDCUG
E3GjD2pMrj+/TUDeMMiZKZWjj86neNkbtNFU7K/hfK7V+9uJQgUeb0lG3KF2
7AlWVsBQaE9lMIADmbHLoa76IahPKfxUhZIHxHjxX+paQ755VJqpy1UmQ3Du
pWpyHg/Yb0mrQ9e7es/Pzi+7WN4mgAw3k460jj8I2BtLiQyv3pM/2v9k4bkt
GOQT0fx47AXivCezeLD8H9T3tpnWTABjr0Qjto/uUC9oWH99dPX+wjkaEaGG
Stj86WnhdU9TyL/L5c5KjYNbqhk/iCQr4EBS8DnxfB2YcddxeHJu9f7HeW9s
ZyZL4Diz/KIYBx8IPuEcnpfFwSWVkdLtYXm//26B+xxtdBRhP1mqlKwQnQn6
i7ye/HyleA35/3JdNGkzbexvz0YK88XKKRyEKVXmUgp+QPLVPzjfLoiCPb9/
hfca7nu1MQ9xkWw10nGZUTKcFIVvrMrVQ5tx0HTTidfToQIphlIwbXihBu1G
x9tDzqze/24ujvW7WCKqq5Eu+CGvBrnarydHsfEqg7KtqkJcNCJJCIt6JawG
nHPGAtVraM8PLV6IzIz9ALazVRqnbqjBoWtlc+Y9hD22RL4GglxJUE2jYeRh
+QzUD2+qyMPm4w23Iz7TSCtAXJI/Lt78GQwlN5MvfS/g2Z4hjkt3A2FO6CNP
6kV+CLbjp2TExrcs8T6mIesrwfmuA6vjUX5gDD8z/fkEDkoVWQciNSp+n/+E
yNYbHGex9urVi/KjBSXL8/jcuOus8ji4a68QSZta+JufT+cku2r37+vX/rvx
/w86Oe+A
       "]], {
      {RGBColor[1, 1, 0], Opacity[0.5], Point3DBox[CompressedData["
1:eJxTTMoPSmViYGCQA2JmIM5SPsB/6gGbwza2+oK3RYwODGDwwf4dR5X+ZnZO
hzDT+Z9SFZjg4nlbCx3/fftu/+a0UvtTHy64+IGzlx9PN3hgf+3iyqDQPoQ5
L1wy9pu6v7WvXeAacOjFZ3uY+Oz/7/ltmj/ZH9EVqT1RyAlXLzxXfuXZa0wO
m6Q1uTj72eHiMx+2n2CUZneIfezafrUcIc7AFBrrs4TPIWKGxuv+Dla4uMMK
xVXqoQwO2utleazvCsDFYya97t8+gcthQ5ZfXmfRO7h7ik33WVUvZXb4xba3
pvgCwp0RgbMm7j7+yz5j6oHHnBe54eZkGXrWv9JndyioMv97M+0kXL1n7a1f
5wX/2+8QcCotfncBLi68ffXEV6sYHVp3VDbP+vQLLr6gfNbqzNlsDlKLkmQ8
u9/DxZ/1PpA4GfjdnuOD/gyD3N9w8VPbRKZMKvxvr/Ls/hym8wh3OnFzJdZ/
+2S/mLt2bcJTZrg7r05QTdk7hcthibkO8xJzRLi1RRnm8Hr8t5+k6Obttw2h
Pt/56Ms7hawOAfuKvI6zIeJXgzmXrSTtn/351Vb7S/b+R9jbdNJEYzGrg995
hrzqyYjwPzZb0fL50T/2d9SUY1YvQIT/sQX/U1yl/tsL3GTqf7DzDCKcX+W3
3nRjd4i6MjPT+SMi/ZxzecRTHfvMnuV4wuZWpjtw9c81Fbce/vbXfud0XpO0
Bx/g4gCaJwBa
        "]]}, 
      {RGBColor[0, 0, 1], Opacity[0.5], Point3DBox[CompressedData["
1:eJxTTMoPSmViYGCQA2JmID6R8dpMad3h/e4rXgZkhn22ZwCDD/YPyos/LW1+
uX9d5FobzXO/4eJ8UwJy3J483M/w5bejy53rcHGOk+UMT+PP7t8e+O2f4ft/
cPEzG0vOadt83S+i9WKK0M6vcPHvX3f/qljwc/9Nv/7fCRx/4eLXl+3R3M3J
fqBndV5o+7YvcPGSN1eeRLqwHIh0u/3e8wSLA0zcLd3Ssmwqz4FL/MXTpizn
gYv7ddwWn3yQ7UDdsYTf4inMcHGD6u6XxSUP99ufzNKZMeU/3PywT1fjLr3/
vf9LnPesY4VccPVa7ydvdXnGcuBFIONzVsWr+2HiBy75llz8PWM/37UPjKc4
fsHN4W81lpJo/b2/4tqPlbM5PsLF5bozlm7sZzhQccw/azE7Inxizxke8jP5
tb9Hb1/D9BW8cHsTqluLQns223dMNvi2P4wbLm7itjRKOIr7wLrC4l0Hsxng
4uVFaZ/OL2I5UDOx7tST84jwaYnq2X2CgfPAz1NfL7xP+wG398qjB37svMwH
uA9vtUy/jnB/adrixnSv//sPTjl3YmM6It59PyzoWG/PcqCqtbT3WwQinM1l
ayqme/3a/6ZMytSp5xNcvc6nOyUT5rMcaFkoJZGSjvBXkc/EpQEmj/ezMn/O
W72PDS5erK0v8Lfw7/5v87jPM8V/h5ujkbjeLFee9UCg/m7n6f844eo9kz/z
he78tV96nVWWERtCHACgARo9
        "]]}, 
      {RGBColor[0, 1, 0], Opacity[0.5], Point3DBox[CompressedData["
1:eJxTTMoPSmViYGCQA2JmIO6qy5yVIv7BfttMreOqPTwHGMDgg73ZvorYKVr3
7GUOR87fvujlfpg4u5DNpwDhw/vnbmCYv1f3O1z8bu1TpWaTz/vfMH+/qywm
CDenyS17vkrBKftP1RfLKiz54OJphX3Ru9Yc259cqqVwx4gZLn53Ass+kdkP
7K9G2d36nscNF9fdGX/tO/Ph/UxGH5Nd9rLCxW/LeVb6mB/ZXztPctOTTbxw
8YBTP03aj37bH/th25QHb//A3SkaNG3+9cof9osmfGG55/sLLn7xUdgN0eIT
+1Wz2G4eE2WDm7PsOuP/da3n9nfKhXXYnuSEi1vf/fzlZ+cz+8mZLq0+BxHm
i3eeub7N+Yn94cuFFjcTOeDqOUVO1m+7+tW+3n/3nsp8hDkLal5XnXh50/5C
fGXqi+sscPE/q1LZDsh83v9kTRGD3T5EOFzawf0zeccd+w61Dfsn1/2E23vT
o11tS8Vne/7lFxQO/f4HF5+ndHXd/nCmA6fXMR57pI0wRyTopcbp6T+B7pmz
LfkLItw+fPjVtpnx1f7dkU7cF9v54eKfVzGp8Lq/2D/9fkzwrAUI93sfOeI+
6fWl/RPWv/h9/NczhHu+sk4NiWJwuB7Z7dz3hAuu/qzA5c+BVTftW6yPX780
WxguzhMTG/JD9qm9CrO014YziHCw7jQTWGHweH+NZeCnlddew83/xt2889T6
9/vNWnYeNvdmgqsHAGHYKEI=
        "]]}, 
      {RGBColor[1, 0, 0], Opacity[0.5], Point3DBox[CompressedData["
1:eJxTTMoPSmViYGCQA2JmIM51WL/owpSt9tyTv6TzzrhjzwAGH+yzz2SdPMTw
dL/P8+Zt/8qnwcWv9J29PyF/pb29t/wfGYfvcPH/c39a1zLetl82ZXvtzHn3
4OL7fQ6tyDH8ah/Au5DzduteuDiLfYfw9uSH+2+sVT37Je4DXDxmrdkO+Tm3
9v+dx7D71LtT+2Hiay+GiYlKPrAXLGeYu2LTFrj6+cp6X7ua79r/5lyfVy78
Fi7u0KX4M7346/7S+AeXZgZ9hIuX6fz4HMs3xf7E0yMqaWwH4eIX77OebPF6
b/91UubLC3MR6uvcvmrMbH65v0nm+Ud+3idw8UQOp/Avby7tF1+w8Had1EW4
+D25Fb9lO4/a/7O6ltr4CqE+88uz3yIPn9qf2/jRQMX4NNxf+7Nc9Pp2HLWf
JCbs7L6MyQEm3riD42F+Xbt9YHNv6ISsW3Bzgq+EfGFKeLg/30/cvIifGa5e
rLPzx2fjD/vFhVjOKlv9g5ufpy9/Xe/ie/v91kwV6Ysewc2Z3P3P1OL92/0T
46K957Aiwv/cxg8qKx9t3P9QI7zdoOUF3Bxhx7fMetbn939dZfycb9dluPp9
9Vai9zK329fHLJqdUX0Irl724KQGv0vX7DelRE06G3UWrr7W+uSfJ3kP9ifb
fhLiTULEV94Znwk5ekf2338ka3Sy5iVcPH3Hq8Ssnxf2M6/8VOTJfgku/q+y
nLPJ7779l5qfNedDj8DFAYwMIMM=
        "]]}}},
    Axes->True,
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.4},
    DisplayFunction->Identity,
    FaceGridsStyle->Automatic,
    Method->{"DefaultBoundaryStyle" -> Directive[
        GrayLevel[0.3]], "RotationControl" -> "Globe"},
    PlotLabel->FormBox["\"RandomForest\"", TraditionalForm],
    PlotRange->{{-4., 4.}, {-5., 4.}, {0, 1}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic, Automatic},
    ViewPoint->{1.3, -2.3999999999999995`, 2.},
    ViewVertical->{0., 0., 1.}], ",", 
   Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
+n99JfkJDW3/HSV94wzBBJcXTvcUr+3x/7/uknyCaG/BkQL2+bedZvOdv4zK
pl1Y/3/PB0n+r6tFZ/Mn9n6+kcvje02Xaj0Cvz8ryZ84x3oMWcueP+Vcrpqt
PSB8GHt/K+Lya3nzdjWNZK8zSVy+LOf01sZIdv9A9l+hjC0C1HSNG/rO5+C+
4x8sj6s29Jpt7GL3txFw/14Fn+QvhU7suGLfeJUkn2eRmm98yej/ekkck7Lv
zb2nw74XP5DLq389uzvGm30uE3F1Pvz68VOYztap53Irkwd5JY/g/bkSttrq
Yz0xjO0XZLjca0dmtc9XsG+SpI7s6XHrc+azx6eNy++d7Xgipc8efx5XZ8PB
TRc8Stnf5ZTi8vvaVXn3rrPrFhiuTvYCjy+hKuz1p5fLD3atNM58D+ehlLCn
+qWRsdHsdamD5o7blncf1ZrA7zL/v+dJQXXPL5O+fdWCB3C5tEHbxuuz2PkC
hqvjPXO95rat7PNpE5fzCrR3675hr1c8rk7u+425x4r6jluwHJe75ZzTmHeG
nfcRc3Vu7s0J2ruKPa8quHxN94OORfvA84KkTsuATQmawWx7VODyrKyM1eFz
2PE6EVfnfIXNHF9Xdp0G5vKnTukrEqaA9UWSOo/xrQOBx/r6qWAlLg9/+X53
3Gh2fIn9o4T3Zkz1nS4P1u9JPv/l1bN65yb2vZhB+H9/y+JxQVuOHjFi999g
+xclXKkwyH1t4q2+nH3PSQlvGznXsdeO+57/+7ykff2KKRy7dmRfneCBXL59
PTOFt4udfxFxdXQn6Om2KbHX4Vou3+30LbN+KbePB1dngXGhpt64vn4kWIbL
Q/kRWZNGw98LU8JEfsHjqClsf9rK5U15+yMOH+KeO7g6s21VD45y6VuvEizF
5dnydTbRcXC/OCWs/s9gy8bP7P1SD5cHh3QPU/8A1jNI6hQ9aJ9WW8SuB+uk
2XyV2e+e6LHcczdi67yY9rfuew87vzaAy9OUJ5cOfMvObzJcnc2P7H588mL7
92Yu36S8OJqYw92PcXVm/JiV+D2BHc+U43IqMPtATQ17HRNzddIu+Fu7vWLv
qyu5POyRdOnxdnaeneTqTPA44PT5I/u+jAKX7zX/OeRQPnteibg68+U7pql8
ZdcT5nK5YYVVb1UvO7/P5+pYDyGU7/1IZI87l69XmW4xV8Se531/JHUu6R6Q
y9jCrisQcJ9/rpYyuWhX33NrcF+7kPjvujNMOq0UzH9J6iwKniirVcs+T/XN
e0jyBD1tFasB7Doftr+QxdGTh72uU2LryHP5rX0DSr0d2PF/EVdHycU7f/YT
9jjUcHnS2Xmv/Ydz9y1cHaJnvL3GBvZ+VZbLzZJCFDIEbD8u5uqYf3uRHXWX
vf60cHlkwYTI/SPguJAs1m93OnVHn72vk+byoekjozVN2PFbhqtz8M/DWWsH
su2im8u/jt4d/Nif+91krk796YuC1SXs/UAXzebXB49rW/mErdPXLiR1bM3c
z5X87rsPCZbmctE467V7VdjrAMPVqXGwyFZexz73/ePyJY8nklF57PWcx9Xx
mLFc2+ZT3zhksCyX76wKm9mow14nxVyduUOUHt4xZteZV3P5xGn3P6XkgHEM
SZ2FafeN5qJY9rhw+aafWWdP6HPv63F1qr8N/mKUz563H7hcNSo9bOUj9vcU
+FwdwuKNYumiR+z5zOXMeJmqxPXscyj7RxZbV/nMnZzE1hFwn5/us4CqbH3x
3/X0//vTQd+pu+6w/QU3X4zZOgVTr7v+VWHvi9j9t2SxqFTlmdQ17r2M/31e
0r5mpMQ2aHUc4s4PNk+10X3nepm9zxFxdSJifN/v2sKus6rmcsddM0Z5DGHX
b5NcnRex27OVRvixjlyu6O9+daEMu3+RmKtTdbj94O+h7Lqyf//9f8srYqNf
w/5CCl9KEF2JGM3e/0tzuZzWsdiaHm6dJ1dnz+O4YH4Vex/VxeXPl0x32S/F
3lcTXB3V5OY6f+65pptm8/Ltcgqf74J2IamTuy4fDZ/JPh9Jc3nImkWbAmzY
9UUMV+eRRcfi5RfY5+4WLk+Nx7fN5sDxH1lcWqQ1d1k6e78ky+Urt/qOm6TG
Xg/FXJ18HcHiFu53x2q4PHTY2axQLbh/miz2vvbBKt6fnZeX5/LDOj/nJf8B
771K6vCVW3Yf92Tb12cuN40s7fzuDp+vZXH8uP2HLcew718P4nLxYb3uE7O5
+WKCrdOjtVO0aTnbrwm4z1uLh7+eUN43XhrMtotGek+EdGdRHre+BbN1ym44
CG8Hscctl7u/MM7cp2P+l71usP1FB22yGc92+sjenytwebT3NLWfbayviKvj
u20S5RzGPudWcjla0PzI5CF73SO5Ou1z+Hesl7DXczkuv1AZv1MmjBuf5OqQ
oQeXTJzNnofNXC5+YmVTnMH9Dg5Xp3Jd0dvGxex9zgAuV9ePVne+wp7/DFfn
+Ce/8o5N7PxsJ5fPyXZW2lvAzs8SXB3xI6tD1X/Z9Ww9NJsf7rndOv8U93vc
iK2z8Il72IOtp9i6XP7kYqiS6wj4ewQd9M3GSxpBn9nj1srlq2xDa194g31N
JXXwGfXn9qv6zttgGS638diquE6OvT8Xc3VMpy94YbmGvY+q5fKxrulxzBd2
HInk6kSiaVcNCvv2mQweyOX2d7revW5h5wdFXJ2Rpj/ebp3D3v8XczkxzEbb
xB08X0jquIRs35NwqG8+JViRy2M1V6xQdGT38WD/dNB5G5WXPhkE5qckn18z
rfPPd1N2XpvtFzroNV33pmT7s/f/7Dx/B718+7wXn4LY6wx7/jfS9cHh8+vH
9O1PHqzA5es39Nh+lWHnhUVcnX1KajePcr/LUMHl87xKVfRfsectydVR1Il7
n97d9z5vsByX7x9qeHWmEzvuKubqOHmZ36xWZfdLb+LySxPX77j1hF2XxePq
GG+Qux+q1be+N3gAlx/NdVHKyGHPT4ar4znYpyF6CjuP1sHlb2d+t5dX4eaz
uDotl1a81frHPp/20mz++MXDXq153PuziK2zM5SJHH2J3T9WisuHVgpO1s6F
+w800h8Cze0ye9nrSRuX72x177QO4uanuDoKE68l5+ey80cyXO69q2Fk2na4
LqiRto08kvy+mz0/67n8xtqK479msznJ1dGul/lgvYv1HsjlKc7WK3Z2wH0q
Gul5vMljew6w1+1vXE605x9zWsz2O3yuDrk9/mmkETufpcjlbr5rbtXJsvNf
7J9Get3KkTfeDWSPg4D7/AedOAu1U+zn2fO/kcbubin8GHZ9IHt/10hrN5ka
2QvY64mIy6/Jnt5R+IS9TpZz+eyhq7UvxrH3FWIuj7nz3r12ANu/N3J5bKKd
sbCEW9/I5QUXs/3kPNj563Yud9actbBWh/vdFsTmVp+uJGZ8Y68P/+Vl4w9e
kksuAedDIx2sf2/41iFsP/Rf/mn+Rfc6jSrg20i3Tr5FfRexzzn/5Y5Jrh8N
vP8Cr0Z624W4pUXsPv/B/+XFs0JOk25wX69GuuaYgZ3Cp7/s5/H/8iQqdfnK
rZvN2OPMjtNWULeyZILcHnL7UnKfX2miO/LqS2v2e3L5kFXDU39VsY7/5ZPO
+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
r+h5wHgJPa2v0pqdf7jJPLwW5BnrqwyLeAL7RTKTeDN336YId+p+MRO0IV3r
VZuFYByOntZzttm+gBXQf6GnTdnhvzdBHq4H9LT9Ex6B+vso76PpefryxHmP
iMA4Fj2tgua6OJdFUOccPe1KNanPvUoMzzbF05YPqn/2JG4NPa0p23mtX84w
LkFP+zjFoq2vDs4jetpo89c3ckShHiN6WkurjL6mBRQ3+Pd3HhYV13YjdaK0
IN75Iub7qT3gOtDTRm68e+NgPbxXRU979OSjkfsP4fijp01jc9k05gD50dM6
prwp970Argk9rd593j9ZhqTuIslTIM55Q9se8qCnFXpmYVZN1oGip/0aG+PC
waMI55HE5bMvb5jWBC4FPa3eC+9FD7phvR562k7248oHmmF/TPS0ieN1nr1C
sG84etp7m3cKbjkC87ToaWcXWtmpz/Mn/4b/Wiz9vDEqAt5noaf97Wiz45My
vAdHT7veuvIX93dwm+hpT5zl4tZ7D+NbZhI3cMrLSa6A84ieVtlA6PBnA5i/
Qk/rdPFCUWkyeb4gefzXrvXMcYP3Muhpjb8tenWW7EuInlaOOVzksifMP6Cn
nWUVs+XtoxxKu5igfZPz+sNyDZwDelpbmcHs8gBwDuhpS7LY/XwCoC4relpp
O7E4mgbcl9HTmtrPLZ2tCA4EPa2d+UsugfXkvRIT5IkVW+GYUQTjXvS0DwtK
3fSMwIGjp+23eca2eiOpm1cA3zdMuNh+zgDGXehpV+lfPSCRC/nR0/b/2tEr
KgnvW9HT3ip+meUUTXHm9Dx8m0aTeHwhD3racjEz49d/oB2ip1X63iDIUgP3
GfS0IfeDKip2gH9AT/vsl22KsABc/+hpzSoezhyqgHE+elqD5x+MZuRDfvS0
dltaL3DLwvtf9LSr+RUNNXfC9Y+eVl97UbOnFKmjSPJU7haRUt0E1zN6Wpu8
bsW2JzDORE87w1arq2cLY73VFE+7d/byiu2e8Peipw2KsM75eAr6d/S0pms2
/dmzAJ730dN+6L6yn2s347qd4mlnyDKfCK2HfXjR07buSL85LADvX9DTWkwe
/brCE+bV0dOOSh8/uvMuY//HKZ7WivM+U8Zs8AnoaQ9xnJN/WAN1+NHTHogP
5yjZBOuy0dMmzBZtl5iA+rroaZMDswQWBsDxgQ+rljrHz0qt39R65qxarg8E
5D7rwHof9LSBoZZ3tQ2gX0BPa3jENS6oCvKgp/3FnpI0Iwjq5aKnfZEefib7
JYxn0NO6rOnvjFOAPOhp5U64/OqwJfcZkueVzdzZUlvhvo2e1rbH4RWLElyf
6GnD3uud+WIM7/HR0x4Iy1vRBvtKT/G0uzq3K7vMgbqd6GnX5E0XrwmEfgc9
bcuHyeFq2D9liqfVWCfiJ3qS4uvoebLDnjhtZIP1fehpl3FPbOjNpK7LY9Xq
m/Cq7YPxwBRPK+61urf2EvG9JE/Gyv5OzYvwPho9rfGytPiwQNhfHj1tI5vD
TD5juM7R0zqwhalIs4LPQU/LwXuFa9tJeK+EntZY7BYb2014n4ie1vrNxmh2
AciDnrZC1duct4Fy/f91p81yepyJ0H+hp2W6aXKpdw3MH6Kn3SXaY1FtCG4B
Pa2NBtPPmc+Iw2GCPDmr06VX9yVR7vOztW69NBNtTQMngJ62TKaRdjsTvo+e
1lSqY29TAsznoqd1cOVNq4uH5zj0tD/5NlQ50eC+gZ42yGdLq/VDeC+JnvY2
e9O6taxwHtHTXvySx9tiTJ6PtCBus3Vmf3kGw41P8bTlq0LK3A7L/Hve6fEV
AeOqSeASp3jai6z2uju9/utpz99avNk9lNGPT/G0Ho+7xHXtxf49L3+Pz/aD
M6Luw7o5jJecfVHwvRecM3rabv1Vvj6zjGj/A7bYwW8=
      "], {{
        {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
          GrayLevel[1], 3], 
         StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1mXfAV+Mbxs8XzykqJa23t7013/aexk9EyZZR2aIQUkZJsipJS0qDBk2F
yqZEFIXI3ntvPz/rc/3uyx/Xe13nfM95zjPu+37u+3nrDh0xcPgeWZb14s+e
8P5A19LFYB9QBpQGe4MikEAOqoBSoKqvK4A6oDzY11zb75cFNUA5UNPXtXyt
Z6u5rdL+ZnV/r5rbL+V+qX8VQSU60UjXKe6pv5Xcp9zvVOO3JtJwFdAYXRmu
677uJ07x3n4pxqX3K7sfRf5+xRT39K16Wbyvd7tx3QbummIMtT2mMh5rsa9r
epzNea4l3Ez9Ai3QjeGHwNXojfCD4Cr0A/AMcDJ6NnwrGISenqLtsm634HnR
nNTht2a6n6Lve3se63HdEG6Yoo/lvU6duG4Nd4TLgfoag+YVdPDzere9xgw3
AM3R9eHrmORSfHxCHvNRx3Na7G9qDefx3KnwAs+f5nkvr4vmtQg+FvRGHwMf
BXqhB8DtUrSpvp0I+qBPSNHnuv/OuZ6T7Xo+a3puNc+a91bwEaAnup/7sJft
9x3+TIXf1vgYw7OaD/gk8AX6RLg3eB59EHwg+BjdBz4VfIk+BR4KvkIPgbuD
59QfuDV4Bt0OPgA8rfWHjwOfo49Vm3z7ELWp+QZd0O1lU6AzurXttqptuJFt
/gDZkW1bz1wGBqIv9bsHuJ2jwWHogfBQzQX6VH3HdtJdNgX6oU+CjweHo4+D
x+h99OgU9t/QPnKibf5kr11rr0tv0M1tqv2u6M6y1RT2IJuUfRbbfv4joA+B
L9baoy+Ch4MB6Au8dq1sD33tO/38LdnhQfCN6hN6ErwZjEM/CT8GxqIfhd8D
16Pfhe8Hp6PXw+eAQ9HD3M656BvgZ8E16GfgJ8BZ6KfgbWA8+nl4FRiGvs/+
O9zf6uk1Pd36OPR4+AyP9+wUfqHn58K3gwvs41d6jcbCF3rtRsLXgiPRE+Fb
PFfTvEYHoq+CL/HajUoRN853rHgJTEbvhF8Ak9Db4WVgMHo5fJvtZybcwDZf
H/4f14+jf4f/1Fyg/4AL/LZWcQeuAnaiK/v51X7mEzAN/TG8D7+9oHgEVwQ7
ZEtwM/Auuil8N8+NcKyowPUWxak81uIiz/kK6+Xu/4XopfB82SJ6odfrMvTj
8BZwE/ppz/MpnvPJ4CT0VK/jFeiV8Fqtgde0rH22DHyzbXIKfIfWEj0nhX91
sb+8obVBv27bG2E7XOu1UDx/FUxB75J9yf7Qi60vR2+Cd2i90S/Cr4AJ6Jfh
NWAoeh28xLZ6j+dkCHp1ir1DtqR95F5wnselPh+DvhPeIFux/T8CLkU/7OfH
uM3B4Hj0BPg6cIL9Qr4z0n3Qep3m+dfzZ6Pvgp8DN6O3wvvmYT9a6w2eN33r
jizWRc8pDnSED4NnpfBN2aHiUjfHq3PcB/lOrRT7kWKm4mcHx5D+KWLmQPvC
IPvO5Sn20FH2L9nAFfBujQ39mn1qiNdXsbSP4576c7TXWnN1pu3qLTAR/abX
5WLPv/p2MHpIinjbHX2m1iHFHqSYpvjWy7FOfvQUWgnLbV5f+fVhXH+iccHV
/UxNuCv4EN0FvgtelIWPLbSWT96fxW93Z7G/6bcF4Dbf029zsliD5X5P99Zl
4bt3gvngV/rxKPxLijZu9bP6fYqfUbtrrB+S7YB7zbdbL5GNgxm+vwzMdl+m
+7cHfL3Y/b3PbW/R3kmO8XQe/V3hPvfj+j24P3wR2INnLoQHgPe5fzTc2LHl
cHgs+AN9NbwKnudxLHDfb7EtKjbOzSJujLENLwI3oj+0bStWbPf90VnElhWe
T717htfu7DzGqjFvBNdwndPPcfAJXsdBzh/ekp3AZ4G35RPu/7fo8+CTwUfo
0+D/Kr6gf0sxT2s8jtUeyxqPTderjJUe81W8n+jDlfBMrpd6fYQHPf+6t973
7nSfF8JLQDX0YuvS6Hvgc8F+6OXWBfRkeIrX5VZ4BSjy89PAnugZ2kNAA/R9
8Bz3bR48DHzK94fDj2kuuP+o/AA0QT+peAJqoNfDT4Ba6MfhBeBP2bT2FPCX
xgQ/AmryzMPwdPA792fBs7Vvaf3gdvxevxB9msT1b7INrSP4G31jHjFcubri
/FjnfuPdTplCtHko+I7751srSb8ZvgB8n4Wtah729/z8TVtPcv+vFHu9cmbl
AFqLWfaZpeYNWeSwyqVV81zP+9/A53js5Whzvv3iB+5fksc6VvHcjswj/7wM
ngvKFmLsmqt9CzFvk7y+N8Cj8siHx8DXgq/RE/OwpZ+zsOfR4Kcs7Ep1wa9Z
vLsIVLX9/JDC779PYZ+THUcUS7VfKzf7yb6kmKP4s9J2/pBjycMe/zL7lPaX
F+FyeczPBtuu2nkELsX9Onnk5LVlL2AruhiulEd+vr/sEWzKIp9R/FnrGKRY
qrio+Kgc5jF/Sz4ov1JetN6+s8RxbLGv7/b1/W5vkdsqzfubtYbypzzqjqp5
jHGj48XPtLsdbpKHVhxW7qS6480sag3FmV/Qp+exX7yKPiKP+uL1LOqXYV4L
xaKDwTZ0I7hVHvGzJVzP/WkI93Sc6ZFHXiebLIKvsI+M8Rxu9HyOsh/JllQf
7cpiz+oIXspin9Ke9bLb1HeV+7WBB9t+FNMG2C8Uz3PwDrpvHnFPdjXI95VD
Klds5nVX/weC3VnUU509dtVx7X1f9ZfyyQe91vKn2bah71LUBbLJe3xf+5bi
vfKTf/dJ7Q1zbbOyXcXSmfbNpX5mjt+Z699luyt8Lf2Nc4ZvU/yu+9pvlJ+r
3ldOqPpFOa3qjm3OK5QHan+ab3/Z4RxMOeEXKfbQz1OMZZbb3+28TvmJvqu+
fg1/lWIf/jJFbrAgi7bnuS8an+ricfD7Kfb8abZd5f/aWxSj/vbeo7ylltdX
+Ul1r3uR/Wu9bbu37VZ1sWrkN9Dd7Juye9Uaqjvk38n+uM4+8lGKWkx1hGz1
FXTdPGrqXbbbmfa/GfZV9Vn5jsaoMSy0P+redD+32PqzFPm25vAjj1ljV6zT
PqLYrnme4HmT/8qnVRcoP1curRzyea6bEuu2wttBMfoF9Q3shb5dYwWN0Btl
j6Ah+gG4DXwg6AOmKr6or46fpbznak/S8+3BGs01vDqPGK7cZr7brOz2tVdW
c+6k/jRDb8vj3X3Q6xR7tAboZzQm91n3VS+Pos0P4Ju4rsj9lfCqPPYs7dfa
J7Vfti1EjqaxdynEvlzW++xO0AK9I48cYG/3WW3WQz8Hd/C4NC+anyre67XP
dyrE3q88oZLnqqOf1X31vwJ8bx596FyI95Q3FnktlD9Udc7wch55wiuKH6C5
10i5QTnnD6oXdB6iGkHnEjqb0rnK1eAg9DjFjBS1j+px1YaD5fspznCaZnHu
Md/1gmqukhTnbm3h6inO5opT1Cx90UfCh6c4i1Ad1DTFWWWLFGduOu/TOeHB
ril07qHzkB7oQ1PUg8pFVUvqnFDnEqptVeeqBtTZiM4TVPOOgM9PcWYyzN/t
5D6o5tWepbr7ddCaOdmdx7mQznN0RqR6UHXrBM+J6kqdP6jG6Y8+1+339bfO
cj91XzZWxjmbxtLC/T8FtEWf5ud11qG6SeeBJVmcDWrtWvLuS/BroAT9KrwZ
lLcNKxZtcnzQHvQBukMeZw5PZHFG0TaPGkF70JFqC31UHjWFcjbVC8vcpvLG
FnnsrTq7036tHEP5Q0/HIp0HKp//EX2829/p7x6TRw6mekT7r/J8nSW29ndL
8thbdZao2mS6fVO+P9X+ovxzin1QebX2zY+z2PdHO7Zc7m994D5cmkeOrdxv
RB55rHLpkY4tF+dxzqk4rDNM5ZDKkyfax+vb3/XuZ35e87DFfVYto9xjgr+l
sasPM+2nyu3nOBYp7umctkEWZ8jKgVUjKDce6PY1/53t700cRxRPuhYiTtR3
nOkJehTCDhQrexfCRts5Z1dsbAV6+dlubqOZY1QXx4hdeTynOKDaQXnvpjy+
2czvqI0Sf0PxRnGng7mx+9q9EPFNfWru625+rr3jmvyoLvyGv1nittWH2rZh
1X3Kq1UDKofZ6v2xxONTH2TzdeyPrTw+zYPiWA3H2D5+vo370tz9k52rnjrC
Mbmm/ail+65ntH9V9x7RzfOg9+WbOmPUee9m91lzpf996H8hPVKcRXdyvNL/
EfT/mPIp9lbtuZ867ulcusjxs79jpmKdzn90pl3BdqJ3dZ6m81udz9dwXC12
DnOd8xmdZ+q8Tmeb7RwrFGN19jje39W5q86ydB6r/xn9//87jsk6W9b/CFSb
3ID+Ef4HcPYfuA==
             "]], Polygon3DBox[CompressedData["
1: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
77MsX3IU6t38P216ivoX9YH/ARaAWKg=
             "]]}],
          Lighting->{{"Ambient", 
             RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
            "Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 0, 2}]}}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
          GrayLevel[1], 3], 
         StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNmXf8l2MXx3938b1uZCcRpTIys5IRkfbQ0PJraQ9pa6tUyipUyEpkPvaI
bB4rIyXrkUjDr0VpGWU878/rfLz443w/577v677u6zrXuc451+dbudvAVgNK
FRUVnc9PabBDVlRUjDRG2qSiovvA1uAlyDz09uAP4Ebka+RwrseCR4DHI8PR
TwTrIHPQLwAvRh5FbwVWRq5EPxLsn9Mv370MPJ3rq7hfU+25Ppv7bcFDuB7D
/cPABlzX5H5j8Ciux3G/Gng+Mhn9QrAJz86kzUXgIKQYfaAQOQe9E7gb7S6n
fQKPRcajn6B5FYqKRqLvh14VGYZ+NHgQMhq9fIpx3ox+mr87C722+kMeRu8P
nonM8FzqI/eg1wMbI3PRG4GVkKHoVVLY8AbPUfO93t9qidyL3gz8lbH1Q98F
Hsj1IPRyYFPkNvQm4MnIBI9N96eiXwRORB5Ev1pzYv4dsMNQcA3Xu6GvBdch
u6NvBMvx7DT0s8GJ4FXIYGSI3kMmIROQQX420NfjkZ5IL2Q4spy+SoErwL3p
6xj0MuAErp9kPJPA/bmuxv39wD2Qo9Fz8ApwCnK1ZTIyDPmJdxK4LcU4hvrZ
2VzfRZ9npWivturjIfrqAT4M9kLOQ+8LlkeORS9rP2lsm1yKtEXvAo5GOqKP
0Hv0ezf9nwvW5roG9+uADyDd0R8E+4NXImMtY+TbHuMwj3MUMhLpo3Ego31v
BNLbz2THccgA93e5r9W2n/sdyzheYzxjwIORweiHprDt6+jjwa34ykD0LeAm
ZID2LdgFbI5cipxKu+vAGmBHsCnSCdmb69vBFmBn32uG9EC6IxfLt7Loq7Pb
XwuekiJuzHCsWM73eqNvBrv6my2Qdjx7DGwL/lwIf94BtgS7ZdF2ZyHm9RvY
kHZT7Oc1sXVr2Q38jmftub8SLClE/FpbiDE18xibZDG3Dr7XyfPUt1r5ey08
tuZ+p7nntp2+RoHbwJ+QPtYLjg+7p3i/le1yhvev/HBP5Ar0PVK8O9J2+Brp
hf4j2NM2bZ1FjJ2psSqOIs+iX6HYgzyHPgqsK/9GbwBWQIagVwRraT84FmkM
d3pNOyH3u887kHfQbwdvRd5GvwXsjTyF3ssx6ibHHMXDa9CrO77NRh/ob2mc
53g8tzj2zkIWoc8EO3i/dAaPsR2O035PYc+yKdb0Vs9F853nOfZ2nOwHdnes
6Oa4OtHfVVy90bG0pWOy8lRPx7oeYFeP7W/9Aa0x2Bd5CL1Pirhxg/e1xvw4
erHtNsvtlcumO4ZPR15En5YiJkzLIscNQ15BHwp2QZ7w3Ic4XiqODuH6Ge4P
AC9DnvYcm9gf5aPN8OnqtG2Rx7sTHXsbOXY1BOsh56LXBXfw/qnoZ6IfgVRA
rwqegFRErw5OQZqjXwseiRyGfkwe36qN3hQ8FKmKfrjjXlPFHsVjx+Rj88it
DZ1/FQProZ+nvpFGzrkXO5a2Ak91jK3h/NvEOV0xtj56d+V9jRv9ILBlHnWI
5q58dJBz04fINmzzEfgLUt7xfxGynfsfg+8hW9AXpqgrGjnvKwcdgP614lke
sfS2PPLIweibwU8Ug3h3KXgyzypx/zTlPuQi5R9wluP7TPDePNZkLviFxsS7
X2m/IOWcQ7/h3rfIJvmZ7aY6p6LWAL0yeJxz4onOfeWcH3fPY+7KgyOcT5Ub
ZM+zwFP8bk2vy0muedSP8ml557XfPPffwc+099B/dfysi97BvnSi/aqj17SL
x3m6/eGePHL9HOXuPMYyHvyDvg5EL8qj/8roB9vfuthuByL7om9XntHa2w9n
IN3Qb7avnoR+fB72r26/PSuPOrCG9ePQa9nnq6Af4jx+CHoF7RfkAuV9cDrS
FX0auBeyN/o+4F+Ky+il0EvrGXpBY0T2QT8AHGA/HOz9coL3VDXbSntHfpij
71T8yCMvXw/elEfOvxF8R3Gf9X83xb0xzt+XO7crp/d3raDnGn9Lf/du23CO
fU11ltZAPtwJvMPrcqn9UP7Z0b7d399Q7bDK810J/spY1imfZrHXTuZ+a/B/
PMu8R6Z7DFoXzavYc9FaV7Uv7XQf67OoVTQX1YDX5FHPyw7t86gFZ+dRd2kf
9QRvVYxQnWNfaqf4CI7No+4a73fbyF72NdVKqosm+DuDvCe0N1RnzssjVt6X
R43U13aeZx+7X37hdVTMHFXqn/pLftgKvCWPWm6o28sHWsiOedTDF6JfAp7j
faG4V5LCf74HNyC/K6eDKY8YW7CPVbC//Zdnm2nzNvgWUsT9L1PEENW0ij9q
8xdtPge3gquyiH2rbHd9q1se8V/2VD2vuKoadRPP/qDNFvDbFGukdd+K/In+
aQo/r+i9oH1xOPqeeYxnP/SfHVd1LlC8XZziXKAYu0PfzyJWar5luL8+xXe1
v350LNTzkizGIpvovLgB2ZXFHIQb/awN3z6Fd8/Io/2PWYx1bRb+qv4Unwu0
WQKuyWIc2y2yzeos9prsKdsq7m527H3Pvq092C+PPKj6f2UW9t1i0T79Losa
UWdf5eThtKtD+3ZgQ9UaqtEU6z2f9cZlno/ifHvF6jzsVGJbaP46Ky9XncSz
M2hTH+xh/1ceXGPb7nCfG20n7Yte3guyyZfew+u9B9e57Q+25wbbWM/lJ814
t2sez5fbvp3zyO86C5f4u59nMYbPfL3C9vjJ9t1mX3wCO74EPuW12O7nsucn
bvNGivm+bh9e6furjUudG5UjF9n+37ndw9oD4KMp6pnjGWelPNp//K9xCRd7
nVd4nHelOPvcAy5xf2r7kb+j731h3yqxb5X4erjjgHLHUo9T8xmU4v2nwce0
b9GftC/VdnzY7PmssO8U21dUD78K3gaOc9xWTbXM/qB1U+6u5pz+lX1Ja3i0
/eQoxWevs9a+Sh5nT9UPGVIWfTe/qzVX21f43vvgqynWupZ9YJBrVNXnH9t+
GvN/XNM+Dr6GfOC1+9RrJnuc67U4P499ufZffrjO323kPK56cnaK8+mdKdZA
3/p7TZbYtqobVc+oVlTuUDyeCk7OIz5Pcr7o7vg8l77e4L154HMpzjLzU+yj
Bt5393P9JvcfSsE5qMYTt3Af1y9w/4EUfMjz6FelsOGRrmFUdx1ley5IYe8X
Upyb5qPfncI/l7p/1RKH0v5PcI77vDfFGD7xOF9KYZsXwRkpznQ6cz2ILPR4
nkmx7570/QXoj8huSGn6X60aI8XZ4UbXmYqHm+2Tn3q/TElxrrkWnJziTDfV
8V+1jfJC8xRc3FD3r/pN/IzOLzqPjwBHpjgHiVuYbV+RD4svKuvxLHY+WOJ4
u8j7c5nrjG/kg97/H6Twsfc9r10pajbVTqpRVcupLtW7qqlUS1+Xgk+b5jG/
jH6z89oepaJ/5V/FSOUg+bz2wMsp+Eadf8UtXGN/mGr7v2Ub7nI/WjtxKTqv
iTOZ69ihGKLzmvhPncEVWxbbn7XW79ofJtsnJ3mNFLuu99zFfS30nlrm/ahz
nzg9nQE/9PrKPoqZH3L/TfvMQs9Ftdn+rhPEA+gsfyU4LsV5Vj78hPes9u9J
sjX64BQcizixYtvhaY9NZz3xe6qftdavet317h1Z8LSq2yu5Hp7ivSP+ULyB
uIjbvUYL7G86Fz+CflOK86+4X53Zte/e877QWV5cqHiG51PE4vn23zWONdrX
ykXPpjini9vs7/bvej/qXNZZNbFz4heOjZvM+4jvWuDvat/lKbhi8b2qq1VD
3qWcYm7qG7AoBY/9VyFidTP3/2ch+J0sBW8s7rp0Cl5RnJ54v1WFqAtWg3fm
UQ+rPhf/I36nDLihELzTRvM/bf1d8eHiEMSfi9MWzyBuXHXRBa7Pf6fdZR6b
+Ki+6L94zP09HvUvTns9uK4Q98WDXec6VuegUik4Z81FZ9iurpk1R/FIfxSC
SxQPL25ZfL44N/E2OteIN57pWkjzFe8m7kpcoPirNeaoZYdVHudK20b5UHmx
xHP5vhDviTMTdyZ71EPqZ8HpiWdbATYA2/m+OEHxdC39bT1r6Hfru117o57t
m4L/PCCFDfU/gvhzcemjbcOt5kN3eO062zfEsU/wu9VcJ+t8Ktt2tJ0132LP
pZ7H0SYLTlX7SFyofKyd5zLZ9aFyXF3PV+3F24tz038QGrP+j9grxZmllnOu
+EbZWlyieD/xYOJ79T+CeD9xgDqb6Fwv3l5nkDKu7cXBjqDNPim4OPGH+l9D
XJw4W/3fIQ5W/Ke41gbOp6pR9T+I/lvR/xSH5ZHvVI+Jt9H5UTyJ7utsrjP4
TvO88iXVuuJ56tj3tNbiS1Xnqx5VLVrFOVd1jrg78YF9vGcH2A7iJXQeFF+h
XPm244NqEv2nI05A/+OID9T/QarpPndcUGz5LPunttV91beKn/MdS/X/jjhw
cZL/B8g+fo4=
             "]], Polygon3DBox[CompressedData["
1:eJxNmXnYltMWxt/nlXc/qYQUJZFKKmOTUDRoUApp7mv8qL7mkZKIEpGhQiKl
klmm45xjyhQZj3nmmDPPM5H7Z92uyx/39d7PHtdee++111pv/ZGTek8sFgqF
B7JCoZJ+y/NCoYsKugoniF8lTBGfLKwSX54KhUfUdqNwqfglKuutuuOFS8WX
CRPExwsXi5+nNg+p7YPCOeLnqWys6iqEc8RX5jH2JOFK8bOFAeIDXd9LfS5T
32XC0eJVhZPEZwjbiR8kLBQ/V2guPlRYL36zMFj8co0xRGMNFa7I45sFI+Ny
8dPd/hZhrvgZebSlz2nio/PQRTdhjL+Rr7/1Mz6FbMg4QfxW4UnxJ4T1Kca/
X3yDcKr4heozrhg6WCR+RwpdotN/ifdWWXfVHSUcI36Ryu5W3V3CBeITVHYs
dYwhfnOKurs93xyVHa26npb/YNakujOFNuIj8qijzVDxG1X2guqeF64T/6pU
KMwUP1l4U3yaym4Uv0mYLn6P8Jr4q8wpvsrr4/xc5e9nxZ8RVrB3mqOP5uor
DEDf6FB8lHCq+J0+T48K/xafnUfdiW5P/cuqe8n6maeyMcUYY674FSl0e7/n
a5ribHBGmiFbir1gTx4QP0v4D3OhE/GjNcYRGutwdC5+gsquUd06YYT4TMpU
V+7zjXyspZ/lP8P67CWcKd5DfRao79k+r705g+JXCMeL75eiboHl4/4w9khh
ie/DMPHhvm+L86gbIVwgvk59HlPfTcKaFPdzuOtXix/CHVPdIuFQ8XYp+PnC
4eJr8mjLmGu5iyq7TXW3CqPFWwhzszgzLdGF2kxX22nCOvFaPk+0qSG+lzBf
fJ6wR4rztkR8sfsP8PdSYaB4XcuDjLXFr9OYM4oxx7XiSWWnqW4O9kj8N53B
2eKnCD+L78Md4i4IjcT7pJiLOfp6fNqfKuwuvmuKvrM93wzN0UFzdRROEl/h
+z7M9udBtXlTbd/weWG9k8WnCLuIn6w2ZWo7GJnFz2cNqrve93N2Ctuz3vcd
e3Sl+EphmPjV3s9y6xP9rGUvLf8gYUUWfQa7Pbqf6v1aqrJ7VXefcLH3l7Yr
vN+TUshyne1RF9svbHon8U6cOfoK7bkPPm9DfX7n2F6yxlPEL1GbO7h7tvez
UnDKTrI9aau27ThTtv9ltp/Y14U+n8yxQPwozqz6rhK6iE/LQ5eDeGPyuN/Y
VmzsfPGMNmo7VfhD+z8jha7Wev6l7l/m9+YVlRXEM+FVy0vbqzlDKd4v5L9T
uFz8f8K2altJeBr7J+wiXkv4XLy+xmwo3kjYC93YvvZAZvbf9vg430/ORw/b
V/Q3w+8j9VOx/Xm8bQP8npR7vdiT4eKT8tAFbcaLV+Rh67Evo8RPzIP3tL6x
D4zd2/Zjd6FBMWSuJ16w/JT97vflEPFDebPF++XBD/N6Fno+1nSu7XU/v3fY
2ymej/qJeZyfXn6P2N+qQmPxvYXK7I3tJW/AweKzOIPiR/q7j+9je3Tk9fP2
dfd5aJuHbMh4CHO5nve4h3jrPO4yY/S1frv5/UR/3f3NHegKz8PWc147ix+Z
B+cMd7B+2/k9QN/DvH7WUJbHee3u/Z9u/fWwvOjz2DzWwpvSM4/3+givD331
z8NX6m37U2F5aDPW+m3v9XBeOuZxdzvTRjzPQ7ecx23FdxaaiO8j7CheUzhI
/EChpXgboT5nV/hB+99A3/uKNxP2tH4OFm9jfaJfOGfkGJ+nluIthDrM5fat
2WPrj/H2sz4b58Epa2h9871/Md7XhZLhv1m8wQtSfF9re3VuiveNOtpck0Kf
B3g9nA/ea8Y6wPpt5fOLvM1p6/a02Ve8RR59/xpD/OcUukAnL/Iee72sqal4
7TzW2vwf+tpNvK7X873K9hTfQ6ih76Lr6whbVbclxV1jjl88fmPvz/7WH/vX
2PMdlEddE8tfymMuxtzG+uR7d8YQ316o5+8qnB3vTyufj+utX3zCG1Loh7Gb
+v7slIfsjFHd+qrn9aAf7B1jtbT9aJbHXPWsz12EHThr1t83sslDeduEb0tx
XzirnNnhlq+z7/th9M3Dvu7q88r5hdemTPxDjVlFfDvhPfG3hRriOwlvin+X
oj1jfJ3C3tTydzXx51X2o2T5SXhZ/I0UfZGX9+ALoZp4VeHTFPqu4u8k/oLK
qotvL3zr/aQ/MmA/fxS2ZvHGPMz6U7RlzC9T7E8196/u+1qzGDJW9nlhbVW8
v9vlMXc17+ezGuOHLNbwnPhHKfrvLHwg/m6K/pWF//u9KiG79fGZ3zPKPre+
qMuFn8RfS8Epe9nj8/bR52Pxp/y9jfBkCn0mj/ec5/9Fsv2axf6wX/DfhM3i
jwnFYry/m1K8x+h+B+vr0RR16O8R8ZeEL9X3K+Eh8Y1+v7f6m/3aIv57Fvpl
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
Xd/K/SlrbvvL+1Tb9vhPQRFJ/Q==
             "]]}],
          Lighting->{{"Ambient", 
             RGBColor[
             0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
            "Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{2, 0, 2}]}}]}, 
        {RGBColor[0.560181, 0.691569, 0.194885], EdgeForm[None], Specularity[
          GrayLevel[1], 3], 
         StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
Cp1Z3ffPQj/rfat4Wzm0z+27NZbXKZ+bjbxHoc+mzoXGKNuuWEt2JpONOfzA
e15nRPtNMYziLvlH+aHJubhTVPQ+bGcbonuEcpXKuSn3KHtb2vbzGdAmGzkK
5TyV31OuUrGf7i+KJ99PkV/6IEWucq1txR+Ur+L53xoX6IHelmK/dfe5UL5X
ufGdPo/d0Kt8pjqjp6fISyuPrdyycnrKwytvppyS8tX75SP3q/hcsfEUny+N
d6O/9SH8j/ug+tL93beVKfJpq31+u9lGaf5b2P4od62cvHLL72r86DUp1jTj
da/kGFW2V/ahi+3Jm17r6dZ6d2qKeF55e+Wot6awY5of+YhS9n2at47oJSly
9fqfhf6PoHU5yftnHbjC8/+yzg/6yxQ5cP2/YK/rtPc8yEfofwfKi8q2XGo7
ttvtyA5o7eRH9rlN7fkVKWxgV9s3zVsvP1eOUfko5RuVY9f/FJTDV95e9x3d
sxQPNHNMoD1zuW2v8o1nZiMnqd8VdyvnNYJyJ3hZCp8v3688w1bvq09TtCVf
pPhic4q7mGy1coNtfQaVP5Q9V55Q+VLlxpRvVF5Odls5t7Xeb7Kxysu1zkb+
c5L3v9ZLucqW9jX6Vgf3YYT7L5sw0e8qN7vc51f7WX5K+c7xKeIKrZ1iLu2l
a7z3lLNVvlC5XOUudI9WPkR3Vf1PZ4/72dt7T3lC+XflEtWWYkPFJv8HyDN3
yg==
             "]], Polygon3DBox[CompressedData["
1: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
z+955D9yDzmIeo1+i/p0g+Mf+njW9sr3cV6rS1EjV3X8gfPbWeKnpqidVzke
faY9ZonP5MzEz/b737ofJt5ucP1L/OP8Vrr/rYivexyZThE/0ePscZJ4U8uH
D1JfHeV4vMXng32Q+5+0/e5t+VbaPq6xv5JTyJeHpNDVJuunvvXHmvQ3tVLI
ikxniJ9WRK4kp5xchHzbnA9q2h97Or42KkI/211/I/9lfiaGt3J+QtanvF5z
r8ecFt6PMWoY8vNhKXS52v7T3PkNmVqI78zjrJfbHuknqQWp/+gvqXeoHahB
qU+od+hv6Imoj+lf6KXp4ekv3hHOF68jzExRz1EfUVNTz9BvUxtRI9E/XuH4
Q4ym/+iT4q6ivvAiuTBFbU89vyFFvqB2Geb8gf0zTs1KfUo9ydyu9odhKWJ9
beF18ZFCI/FL/PxCitx3mvdjfzg5hPuSoUI9fEl4ze+zFjlwVIp6nl6+s+MD
8QJOz06/NM7fw30F/TP9MXsjw4IU9dXFWdxp0C98YPkaZ9Evch+ELlhjNLHR
67PnR+JLU/Ty9ICfYS9F5IaRPl/2p3dv5ff3Eb7QWS8VKot3KSL3kfOuL+K+
gv6JM+I+hPxELiHHUD/Rn/LuF/a34x2/lrpf3V9Y5vF97Z/wZfaHnT5/9qAe
Tili32dCefFj/Myax6bIT9QS1BDk/+kp7h64g5iaoh+lvifG0R+iP3rtdtZv
HedXakDqZ/r1puJNsrgvo19vjq6y6O/pl+il6JnXWd/ojzsQ7l+oZ6kdqa+p
b4kv9G6D7L+dnV8HW5/0t8jS3vbbxfOpR6g3Nlle+nf6V+6rOKvWPt/LHD+o
gcn33Ketc7zjvov7Nu6a+K2R9cczdwxH8n3y6fHiE4hp5HJhrPgYYXIe+fNt
8WnOz+Rr+HTnmzl5vMsaM8mNecTqd8hB4u/mMZd3Zou/IYwUHyGMEh/Hb3Bh
rHibFLGMOxvuV0bmMXc4cPz/0fGOfMH9SWOfF/cby/OYyzsjxBd4/dHCwjzs
6V3xec6n2Pt88QW2x5/z4PxGPUN9A3+PmOx8PM/Pe2C7+m12KXLUkjzqg5l+
3i6+VZhcihrpe+uDb0WmedQ+eehqhuXb7OeZri8+z6O24v1POQvt2SwLG+U+
6X399qrGhlIz5HHf08Tj+Hsvx6e65JAU97n03vTI3F+yHndTxORp4sNTxDJi
CvfLvf3MGvRfQ8gxWfRkzzo+1nf8oz+Y7njVMIv7QfoNakt6GO5/qa8ZYw79
4iw/E/O4D+T8uVvjDq+V8wX+18zyDU7hi82dP5CX3NLS8XeCvx+boP9Ybn0x
f4XjYVOvx/3mR3no7jVhcR79S2PHX+L3XinOer7j4TDHZ2SmP6jlePZlKe7f
yAfIwh3yc+JzU+i+np/ph7mb2iOL+8aDUrzLGgeI359ijDnc56/Lw17nUvOI
73A9hM1Rv27Mwx6Zsz6Pegn/HWd7xB/x5bGun8bY/vDB0axlfxxl/9w1Rayl
ni7x7fptouPDXO9P7fyx7Rv7H2f/XyG+TJhSCptdmsd9Justcbyh3vjU8byG
7XdSKfaYT6xwvJn6f/47w/EGf9npep4al3p6dR66meP4tcHz8aHv3E/Msf5K
zkfEwrXOH3zvXOuvvM97qfML/v1HHrL8TyZktT6JJxPziBd8K9/8Sx72hL9P
sj+ucfxDprX299GOr8THCX4mHozP4+8JDewf5K93HJ/R8TTHk/ccvzblcT5D
ShED0N8nedjyMMeLWY7XyD8jj3jaV/wlx991Pt9Jtp+NPo/JXp/13vTzYvdP
s61v+rPVjv8TbZ/kkzm2zxXOJwPFB2ET1t+AUvxGfnlb6FMKmYY73iH767Yf
zpNecZH1R/1AfF5ofyF/vCze3/r7LY+xBT4P9MvYAJ8X9Tn1LD0Y/cx055eR
1g/6Hiz+SinyGfkKXfWzv5DvGBtif8CfGEMG8hf9IrIiM38/mJLHtw/2+fH3
BcboHyt6fJz9E/38BQKw1bc=
             "]]}],
          Lighting->{{"Ambient", 
             RGBColor[0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
            "Directional", 
             RGBColor[
             0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[
             0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[
             0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
             ImageScaled[{2, 0, 2}]}}]}, 
        {RGBColor[0.922526, 0.385626, 0.209179], EdgeForm[None], Specularity[
          GrayLevel[1], 6], 
         StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
QyPbj2oT1Q6q9epnkROqpjgWvqQQ+bxsUjXCCMcv1YDKDc7NItbfiXTTN9L/
1vlQFuflDtviJ44Fn4I389wTOkPgA0h3nYcU8XFDPuLvRNu21i5bamt7ap9F
7XW3v9PK37qV3z+pc5eitn0GfleKWmZbPuoUvaOlf6+9qwhOKcS57Ogz2cLz
fsRSuievpKgNlWP8liLnV26j2Cd/2LoQtXP5LNZ4f4p8WDVs10LUL4rdyouU
vylfUmxa7d8qz3mN6++lWGdrnx3Vqppbe/DVQtQ+ihdvKjfiet8U+Yb09jj4
PuPXud4/RU74DvydFGvU+nR+lEvvD35ZiP7BPb7Xgec6gY+BM1PUOLNT5O2q
8VXr63zL1+p90sPH4LgUtX8772NXr6VLinqktW3jW+dy34MVi5HTHuK8V3N+
MsW75VNVz29nPDmLnsC8FPneXNtbG++v8uFx8IUpfif/2zmLGlk2rLq1kfPM
M4uhQ8XDNwqx7mZeu77byeu63jqRjf3s3En5W3tfK70nW1L80P4utP77Odfp
Dw4tRL2sPEHzUkx4MAsfq31XPtnFc37QqDUofqhOV+2vml1zu8n3ejm3ebkQ
+dgS51eqO17i/vMpzpr8hvo83VJ8Q/2T6YWor6f5fJW3/SsWq+ZVn6Grz472
Qj0f5cPq26hHcTR8JvgR996Dfwh+IDvLou5Qr6ardJjC98rPya92sn+QPWwp
RKxRjT/ddqh3PpFi3572M/rWdtv5C7Zh9Y6et81Lt2VswwNS1Br9HZtUI28s
RF9LPYp59iEt7UcG2W4Hgp+nqGsGg8/aF/UAKyBV4ClFb0ExQj2BdYXoKSnm
jkxRV34H/pii3vwhxRkc6LMs/fS0rvRO9XAUo3um6C+p97Wcd+0NX1mIObyR
RQ14I9Ib/iL4aIpaWL2pvvZpsmH9VnFfub36KuotqD+gWng0fHmKvoF8u/pg
v3jvxqToK0qHsiXVd9/5LPdyftvTfuwD+Gcp+nJ94H1S9CtUP6rWVg9B9Zrq
d+m2r/WpXHee83DZjPp4qovHpqiRJ4BLUtSwi63bit471aGKv8pJFK8Vayp5
/p/rXKboOcjnP5LinO7kW78WwlcP8DylQ8Ua9SXUD1EdcZznMNR6GG5fqn1U
30B1vXoFI+0/tae7nAeqPlJvRD3GSbYf9TBVp6suU59TcVP9qzq2YfUNZmRR
g8t3yOfKl9RlvAE8Fdyj84es0TdKAtdmUbOr96IaOV8Sz2cl0ZeYA6/q+l17
p3q8HuON8NPAw5Ap8MPBGu4J1CpG3a0+j2pt1ctb7RvVN1Bdr37mOrBMScxB
fU/1d7dn0b8p7x7ORr63CqzD89WKMeejwbOKES9Ugx9RjHVpnmVL4p16d64Y
fjtfjPf8kUUsyHldqutXWye7s/D/w7Pw85qvYpHmol6Beizqj9Xnt5vgpxej
P6O170oxnxXwpp6n+sbVwQyZ6zloHYpHO7PYi93+9vos5q05Kx6N8jvVk1nt
50r3TL87yv0r9ViqIIut/5x1qfVrXxbBD7V+5lpvVdzLUi+oQTF6ZmeAx3s/
ankf13r+9fx+rbekJOxCe6++tPpX6nXP8ZwVx7Ve9WHK+53qXZ9YjN74ZM/n
pGKsWdcVN7XPDcGzi7H/TX1ftii9KE9Q3159Qum+XEnMpbZt/uRixFXlMPfZ
9u/1uIP9uXIbxTjFfD3b2T5feUg3+0/FhQH2jfLb6vno/x3qC2k+Gzyncu41
ykZH2WaUb0xM0V+Vz9F3FEsVbxR31DfT/w4auD/W0Par9cru67tHp71Qvqqz
q/8LlFjfWndP+z3FDvVvm8Avtn+Tv5IfviFFvnqT/Xkf+y71VBXzVR8pj1Xe
qZ5nF89ReYFyJ/1PQX1a5c/KS29x3FH8/dlr7Acf4t8qp+hqP7PIPkF9Rf3/
Rb3rrT536k9Kb1qHdHcKz80EDyxGP1ZxRL3fU3yOtKday+PSY4pcTj29SrYf
/Z9FPk39cPUe1dPW2drl8yVbWgmeUwzfIj3v8B5Kn7Lj/wLjBcur
             "]], Polygon3DBox[CompressedData["
1:eJwtmXf81+Maxr/5fRKf55NKlCikQUhCEik7M+M4jnk4zl6cgbIqIhKRoqh0
SlGkgUqUUhoa0rAqbe1Fe5Drfe7rj+v1vT7Pvp/nucdzf2vffe8N9xxUKpUm
liuVMv3uSaXSJyKThL3ixxWl0nfiS4Tjxd9Q2eviA4TXxT/IS6XDxasIo8Q/
Udk48Y+Ej8VbqM9u8V3C+eKjVDZYfIgwWvx/wqvivYX+4muFKeKfCt+Lb9aY
x4vXFraIv0of8X5CT/HPVFZRvBCmiQ9TWQ/xl4Th4mvyqKPNWvHFKWRDxm/F
P/J4/YVx4n2EV7JYU1/xRlrzj+I/CKeKj0kxN30+ED9HZTvEtwtNxdtbHsZ4
RPxJ4UXxbsLj4iu8P+OFleI/eT2ThZ/Fq2uMReKLhaPEqwjTxKcLh4svSbG3
jLFU/GWhq/jz3o9vhBHiIy3fc0JH8SeErpyd9iATL0MG8R4q6yneiz0Tn62y
SuKVhc/FewrluBhCD/F3hQriB7O/4l2En8skh9BWfJfGmKG6mcJuyzdffJ7v
01ZhtPgY9lT8Ism0Tny9cLH4xxojFz+UOyT+X7XpJP6UcJ/4JWqzj7HcfrDa
7Nfc+4Q3xO9Xm0dV1054QHxqHnW04X78Q2XPqq6L8HfxPwmdxZ8W/pjifrGX
L3Anxd/PQ/Zyvt9z8pCdPfhC/EG37+r52nu8Z4QOKepZS3vhIfGHU8zV2fdj
vvfzEGFBHvrEXAcJY8X7Cnu09t3Cq+I1ithL9vRo8a0qq85dYT/FN2vML8Tn
CBvEpyGD+HvolO/rKnRLaCbeWPiGuyKcIX6o8JX4l5yxeC23X+n5KgnLxZeh
c+JLNecx1HFnxYdqjmHi76Dj4p+q7EjxI9A58bOLGGuV9QX9466OsD7NFiZg
O4QZ4nWKsD1LhbqsTWVjxT8UvhafIwwSf4PzEC9ze2xWSfyAymaJz/b3H/Td
Rrytz7uBytaIrxbqW172doFwbBH3g7YPCn/2+Iz1uZCJj1fZW+JvZ2HvsH/w
ocIk8e15nE0NYUce9o56+vS1fFvEN2dhX7EPjD/L+j3f/av7vi32fr2LjOL7
89h7zuAn8SoqO0m8AfZC/Ms8bDM2+ivxhSl0c4b3bwc2PIs9fVd8XgpbM836
uSqFLcY+LU9hv2lLn24pzoOxPnP/8bZPnM+H2PIUtm6c94P5qaPNItsD5poq
bBJflmKuSZZvZApbMdrnO9b9WQP+Y5/lYb/2i1csYizGPEx8Y4pvfMq6FPd7
iufLxcsVMR8yHiRevgg+xfd/cIq7zHkOwt+kuJvINNX2Fl8yEZ0R76893lsW
OvtaHvYMTtkE8UmuxyZNFh9k+0TZAPHeeeg+NqCX+Id56D5jYA8X5WEbc+vb
S9hc1e0UXhRf7f1mjWvwVXnYesbsI97d9uyA2r8gvt7yTLC9+DGFLMi0M4U9
mWD5tojPdT1ln4ufKDQVP0c4CV3QmBs19ib7g6H2D8z3jviIPDhrGCk+MMXe
ohP9fV+G2n5M9X7Dh9kenFKE7cEG4Y9r2J6sEKoV4a+X+/t08apFcMoqi9cr
QtexfyfY/uF/1gqnidcuom6V9f+CIupoc2ER8cwat28pfkQRvot67GfzImKd
ncJ5RfjzjeytsF3rP0bfm7Iow7+fJSzMwudvt3zEGlvZT/EzhW1ZxCDIg/0k
1qCsifi5RcxFDNLM692TRczF+hp6/az5ZK9vtb/Pd3/kXe319rE9Iz57xfoG
f8v6TLxA/Pam8C/xXq6njPjhPWKSLGIK6hekaDvY9mKEMNzn+Y74CylsNzZ8
uO0/dcN9v9baf42y/qLPo2wPsBeTU/g27OFE7moKjo0cZ/tFPWMQT47Ow9fi
c9/LI54b4fnex5Z4fNpPtz1iPMZYbn8z2uuZZX2g7wjrP/Eytpwzrin+tedD
Z7/Jw1+iu0lYJl5bfU4Vb8h9FK+Xgp8m1Bc/JAWnrDz6qT5niDfOIh6uyJxZ
xMgz8oiXqTvd3+OEqlnYf+KJ5Xn4YnzyCvHvXE/ZEvGdwplZzLGNuhScsiPE
f1ZZXfF6wgFsVQpeXygTX6eyE/29WrwWdzoLGY+1Pzohi3h+nvhxKmsifjYy
eHy+zxL2eXzqmng+1s98db3e6UI1yzNFfKLlQ6bxecSz7A17NITYV+PVFK/l
/Vxk/1nD57M7D07ZnjzOj298MPFZKYWvZYxy4ivz4Mf4POfmIRtzEj9/7/in
mvdjo3BYFjH2EMeT1V0/S3xmHrE0NvPpPM6b8U7weWA/K7s/9vR9+3fKRtre
Uscc9Of9U8vrXeX10baK93+d9481bPJ9YG/rCAu9Xw19fsh7cIqz5YwrpPA/
q7XWNcLL4nV8XviEuuJPqWyl6lYJz+ThH9eJr7e/w//BNzh+78aelcWY+LPO
+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
             "]]}],
          Lighting->{{"Ambient", 
             RGBColor[0.30756835, 0.18676585, 0.147065275]}, {"Directional", 
             RGBColor[0.2306315, 0.0964065, 0.05229475], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             GrayLevel[0.3], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[0.2306315, 0.0964065, 0.05229475], 
             ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}, {}, {}}, {
        {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0L0uw1EYwOHjo61vrRuQViJmrSrVaqsiVgmrMCAGRsbGpHEFuomtvQQm
toYbkNTAztAL4PmH4ZfnJCfnnJw3fXi+czYQQjjQoKL1jGZjIcyxwly0z01e
cY/3POYzL/nJJlvqKBEP4ZELfOU233nKb97E/x7rMMUuM8wqpyXltayCVrSq
otZUUlnrqqiqmja0qDf3pdlmkk3+ePKEX9xij/N8YYwPbOtWff+55gcv+MQj
3nGXDda5zyzLzDClpKY1pUlNaFxjGtVINB9FI3AsDGvof/6/GFgkeQ==
          "]]}, 
        {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0DkvxEEYwOF3FShkaURrP4DIKkTtvtaxuyJKYpU2Crvu+yrp1jdARUul
phMdH4FKlHj+UfzyzGQmk5nJLJTzy6mImNeAQb9m9FEfscR0Q0SVnTzjFC+5
whte8IF3fOa7PvVq/stvttRFtDVGZNjDLs6xj+ssssYSK6pqLVnThja1pW3t
aFd72teBDnWkY51oVVfOW0zOYYGz7GU3s2xlO7/cr5kv/EnerTc9mj/xlvc8
5zXLrHGCp+xghU0ssaiC8ppO/kuTyX7lNK4xjWpEwxrSYOr///8A5SYvjw==

          "]]}, 
        {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0LsuA1AYwPFPiWDgBcRlECsPIMLAXjtxiZEFI5NrUdfWKgb1Btq6q/sb
YBMbTyAVv8bwzy/nDF/O+drHppNTVRExqpVExLIOVKyLOOE7CyzzhS317tjL
b47wlwtsqo5oU7eOnPtZ4hA/OcHahohZdnKJg8xykjnmVVBRZzrXhS51pWvd
6LYyW3e614Me9aRTzZl3zAFm2MFF1nCGH94zXpnFJA/Zxy61Ku3cyHmW/W+Y
X+zhG5v5zB97yfOVOWaV0b72tKsdbWtLaW1qQ+tKaU2rif/9/wHO2Dql
          "]]}, 
        {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0L0uw1EYwOG3/q2P/lsTK7ETBhdAYmTQ3aB2jXAJDDaRcAmITQxcgqrP
qo/WHbQ2MWnxJIZfnrwnOeck70S5UlrPRMSqaknEtd61m4/44Cl7rHE464zj
LKYRM5ziPJdY4pq2tGHe4T4Pec5jNnjJL1Y5WohocZYddtXTj34VuYiM+pQo
q5z6NaBBDSmvVAV9u7fgvTZH2OSn/65Y5wXPeMQ9HrDCbW6qrBXzMhc5x0lO
M+UY2/ZQZJVd+zlhhy019aZXvehZDT2prkc96F53utVN8r//P9rAOMg=
          "]]}, 
        {GrayLevel[0.2], 
         Line3DBox[{1311, 1293, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 
          1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1312, 1315, 1316, 
          1319, 1320, 1323, 1324, 1327, 1328, 1331, 1332, 1335, 1336, 1339, 
          1340, 1342}], 
         Line3DBox[{1344, 1294, 1313, 1314, 1317, 1318, 1321, 1322, 1325, 
          1326, 1329, 1330, 1333, 1334, 1337, 1338, 1341, 1345, 1348, 1349, 
          1352, 1353, 1356, 1357, 1360, 1361, 1364, 1365, 1368, 1369, 1372, 
          1373, 1375}], 
         Line3DBox[{1377, 1310, 1346, 1347, 1350, 1351, 1354, 1355, 1358, 
          1359, 1362, 1363, 1366, 1367, 1370, 1371, 1374, 1378, 1381, 1382, 
          1385, 1386, 1389, 1390, 1393, 1394, 1397, 1398, 1401, 1402, 1405, 
          1406, 1408}], 
         Line3DBox[{1410, 1343, 1379, 1380, 1383, 1384, 1387, 1388, 1391, 
          1392, 1395, 1396, 1399, 1400, 1403, 1404, 1407, 1411, 1414, 1415, 
          1418, 1419, 1422, 1423, 1426, 1427, 1430, 1431, 1434, 1435, 1438, 
          1439, 1441}], 
         Line3DBox[{1443, 1376, 1412, 1413, 1416, 1417, 1420, 1421, 1424, 
          1425, 1428, 1429, 1432, 1433, 1436, 1437, 1440, 1444, 1447, 1448, 
          1451, 1452, 1455, 1456, 1459, 1460, 1463, 1464, 1467, 1468, 1471, 
          1472, 1474}], 
         Line3DBox[{1475, 1409, 1445, 1446, 1449, 1450, 1453, 1454, 1457, 
          1458, 1461, 1462, 1465, 1466, 1469, 1470, 1473, 1476, 1479, 1480, 
          1483, 1484, 1487, 1488, 1491, 1492, 1495, 1496, 1499, 1500, 1503, 
          1504, 1506}], 
         Line3DBox[{1507, 1442, 1477, 1478, 1481, 1482, 1485, 1486, 1489, 
          1490, 1493, 1494, 1497, 1498, 1501, 1502, 1505, 1508, 1509, 1510, 
          1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 
          1522, 1523}], 
         Line3DBox[{154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 
          165, 166, 167, 168, 169, 170}], 
         Line3DBox[{1541, 1572, 1571, 1568, 1567, 1564, 1563, 1560, 1559, 
          1556, 1555, 1552, 1551, 1548, 1547, 1544, 1540, 1539, 1538, 1537, 
          1536, 1535, 1534, 1533, 1532, 1531, 1530, 1529, 1528, 1527, 1526, 
          1524, 1543}], 
         Line3DBox[{1574, 1605, 1604, 1601, 1600, 1597, 1596, 1593, 1592, 
          1589, 1588, 1585, 1584, 1581, 1580, 1577, 1573, 1570, 1569, 1566, 
          1565, 1562, 1561, 1558, 1557, 1554, 1553, 1550, 1549, 1546, 1545, 
          1525, 1576}], 
         Line3DBox[{1607, 1638, 1637, 1634, 1633, 1630, 1629, 1626, 1625, 
          1622, 1621, 1618, 1617, 1614, 1613, 1610, 1606, 1603, 1602, 1599, 
          1598, 1595, 1594, 1591, 1590, 1587, 1586, 1583, 1582, 1579, 1578, 
          1542, 1609}], 
         Line3DBox[{1640, 1671, 1670, 1667, 1666, 1663, 1662, 1659, 1658, 
          1655, 1654, 1651, 1650, 1647, 1646, 1643, 1639, 1636, 1635, 1632, 
          1631, 1628, 1627, 1624, 1623, 1620, 1619, 1616, 1615, 1612, 1611, 
          1575, 1642}], 
         Line3DBox[{1673, 1704, 1703, 1700, 1699, 1696, 1695, 1692, 1691, 
          1688, 1687, 1684, 1683, 1680, 1679, 1676, 1672, 1669, 1668, 1665, 
          1664, 1661, 1660, 1657, 1656, 1653, 1652, 1649, 1648, 1645, 1644, 
          1608, 1675}], 
         Line3DBox[{1706, 1736, 1735, 1732, 1731, 1728, 1727, 1724, 1723, 
          1720, 1719, 1716, 1715, 1712, 1711, 1708, 1705, 1702, 1701, 1698, 
          1697, 1694, 1693, 1690, 1689, 1686, 1685, 1682, 1681, 1678, 1677, 
          1641, 1707}], 
         Line3DBox[{1738, 1674, 1709, 1710, 1713, 1714, 1717, 1718, 1721, 
          1722, 1725, 1726, 1729, 1730, 1733, 1734, 1737, 1739, 1740, 1741, 
          1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 
          1753, 1754}], 
         Line3DBox[{1773, 1755, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 
          1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1777, 1778, 
          1781, 1782, 1785, 1786, 1789, 1790, 1793, 1794, 1797, 1798, 1801, 
          1802, 1804}], 
         Line3DBox[{1806, 1756, 1775, 1776, 1779, 1780, 1783, 1784, 1787, 
          1788, 1791, 1792, 1795, 1796, 1799, 1800, 1803, 1807, 1810, 1811, 
          1814, 1815, 1818, 1819, 1822, 1823, 1826, 1827, 1830, 1831, 1834, 
          1835, 1837}], 
         Line3DBox[{1839, 1772, 1808, 1809, 1812, 1813, 1816, 1817, 1820, 
          1821, 1824, 1825, 1828, 1829, 1832, 1833, 1836, 1840, 1843, 1844, 
          1847, 1848, 1851, 1852, 1855, 1856, 1859, 1860, 1863, 1864, 1867, 
          1868, 1870}], 
         Line3DBox[{1872, 1805, 1841, 1842, 1845, 1846, 1849, 1850, 1853, 
          1854, 1857, 1858, 1861, 1862, 1865, 1866, 1869, 1873, 1876, 1877, 
          1880, 1881, 1884, 1885, 1888, 1889, 1892, 1893, 1896, 1897, 1900, 
          1901, 1903}], 
         Line3DBox[{1905, 1838, 1874, 1875, 1878, 1879, 1882, 1883, 1886, 
          1887, 1890, 1891, 1894, 1895, 1898, 1899, 1902, 1906, 1909, 1910, 
          1913, 1914, 1917, 1918, 1921, 1922, 1925, 1926, 1929, 1930, 1933, 
          1934, 1936}], 
         Line3DBox[{1937, 1871, 1907, 1908, 1911, 1912, 1915, 1916, 1919, 
          1920, 1923, 1924, 1927, 1928, 1931, 1932, 1935, 1938, 1941, 1942, 
          1945, 1946, 1949, 1950, 1953, 1954, 1957, 1958, 1961, 1962, 1965, 
          1966, 1968}], 
         Line3DBox[{1969, 1904, 1939, 1940, 1943, 1944, 1947, 1948, 1951, 
          1952, 1955, 1956, 1959, 1960, 1963, 1964, 1967, 1970, 1971, 1972, 
          1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 
          1984, 1985}], 
         Line3DBox[{477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 
          488, 489, 490, 491, 492, 493}], 
         Line3DBox[{2003, 2034, 2033, 2030, 2029, 2026, 2025, 2022, 2021, 
          2018, 2017, 2014, 2013, 2010, 2009, 2006, 2002, 2001, 2000, 1999, 
          1998, 1997, 1996, 1995, 1994, 1993, 1992, 1991, 1990, 1989, 1988, 
          1986, 2005}], 
         Line3DBox[{2036, 2067, 2066, 2063, 2062, 2059, 2058, 2055, 2054, 
          2051, 2050, 2047, 2046, 2043, 2042, 2039, 2035, 2032, 2031, 2028, 
          2027, 2024, 2023, 2020, 2019, 2016, 2015, 2012, 2011, 2008, 2007, 
          1987, 2038}], 
         Line3DBox[{2069, 2100, 2099, 2096, 2095, 2092, 2091, 2088, 2087, 
          2084, 2083, 2080, 2079, 2076, 2075, 2072, 2068, 2065, 2064, 2061, 
          2060, 2057, 2056, 2053, 2052, 2049, 2048, 2045, 2044, 2041, 2040, 
          2004, 2071}], 
         Line3DBox[{2102, 2133, 2132, 2129, 2128, 2125, 2124, 2121, 2120, 
          2117, 2116, 2113, 2112, 2109, 2108, 2105, 2101, 2098, 2097, 2094, 
          2093, 2090, 2089, 2086, 2085, 2082, 2081, 2078, 2077, 2074, 2073, 
          2037, 2104}], 
         Line3DBox[{2135, 2166, 2165, 2162, 2161, 2158, 2157, 2154, 2153, 
          2150, 2149, 2146, 2145, 2142, 2141, 2138, 2134, 2131, 2130, 2127, 
          2126, 2123, 2122, 2119, 2118, 2115, 2114, 2111, 2110, 2107, 2106, 
          2070, 2137}], 
         Line3DBox[{2168, 2198, 2197, 2194, 2193, 2190, 2189, 2186, 2185, 
          2182, 2181, 2178, 2177, 2174, 2173, 2170, 2167, 2164, 2163, 2160, 
          2159, 2156, 2155, 2152, 2151, 2148, 2147, 2144, 2143, 2140, 2139, 
          2103, 2169}], 
         Line3DBox[{2200, 2136, 2171, 2172, 2175, 2176, 2179, 2180, 2183, 
          2184, 2187, 2188, 2191, 2192, 2195, 2196, 2199, 2201, 2202, 2203, 
          2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 
          2215, 2216}], 
         Line3DBox[{2235, 2217, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 
          2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2236, 2239, 2240, 
          2243, 2244, 2247, 2248, 2251, 2252, 2255, 2256, 2259, 2260, 2263, 
          2264, 2266}], 
         Line3DBox[{2268, 2218, 2237, 2238, 2241, 2242, 2245, 2246, 2249, 
          2250, 2253, 2254, 2257, 2258, 2261, 2262, 2265, 2269, 2272, 2273, 
          2276, 2277, 2280, 2281, 2284, 2285, 2288, 2289, 2292, 2293, 2296, 
          2297, 2299}], 
         Line3DBox[{2301, 2234, 2270, 2271, 2274, 2275, 2278, 2279, 2282, 
          2283, 2286, 2287, 2290, 2291, 2294, 2295, 2298, 2302, 2305, 2306, 
          2309, 2310, 2313, 2314, 2317, 2318, 2321, 2322, 2325, 2326, 2329, 
          2330, 2332}], 
         Line3DBox[{2334, 2267, 2303, 2304, 2307, 2308, 2311, 2312, 2315, 
          2316, 2319, 2320, 2323, 2324, 2327, 2328, 2331, 2335, 2338, 2339, 
          2342, 2343, 2346, 2347, 2350, 2351, 2354, 2355, 2358, 2359, 2362, 
          2363, 2365}], 
         Line3DBox[{2367, 2300, 2336, 2337, 2340, 2341, 2344, 2345, 2348, 
          2349, 2352, 2353, 2356, 2357, 2360, 2361, 2364, 2368, 2371, 2372, 
          2375, 2376, 2379, 2380, 2383, 2384, 2387, 2388, 2391, 2392, 2395, 
          2396, 2398}], 
         Line3DBox[{2399, 2333, 2369, 2370, 2373, 2374, 2377, 2378, 2381, 
          2382, 2385, 2386, 2389, 2390, 2393, 2394, 2397, 2400, 2403, 2404, 
          2407, 2408, 2411, 2412, 2415, 2416, 2419, 2420, 2423, 2424, 2427, 
          2428, 2430}], 
         Line3DBox[{2431, 2366, 2401, 2402, 2405, 2406, 2409, 2410, 2413, 
          2414, 2417, 2418, 2421, 2422, 2425, 2426, 2429, 2432, 2433, 2434, 
          2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 
          2446, 2447}], 
         Line3DBox[{800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 
          811, 812, 813, 814, 815, 816}], 
         Line3DBox[{2465, 2496, 2495, 2492, 2491, 2488, 2487, 2484, 2483, 
          2480, 2479, 2476, 2475, 2472, 2471, 2468, 2464, 2463, 2462, 2461, 
          2460, 2459, 2458, 2457, 2456, 2455, 2454, 2453, 2452, 2451, 2450, 
          2448, 2467}], 
         Line3DBox[{2498, 2529, 2528, 2525, 2524, 2521, 2520, 2517, 2516, 
          2513, 2512, 2509, 2508, 2505, 2504, 2501, 2497, 2494, 2493, 2490, 
          2489, 2486, 2485, 2482, 2481, 2478, 2477, 2474, 2473, 2470, 2469, 
          2449, 2500}], 
         Line3DBox[{2531, 2562, 2561, 2558, 2557, 2554, 2553, 2550, 2549, 
          2546, 2545, 2542, 2541, 2538, 2537, 2534, 2530, 2527, 2526, 2523, 
          2522, 2519, 2518, 2515, 2514, 2511, 2510, 2507, 2506, 2503, 2502, 
          2466, 2533}], 
         Line3DBox[{2564, 2595, 2594, 2591, 2590, 2587, 2586, 2583, 2582, 
          2579, 2578, 2575, 2574, 2571, 2570, 2567, 2563, 2560, 2559, 2556, 
          2555, 2552, 2551, 2548, 2547, 2544, 2543, 2540, 2539, 2536, 2535, 
          2499, 2566}], 
         Line3DBox[{2597, 2628, 2627, 2624, 2623, 2620, 2619, 2616, 2615, 
          2612, 2611, 2608, 2607, 2604, 2603, 2600, 2596, 2593, 2592, 2589, 
          2588, 2585, 2584, 2581, 2580, 2577, 2576, 2573, 2572, 2569, 2568, 
          2532, 2599}], 
         Line3DBox[{2630, 2660, 2659, 2656, 2655, 2652, 2651, 2648, 2647, 
          2644, 2643, 2640, 2639, 2636, 2635, 2632, 2629, 2626, 2625, 2622, 
          2621, 2618, 2617, 2614, 2613, 2610, 2609, 2606, 2605, 2602, 2601, 
          2565, 2631}], 
         Line3DBox[{2662, 2598, 2633, 2634, 2637, 2638, 2641, 2642, 2645, 
          2646, 2649, 2650, 2653, 2654, 2657, 2658, 2661, 2663, 2664, 2665, 
          2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 
          2677, 2678}], 
         Line3DBox[{2697, 2679, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 
          2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2698, 2701, 2702, 
          2705, 2706, 2709, 2710, 2713, 2714, 2717, 2718, 2721, 2722, 2725, 
          2726, 2728}], 
         Line3DBox[{2730, 2680, 2699, 2700, 2703, 2704, 2707, 2708, 2711, 
          2712, 2715, 2716, 2719, 2720, 2723, 2724, 2727, 2731, 2734, 2735, 
          2738, 2739, 2742, 2743, 2746, 2747, 2750, 2751, 2754, 2755, 2758, 
          2759, 2761}], 
         Line3DBox[{2763, 2696, 2732, 2733, 2736, 2737, 2740, 2741, 2744, 
          2745, 2748, 2749, 2752, 2753, 2756, 2757, 2760, 2764, 2767, 2768, 
          2771, 2772, 2775, 2776, 2779, 2780, 2783, 2784, 2787, 2788, 2791, 
          2792, 2794}], 
         Line3DBox[{2796, 2729, 2765, 2766, 2769, 2770, 2773, 2774, 2777, 
          2778, 2781, 2782, 2785, 2786, 2789, 2790, 2793, 2797, 2800, 2801, 
          2804, 2805, 2808, 2809, 2812, 2813, 2816, 2817, 2820, 2821, 2824, 
          2825, 2827}], 
         Line3DBox[{2829, 2762, 2798, 2799, 2802, 2803, 2806, 2807, 2810, 
          2811, 2814, 2815, 2818, 2819, 2822, 2823, 2826, 2830, 2833, 2834, 
          2837, 2838, 2841, 2842, 2845, 2846, 2849, 2850, 2853, 2854, 2857, 
          2858, 2860}], 
         Line3DBox[{2861, 2795, 2831, 2832, 2835, 2836, 2839, 2840, 2843, 
          2844, 2847, 2848, 2851, 2852, 2855, 2856, 2859, 2862, 2865, 2866, 
          2869, 2870, 2873, 2874, 2877, 2878, 2881, 2882, 2885, 2886, 2889, 
          2890, 2892}], 
         Line3DBox[{2893, 2828, 2863, 2864, 2867, 2868, 2871, 2872, 2875, 
          2876, 2879, 2880, 2883, 2884, 2887, 2888, 2891, 2894, 2895, 2896, 
          2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 2906, 2907, 
          2908, 2909}], 
         Line3DBox[{1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 
          1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139}], 
         Line3DBox[{2927, 2958, 2957, 2954, 2953, 2950, 2949, 2946, 2945, 
          2942, 2941, 2938, 2937, 2934, 2933, 2930, 2926, 2925, 2924, 2923, 
          2922, 2921, 2920, 2919, 2918, 2917, 2916, 2915, 2914, 2913, 2912, 
          2910, 2929}], 
         Line3DBox[{2960, 2991, 2990, 2987, 2986, 2983, 2982, 2979, 2978, 
          2975, 2974, 2971, 2970, 2967, 2966, 2963, 2959, 2956, 2955, 2952, 
          2951, 2948, 2947, 2944, 2943, 2940, 2939, 2936, 2935, 2932, 2931, 
          2911, 2962}], 
         Line3DBox[{2993, 3024, 3023, 3020, 3019, 3016, 3015, 3012, 3011, 
          3008, 3007, 3004, 3003, 3000, 2999, 2996, 2992, 2989, 2988, 2985, 
          2984, 2981, 2980, 2977, 2976, 2973, 2972, 2969, 2968, 2965, 2964, 
          2928, 2995}], 
         Line3DBox[{3026, 3057, 3056, 3053, 3052, 3049, 3048, 3045, 3044, 
          3041, 3040, 3037, 3036, 3033, 3032, 3029, 3025, 3022, 3021, 3018, 
          3017, 3014, 3013, 3010, 3009, 3006, 3005, 3002, 3001, 2998, 2997, 
          2961, 3028}], 
         Line3DBox[{3059, 3090, 3089, 3086, 3085, 3082, 3081, 3078, 3077, 
          3074, 3073, 3070, 3069, 3066, 3065, 3062, 3058, 3055, 3054, 3051, 
          3050, 3047, 3046, 3043, 3042, 3039, 3038, 3035, 3034, 3031, 3030, 
          2994, 3061}], 
         Line3DBox[{3092, 3122, 3121, 3118, 3117, 3114, 3113, 3110, 3109, 
          3106, 3105, 3102, 3101, 3098, 3097, 3094, 3091, 3088, 3087, 3084, 
          3083, 3080, 3079, 3076, 3075, 3072, 3071, 3068, 3067, 3064, 3063, 
          3027, 3093}], 
         Line3DBox[{3124, 3060, 3095, 3096, 3099, 3100, 3103, 3104, 3107, 
          3108, 3111, 3112, 3115, 3116, 3119, 3120, 3123, 3125, 3126, 3127, 
          3128, 3129, 3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3138, 
          3139, 3140}]}, 
        {GrayLevel[0.2], 
         Line3DBox[{2, 19, 1295, 36, 1313, 53, 1346, 70, 1379, 87, 1412, 104, 
          1445, 121, 1477, 138, 155, 172, 1526, 189, 1545, 206, 1578, 223, 
          1611, 240, 1644, 257, 1677, 274, 1709, 291, 308}], 
         Line3DBox[{3, 20, 1297, 37, 1317, 54, 1350, 71, 1383, 88, 1416, 105, 
          1449, 122, 1481, 139, 156, 173, 1528, 190, 1549, 207, 1582, 224, 
          1615, 241, 1648, 258, 1681, 275, 1713, 292, 309}], 
         Line3DBox[{4, 21, 1299, 38, 1321, 55, 1354, 72, 1387, 89, 1420, 106, 
          1453, 123, 1485, 140, 157, 174, 1530, 191, 1553, 208, 1586, 225, 
          1619, 242, 1652, 259, 1685, 276, 1717, 293, 310}], 
         Line3DBox[{5, 22, 1301, 39, 1325, 56, 1358, 73, 1391, 90, 1424, 107, 
          1457, 124, 1489, 141, 158, 175, 1532, 192, 1557, 209, 1590, 226, 
          1623, 243, 1656, 260, 1689, 277, 1721, 294, 311}], 
         Line3DBox[{6, 23, 1303, 40, 1329, 57, 1362, 74, 1395, 91, 1428, 108, 
          1461, 125, 1493, 142, 159, 176, 1534, 193, 1561, 210, 1594, 227, 
          1627, 244, 1660, 261, 1693, 278, 1725, 295, 312}], 
         Line3DBox[{7, 24, 1305, 41, 1333, 58, 1366, 75, 1399, 92, 1432, 109, 
          1465, 126, 1497, 143, 160, 177, 1536, 194, 1565, 211, 1598, 228, 
          1631, 245, 1664, 262, 1697, 279, 1729, 296, 313}], 
         Line3DBox[{8, 25, 1307, 42, 1337, 59, 1370, 76, 1403, 93, 1436, 110, 
          1469, 127, 1501, 144, 161, 178, 1538, 195, 1569, 212, 1602, 229, 
          1635, 246, 1668, 263, 1701, 280, 1733, 297, 314}], 
         Line3DBox[{9, 26, 1309, 43, 1341, 60, 1374, 77, 1407, 94, 1440, 111, 
          1473, 128, 1505, 145, 162, 179, 1540, 196, 1573, 213, 1606, 230, 
          1639, 247, 1672, 264, 1705, 281, 1737, 298, 315}], 
         Line3DBox[{10, 27, 1315, 44, 1348, 61, 1381, 78, 1414, 95, 1447, 112,
           1479, 129, 1509, 146, 163, 180, 1547, 197, 1580, 214, 1613, 231, 
          1646, 248, 1679, 265, 1711, 282, 1740, 299, 316}], 
         Line3DBox[{11, 28, 1319, 45, 1352, 62, 1385, 79, 1418, 96, 1451, 113,
           1483, 130, 1511, 147, 164, 181, 1551, 198, 1584, 215, 1617, 232, 
          1650, 249, 1683, 266, 1715, 283, 1742, 300, 317}], 
         Line3DBox[{12, 29, 1323, 46, 1356, 63, 1389, 80, 1422, 97, 1455, 114,
           1487, 131, 1513, 148, 165, 182, 1555, 199, 1588, 216, 1621, 233, 
          1654, 250, 1687, 267, 1719, 284, 1744, 301, 318}], 
         Line3DBox[{13, 30, 1327, 47, 1360, 64, 1393, 81, 1426, 98, 1459, 115,
           1491, 132, 1515, 149, 166, 183, 1559, 200, 1592, 217, 1625, 234, 
          1658, 251, 1691, 268, 1723, 285, 1746, 302, 319}], 
         Line3DBox[{14, 31, 1331, 48, 1364, 65, 1397, 82, 1430, 99, 1463, 116,
           1495, 133, 1517, 150, 167, 184, 1563, 201, 1596, 218, 1629, 235, 
          1662, 252, 1695, 269, 1727, 286, 1748, 303, 320}], 
         Line3DBox[{15, 32, 1335, 49, 1368, 66, 1401, 83, 1434, 100, 1467, 
          117, 1499, 134, 1519, 151, 168, 185, 1567, 202, 1600, 219, 1633, 
          236, 1666, 253, 1699, 270, 1731, 287, 1750, 304, 321}], 
         Line3DBox[{16, 33, 1339, 50, 1372, 67, 1405, 84, 1438, 101, 1471, 
          118, 1503, 135, 1521, 152, 169, 186, 1571, 203, 1604, 220, 1637, 
          237, 1670, 254, 1703, 271, 1735, 288, 1752, 305, 322}], 
         Line3DBox[{325, 342, 1757, 359, 1775, 376, 1808, 393, 1841, 410, 
          1874, 427, 1907, 444, 1939, 461, 478, 495, 1988, 512, 2007, 529, 
          2040, 546, 2073, 563, 2106, 580, 2139, 597, 2171, 614, 631}], 
         Line3DBox[{326, 343, 1759, 360, 1779, 377, 1812, 394, 1845, 411, 
          1878, 428, 1911, 445, 1943, 462, 479, 496, 1990, 513, 2011, 530, 
          2044, 547, 2077, 564, 2110, 581, 2143, 598, 2175, 615, 632}], 
         Line3DBox[{327, 344, 1761, 361, 1783, 378, 1816, 395, 1849, 412, 
          1882, 429, 1915, 446, 1947, 463, 480, 497, 1992, 514, 2015, 531, 
          2048, 548, 2081, 565, 2114, 582, 2147, 599, 2179, 616, 633}], 
         Line3DBox[{328, 345, 1763, 362, 1787, 379, 1820, 396, 1853, 413, 
          1886, 430, 1919, 447, 1951, 464, 481, 498, 1994, 515, 2019, 532, 
          2052, 549, 2085, 566, 2118, 583, 2151, 600, 2183, 617, 634}], 
         Line3DBox[{329, 346, 1765, 363, 1791, 380, 1824, 397, 1857, 414, 
          1890, 431, 1923, 448, 1955, 465, 482, 499, 1996, 516, 2023, 533, 
          2056, 550, 2089, 567, 2122, 584, 2155, 601, 2187, 618, 635}], 
         Line3DBox[{330, 347, 1767, 364, 1795, 381, 1828, 398, 1861, 415, 
          1894, 432, 1927, 449, 1959, 466, 483, 500, 1998, 517, 2027, 534, 
          2060, 551, 2093, 568, 2126, 585, 2159, 602, 2191, 619, 636}], 
         Line3DBox[{331, 348, 1769, 365, 1799, 382, 1832, 399, 1865, 416, 
          1898, 433, 1931, 450, 1963, 467, 484, 501, 2000, 518, 2031, 535, 
          2064, 552, 2097, 569, 2130, 586, 2163, 603, 2195, 620, 637}], 
         Line3DBox[{332, 349, 1771, 366, 1803, 383, 1836, 400, 1869, 417, 
          1902, 434, 1935, 451, 1967, 468, 485, 502, 2002, 519, 2035, 536, 
          2068, 553, 2101, 570, 2134, 587, 2167, 604, 2199, 621, 638}], 
         Line3DBox[{333, 350, 1777, 367, 1810, 384, 1843, 401, 1876, 418, 
          1909, 435, 1941, 452, 1971, 469, 486, 503, 2009, 520, 2042, 537, 
          2075, 554, 2108, 571, 2141, 588, 2173, 605, 2202, 622, 639}], 
         Line3DBox[{334, 351, 1781, 368, 1814, 385, 1847, 402, 1880, 419, 
          1913, 436, 1945, 453, 1973, 470, 487, 504, 2013, 521, 2046, 538, 
          2079, 555, 2112, 572, 2145, 589, 2177, 606, 2204, 623, 640}], 
         Line3DBox[{335, 352, 1785, 369, 1818, 386, 1851, 403, 1884, 420, 
          1917, 437, 1949, 454, 1975, 471, 488, 505, 2017, 522, 2050, 539, 
          2083, 556, 2116, 573, 2149, 590, 2181, 607, 2206, 624, 641}], 
         Line3DBox[{336, 353, 1789, 370, 1822, 387, 1855, 404, 1888, 421, 
          1921, 438, 1953, 455, 1977, 472, 489, 506, 2021, 523, 2054, 540, 
          2087, 557, 2120, 574, 2153, 591, 2185, 608, 2208, 625, 642}], 
         Line3DBox[{337, 354, 1793, 371, 1826, 388, 1859, 405, 1892, 422, 
          1925, 439, 1957, 456, 1979, 473, 490, 507, 2025, 524, 2058, 541, 
          2091, 558, 2124, 575, 2157, 592, 2189, 609, 2210, 626, 643}], 
         Line3DBox[{338, 355, 1797, 372, 1830, 389, 1863, 406, 1896, 423, 
          1929, 440, 1961, 457, 1981, 474, 491, 508, 2029, 525, 2062, 542, 
          2095, 559, 2128, 576, 2161, 593, 2193, 610, 2212, 627, 644}], 
         Line3DBox[{339, 356, 1801, 373, 1834, 390, 1867, 407, 1900, 424, 
          1933, 441, 1965, 458, 1983, 475, 492, 509, 2033, 526, 2066, 543, 
          2099, 560, 2132, 577, 2165, 594, 2197, 611, 2214, 628, 645}], 
         Line3DBox[{648, 665, 2219, 682, 2237, 699, 2270, 716, 2303, 733, 
          2336, 750, 2369, 767, 2401, 784, 801, 818, 2450, 835, 2469, 852, 
          2502, 869, 2535, 886, 2568, 903, 2601, 920, 2633, 937, 954}], 
         Line3DBox[{649, 666, 2221, 683, 2241, 700, 2274, 717, 2307, 734, 
          2340, 751, 2373, 768, 2405, 785, 802, 819, 2452, 836, 2473, 853, 
          2506, 870, 2539, 887, 2572, 904, 2605, 921, 2637, 938, 955}], 
         Line3DBox[{650, 667, 2223, 684, 2245, 701, 2278, 718, 2311, 735, 
          2344, 752, 2377, 769, 2409, 786, 803, 820, 2454, 837, 2477, 854, 
          2510, 871, 2543, 888, 2576, 905, 2609, 922, 2641, 939, 956}], 
         Line3DBox[{651, 668, 2225, 685, 2249, 702, 2282, 719, 2315, 736, 
          2348, 753, 2381, 770, 2413, 787, 804, 821, 2456, 838, 2481, 855, 
          2514, 872, 2547, 889, 2580, 906, 2613, 923, 2645, 940, 957}], 
         Line3DBox[{652, 669, 2227, 686, 2253, 703, 2286, 720, 2319, 737, 
          2352, 754, 2385, 771, 2417, 788, 805, 822, 2458, 839, 2485, 856, 
          2518, 873, 2551, 890, 2584, 907, 2617, 924, 2649, 941, 958}], 
         Line3DBox[{653, 670, 2229, 687, 2257, 704, 2290, 721, 2323, 738, 
          2356, 755, 2389, 772, 2421, 789, 806, 823, 2460, 840, 2489, 857, 
          2522, 874, 2555, 891, 2588, 908, 2621, 925, 2653, 942, 959}], 
         Line3DBox[{654, 671, 2231, 688, 2261, 705, 2294, 722, 2327, 739, 
          2360, 756, 2393, 773, 2425, 790, 807, 824, 2462, 841, 2493, 858, 
          2526, 875, 2559, 892, 2592, 909, 2625, 926, 2657, 943, 960}], 
         Line3DBox[{655, 672, 2233, 689, 2265, 706, 2298, 723, 2331, 740, 
          2364, 757, 2397, 774, 2429, 791, 808, 825, 2464, 842, 2497, 859, 
          2530, 876, 2563, 893, 2596, 910, 2629, 927, 2661, 944, 961}], 
         Line3DBox[{656, 673, 2239, 690, 2272, 707, 2305, 724, 2338, 741, 
          2371, 758, 2403, 775, 2433, 792, 809, 826, 2471, 843, 2504, 860, 
          2537, 877, 2570, 894, 2603, 911, 2635, 928, 2664, 945, 962}], 
         Line3DBox[{657, 674, 2243, 691, 2276, 708, 2309, 725, 2342, 742, 
          2375, 759, 2407, 776, 2435, 793, 810, 827, 2475, 844, 2508, 861, 
          2541, 878, 2574, 895, 2607, 912, 2639, 929, 2666, 946, 963}], 
         Line3DBox[{658, 675, 2247, 692, 2280, 709, 2313, 726, 2346, 743, 
          2379, 760, 2411, 777, 2437, 794, 811, 828, 2479, 845, 2512, 862, 
          2545, 879, 2578, 896, 2611, 913, 2643, 930, 2668, 947, 964}], 
         Line3DBox[{659, 676, 2251, 693, 2284, 710, 2317, 727, 2350, 744, 
          2383, 761, 2415, 778, 2439, 795, 812, 829, 2483, 846, 2516, 863, 
          2549, 880, 2582, 897, 2615, 914, 2647, 931, 2670, 948, 965}], 
         Line3DBox[{660, 677, 2255, 694, 2288, 711, 2321, 728, 2354, 745, 
          2387, 762, 2419, 779, 2441, 796, 813, 830, 2487, 847, 2520, 864, 
          2553, 881, 2586, 898, 2619, 915, 2651, 932, 2672, 949, 966}], 
         Line3DBox[{661, 678, 2259, 695, 2292, 712, 2325, 729, 2358, 746, 
          2391, 763, 2423, 780, 2443, 797, 814, 831, 2491, 848, 2524, 865, 
          2557, 882, 2590, 899, 2623, 916, 2655, 933, 2674, 950, 967}], 
         Line3DBox[{662, 679, 2263, 696, 2296, 713, 2329, 730, 2362, 747, 
          2395, 764, 2427, 781, 2445, 798, 815, 832, 2495, 849, 2528, 866, 
          2561, 883, 2594, 900, 2627, 917, 2659, 934, 2676, 951, 968}], 
         Line3DBox[{971, 988, 2681, 1005, 2699, 1022, 2732, 1039, 2765, 1056, 
          2798, 1073, 2831, 1090, 2863, 1107, 1124, 1141, 2912, 1158, 2931, 
          1175, 2964, 1192, 2997, 1209, 3030, 1226, 3063, 1243, 3095, 1260, 
          1277}], Line3DBox[{972, 989, 2683, 1006, 2703, 1023, 2736, 1040, 
          2769, 1057, 2802, 1074, 2835, 1091, 2867, 1108, 1125, 1142, 2914, 
          1159, 2935, 1176, 2968, 1193, 3001, 1210, 3034, 1227, 3067, 1244, 
          3099, 1261, 1278}], 
         Line3DBox[{973, 990, 2685, 1007, 2707, 1024, 2740, 1041, 2773, 1058, 
          2806, 1075, 2839, 1092, 2871, 1109, 1126, 1143, 2916, 1160, 2939, 
          1177, 2972, 1194, 3005, 1211, 3038, 1228, 3071, 1245, 3103, 1262, 
          1279}], Line3DBox[{974, 991, 2687, 1008, 2711, 1025, 2744, 1042, 
          2777, 1059, 2810, 1076, 2843, 1093, 2875, 1110, 1127, 1144, 2918, 
          1161, 2943, 1178, 2976, 1195, 3009, 1212, 3042, 1229, 3075, 1246, 
          3107, 1263, 1280}], 
         Line3DBox[{975, 992, 2689, 1009, 2715, 1026, 2748, 1043, 2781, 1060, 
          2814, 1077, 2847, 1094, 2879, 1111, 1128, 1145, 2920, 1162, 2947, 
          1179, 2980, 1196, 3013, 1213, 3046, 1230, 3079, 1247, 3111, 1264, 
          1281}], Line3DBox[{976, 993, 2691, 1010, 2719, 1027, 2752, 1044, 
          2785, 1061, 2818, 1078, 2851, 1095, 2883, 1112, 1129, 1146, 2922, 
          1163, 2951, 1180, 2984, 1197, 3017, 1214, 3050, 1231, 3083, 1248, 
          3115, 1265, 1282}], 
         Line3DBox[{977, 994, 2693, 1011, 2723, 1028, 2756, 1045, 2789, 1062, 
          2822, 1079, 2855, 1096, 2887, 1113, 1130, 1147, 2924, 1164, 2955, 
          1181, 2988, 1198, 3021, 1215, 3054, 1232, 3087, 1249, 3119, 1266, 
          1283}], Line3DBox[{978, 995, 2695, 1012, 2727, 1029, 2760, 1046, 
          2793, 1063, 2826, 1080, 2859, 1097, 2891, 1114, 1131, 1148, 2926, 
          1165, 2959, 1182, 2992, 1199, 3025, 1216, 3058, 1233, 3091, 1250, 
          3123, 1267, 1284}], 
         Line3DBox[{979, 996, 2701, 1013, 2734, 1030, 2767, 1047, 2800, 1064, 
          2833, 1081, 2865, 1098, 2895, 1115, 1132, 1149, 2933, 1166, 2966, 
          1183, 2999, 1200, 3032, 1217, 3065, 1234, 3097, 1251, 3126, 1268, 
          1285}], 
         Line3DBox[{980, 997, 2705, 1014, 2738, 1031, 2771, 1048, 2804, 1065, 
          2837, 1082, 2869, 1099, 2897, 1116, 1133, 1150, 2937, 1167, 2970, 
          1184, 3003, 1201, 3036, 1218, 3069, 1235, 3101, 1252, 3128, 1269, 
          1286}], Line3DBox[{981, 998, 2709, 1015, 2742, 1032, 2775, 1049, 
          2808, 1066, 2841, 1083, 2873, 1100, 2899, 1117, 1134, 1151, 2941, 
          1168, 2974, 1185, 3007, 1202, 3040, 1219, 3073, 1236, 3105, 1253, 
          3130, 1270, 1287}], 
         Line3DBox[{982, 999, 2713, 1016, 2746, 1033, 2779, 1050, 2812, 1067, 
          2845, 1084, 2877, 1101, 2901, 1118, 1135, 1152, 2945, 1169, 2978, 
          1186, 3011, 1203, 3044, 1220, 3077, 1237, 3109, 1254, 3132, 1271, 
          1288}], Line3DBox[{983, 1000, 2717, 1017, 2750, 1034, 2783, 1051, 
          2816, 1068, 2849, 1085, 2881, 1102, 2903, 1119, 1136, 1153, 2949, 
          1170, 2982, 1187, 3015, 1204, 3048, 1221, 3081, 1238, 3113, 1255, 
          3134, 1272, 1289}], 
         Line3DBox[{984, 1001, 2721, 1018, 2754, 1035, 2787, 1052, 2820, 1069,
           2853, 1086, 2885, 1103, 2905, 1120, 1137, 1154, 2953, 1171, 2986, 
          1188, 3019, 1205, 3052, 1222, 3085, 1239, 3117, 1256, 3136, 1273, 
          1290}], Line3DBox[{985, 1002, 2725, 1019, 2758, 1036, 2791, 1053, 
          2824, 1070, 2857, 1087, 2889, 1104, 2907, 1121, 1138, 1155, 2957, 
          1172, 2990, 1189, 3023, 1206, 3056, 1223, 3089, 1240, 3121, 1257, 
          3138, 1274, 
          1291}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
      VertexNormals->CompressedData["
1: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
LNj1N+Wx+Cgct810PuZTg02RFi63ywtRK+ywGJwj8nRjinlKWyhuOfRFoeBo
KF4PFswaIPqUDb1kQtgjJQjbvjdrUdsNT6WvFpK6TuezAod5ow+UF05Xt9B4
4x51kT5SR80pXFO9PRIIXSUDpkX9Aeh/68MWc4K7dK6ZcbQZQZtra6BArBRE
73yYQOr2Y43Ts3c4b4Domdr34g5n4aJb7mayPtA+EfnerHQJQkraeLVyD0G3
l8wX0j6hjpVB/vaHwfLE0D74uQn+rCSs23Psg+Wdlnt9IuW+U333DJZE/nY0
rtv/4L2tE6rcezHFxd/2RsSkyGhg+rq/OE4whO0r5sFfkk+eFf7Yiyd/HZoi
eXXDH7uLUuoYe0vqYhlKo+g+eVVyPW8TxGKFn4bixoVLosd/PsSOaZVdL4l9
/bZI3chJ1BetmMtHmX8WYlyBbfmFxWkwuCR0m4buO1KlhO0JrmpCJpEZcf9b
P6A+O2iSd7UPdWmPK9x8UIOHFQf688Qn4FOe9XHDtdf4q8nisJJYIvqm5LHs
HiXmlFOqzAFM1sjfXdp42c8Sj114NdpKrMdv3k6qfL8SmDHYqzWdMMA3mrF6
f0mdyWq2lubkDPf144RgmyWuXtdlJf1lV12s9JrdHR6XPOMK/GeH1K1OPn4E
f2T8+gRPjj5Q6SnjmDsfzAfl9iwSvO39h8VUa3V48+vBxeSdB+H5VFk7aYe5
4o95BQwX4GKGkpWQzV8RAQX/9X4hK45G7Qz0MMQxxnf0woCI0M4f63VpIKHU
3teyUYQv2Ws1S6ZZRDF5Zd0vFhsKKkbGD+LgY54uFYO20k1aYev//+juKLaN
7WL4Z6e0vc5lVlSIOPec5Ko1LsavTlphf7TtjYzZ26jpzGo2SuajypGTm66/
RIO/4Rn1abEYcJGROYxCgeaTGn2Oqj2Yo9DlcUniM7pu103Q3z4JP+YpNa89
v6Oou9ogq3szup0qDZaq/w69QtGcDm+a8MV3saXtxcW4lFQrl+c/DUHGASO9
/0ViVpfaxcoBDzxy1CilkMiLYRyoL5lWR98t8pO9f1Rwl1rodrLPBqYaGppR
ZGFJSYBmt9pVfGbUEELW+QvtnzdbdVvBHu9btGGDWsia2T1P9mtb6c0ONlaO
ECykXnwiRh8dkvOkGwge2+hkl7FJDyS85z591vsPZcy2T5H16vjDNWG3GjW4
902uRPfwfvy9xr6ur9QuTYaX0l6AO/wrN1Q2bsLSqAfrfnFtL29iSaSH53wM
Ok6T86VpbYXrdjZ8xzk03lAlcojq2GlF+6nSLZOz63454KKh+sCNETd/vdgf
HrBaqm7tua6vrvFe+y4brUTop9MH5ef4cCtz6vq+mpK0lHVPB2D3bWq2kyHW
ePvoi9fcBDevvJ+X0V2JJdYs+yZ4X2Mti5zBdxsKmN7dzGWaP4wp3/4TndNq
wHDakXjt7WOwn5ub+vOeIez49Eyce7IW3cz9l0r9xsFAel9bdkIJ9oyIiB+T
eoFtweelOog5MUSor+i/NlcsurNyxMvxDp5V78ouJr6rJ1Ts50cjhu2pDMV+
woL4q/+nN7n+OoaUQ5GiUjDep7zsbMSDnoP61iQ//uAUW9ZLc8jRnaqaLRHF
kPKcBfK8Gi6X7FlSt4MV167JAy1iyHHUMaqX4Cw6tzQTLPWAZeuUDrfkBVyy
cfIn/SLzTPCE4JIGBCwbT9me50MjdUMn0i+HbyyOJe2/BALN7fH7k48j66eG
WvK7X1e4Hh5jPwpFukaHP8zsxFiG0nU76y9+iVxZyBepeDoqvJOVBncsOqz7
ZXZ7Qkk762lMNtDodZfYjzTlMut6mE+/2YqVSwdT/jVnfPkK6PM7IIM8P0wx
+Re+9UUCVr70iRPxfoQChxNCaoi+efuqReHEUAteSdyh+9WuADee1b9Lc2wa
nnIkX7Km+oGMyYN0MSeI+Xslhu8jUa8oZcKsR7m70XzhQWtj53ukXX35e3Pt
JDBR3yqaGc/AReGm61K7fPFxkbs45RcFlj2DDMz57+Fxm5Ii2iVJ/Ne3JEHa
U21rVOi7JF58m73hsbL7n1LxC+br8+/WygOil59LwXV7JZnA3ftgKjXKleTG
MwPF9wbNwJ/SPLZIxw2W+3zHyHlqxinu7j17B1iqSWVfyZaD0lf3Usk5N2E3
Kl7ZbwhH5/rlRmOvou2hg4pkPSwyt9lNF3cLCmYYO/ozxJHXVHeBtI9gyzkW
1z4x8N86fGtmmRd1tarW57g9H8xNz55kBY27H0Wbhpmx1vv++jz4++LaCt+R
xlJXm2Pp91qO4tEzXut95/ZtYTv9J+cwPPNz5uRlNkxRCFrPuyXcvvWKlinW
dfYoXUy4hh81hw3myXypWRFNEs5G0eBp3cG3Pvj2WWjK0hwxz2pOjw/v7UG7
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
sjYoFrx4GeXm0pOQq1DA7BVZD3VvxcO09QSoLNS9656SjAe5FHqIuTaczZUj
wnpB2MXvN3nmmCu27OrZTdT30motz1GfioA6fUURp/FbeNnV3aqajEM2/TnK
HlBmAXSPPn0NKNmQbg1gjiR44gcvu2uxN13h+zuglWDWg2bjHctEvnGgmIvG
gjsPTyQMF9MWJiG62X92nCDBpeHkP2W1JlAnHaai13Mc9jVamhK4hepsp+ET
NzVgcNSoKWBhg/zsGkr/XqDu8C1fRwzctnaTw/I5zm0Ojckm45PsgnNqhXb9
qCn/m/mHVQ06Z51jSRuYhmumInp1HyWBqvT0/AETZgj8tEGpn+G9UWX47jkf
XGdQijuZTQ18TgmU8/qKm0vtMXQjeHzdOzSMqgmDd+jsDA6ahMKy70FdoaOY
xstoKz3fgsqHNx2U3DoOwSJxVg5f2aDEx1dXX2hD+vN5Icr+6Tmz60jDO1oo
0uSpVrv9W3pyxy3KfnOldjvRfPI7hnAaBosEfEGlh+3FpuYTYO359rz89VZU
u3lMli0ZMb+e61Ve2BwsntSf7RTqll7dLuYcLzYvbdY08f/9f9yKqnuRHpX3
bHEqVh2T7jcNosiPyz5nOuRWjcX3F2l6K98hjwKP2rgbCVzaxZvK01LwV5iZ
+rbiOPy8Q/TeM/K6L35a8FMv2IV9Py6GxOr2SmvIalPsl0rcwex3wjF87fKi
nP0VA+peOU7BS4sNg98NsiKRu0jEZcwiAk827dhyn7wfbnq51wdQi+Hl3eY2
X2b9kb5kfwJxnytg9NST5gRxnKsu/HSmYh8ezhOhzAH8ttlDWWyXLv7u7dT5
81UG+azUPIg4NWl4/6+1vS6Ejn+uWNzhh78u2owT592LfaOyTK4hILK9W124
LhjZb9zfScwvDiwrq14ascOAX2FH79rr4e2a5ELCn2e9HChxPRSOldNa39h+
eeHDDjtbYi6wx3SP3xfnUDjq4rkm+CwEf/iLqZ0iyzfuP1BuI+p69wkmHWW8
hRohjYLEfcPVM68yMgRT8Q0nffHk+yicjqYSXid/t3aVP2NHtIMgciFwoDzH
A8+kvs8l8vYpUQbXEh9awSTntpHmbSdQ95b8ZsIuXo0xjN5Vtocuh1tOUQ9l
gUZw2y/iPVX8fgajZTW+vbD0YV4qDwdfMqb/8CaBroFu8n0OIwgJUZre+mhQ
+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
29SppqeNVmirx1QLVmf4H1G5hbM=
       "]], {
      {RGBColor[1, 1, 0], Opacity[0.5], Point3DBox[CompressedData["
1:eJxTTMoPSmViYGCQA2JmIM5SPsB/6gGbwza2+oK3RYwODGDwwf4dR5X+ZnZO
hzDT+Z9SFZjg4nlbCx3/fftu/+a0UvtTHy64+IGzlx9PN3hgf+3iyqDQPoQ5
L1wy9pu6v7WvXeAacOjFZ3uY+Oz/7/ltmj/ZH9EVqT1RyAlXLzxXfuXZa0wO
m6Q1uTj72eHiMx+2n2CUZneIfezafrUcIc7AFBrrs4TPIWKGxuv+Dla4uMMK
xVXqoQwO2utleazvCsDFYya97t8+gcthQ5ZfXmfRO7h7ik33WVUvZXb4xba3
pvgCwp0RgbMm7j7+yz5j6oHHnBe54eZkGXrWv9JndyioMv97M+0kXL1n7a1f
5wX/2+8QcCotfncBLi68ffXEV6sYHVp3VDbP+vQLLr6gfNbqzNlsDlKLkmQ8
u9/DxZ/1PpA4GfjdnuOD/gyD3N9w8VPbRKZMKvxvr/Ls/hym8wh3OnFzJdZ/
+2S/mLt2bcJTZrg7r05QTdk7hcthibkO8xJzRLi1RRnm8Hr8t5+k6Obttw2h
Pt/56Ms7hawOAfuKvI6zIeJXgzmXrSTtn/351Vb7S/b+R9jbdNJEYzGrg995
hrzqyYjwPzZb0fL50T/2d9SUY1YvQIT/sQX/U1yl/tsL3GTqf7DzDCKcX+W3
3nRjd4i6MjPT+SMi/ZxzecRTHfvMnuV4wuZWpjtw9c81Fbce/vbXfud0XpO0
Bx/g4gCaJwBa
        "]]}, 
      {RGBColor[0, 0, 1], Opacity[0.5], Point3DBox[CompressedData["
1:eJxTTMoPSmViYGCQA2JmID6R8dpMad3h/e4rXgZkhn22ZwCDD/YPyos/LW1+
uX9d5FobzXO/4eJ8UwJy3J483M/w5bejy53rcHGOk+UMT+PP7t8e+O2f4ft/
cPEzG0vOadt83S+i9WKK0M6vcPHvX3f/qljwc/9Nv/7fCRx/4eLXl+3R3M3J
fqBndV5o+7YvcPGSN1eeRLqwHIh0u/3e8wSLA0zcLd3Ssmwqz4FL/MXTpizn
gYv7ddwWn3yQ7UDdsYTf4inMcHGD6u6XxSUP99ufzNKZMeU/3PywT1fjLr3/
vf9LnPesY4VccPVa7ydvdXnGcuBFIONzVsWr+2HiBy75llz8PWM/37UPjKc4
fsHN4W81lpJo/b2/4tqPlbM5PsLF5bozlm7sZzhQccw/azE7Inxizxke8jP5
tb9Hb1/D9BW8cHsTqluLQns223dMNvi2P4wbLm7itjRKOIr7wLrC4l0Hsxng
4uVFaZ/OL2I5UDOx7tST84jwaYnq2X2CgfPAz1NfL7xP+wG398qjB37svMwH
uA9vtUy/jnB/adrixnSv//sPTjl3YmM6It59PyzoWG/PcqCqtbT3WwQinM1l
ayqme/3a/6ZMytSp5xNcvc6nOyUT5rMcaFkoJZGSjvBXkc/EpQEmj/ezMn/O
W72PDS5erK0v8Lfw7/5v87jPM8V/h5ujkbjeLFee9UCg/m7n6f844eo9kz/z
he78tV96nVWWERtCHACgARo9
        "]]}, 
      {RGBColor[0, 1, 0], Opacity[0.5], Point3DBox[CompressedData["
1:eJxTTMoPSmViYGCQA2JmIO6qy5yVIv7BfttMreOqPTwHGMDgg73ZvorYKVr3
7GUOR87fvujlfpg4u5DNpwDhw/vnbmCYv1f3O1z8bu1TpWaTz/vfMH+/qywm
CDenyS17vkrBKftP1RfLKiz54OJphX3Ru9Yc259cqqVwx4gZLn53Ass+kdkP
7K9G2d36nscNF9fdGX/tO/Ph/UxGH5Nd9rLCxW/LeVb6mB/ZXztPctOTTbxw
8YBTP03aj37bH/th25QHb//A3SkaNG3+9cof9osmfGG55/sLLn7xUdgN0eIT
+1Wz2G4eE2WDm7PsOuP/da3n9nfKhXXYnuSEi1vf/fzlZ+cz+8mZLq0+BxHm
i3eeub7N+Yn94cuFFjcTOeDqOUVO1m+7+tW+3n/3nsp8hDkLal5XnXh50/5C
fGXqi+sscPE/q1LZDsh83v9kTRGD3T5EOFzawf0zeccd+w61Dfsn1/2E23vT
o11tS8Vne/7lFxQO/f4HF5+ndHXd/nCmA6fXMR57pI0wRyTopcbp6T+B7pmz
LfkLItw+fPjVtpnx1f7dkU7cF9v54eKfVzGp8Lq/2D/9fkzwrAUI93sfOeI+
6fWl/RPWv/h9/NczhHu+sk4NiWJwuB7Z7dz3hAuu/qzA5c+BVTftW6yPX780
WxguzhMTG/JD9qm9CrO014YziHCw7jQTWGHweH+NZeCnlddew83/xt2889T6
9/vNWnYeNvdmgqsHAGHYKEI=
        "]]}, 
      {RGBColor[1, 0, 0], Opacity[0.5], Point3DBox[CompressedData["
1:eJxTTMoPSmViYGCQA2JmIM51WL/owpSt9tyTv6TzzrhjzwAGH+yzz2SdPMTw
dL/P8+Zt/8qnwcWv9J29PyF/pb29t/wfGYfvcPH/c39a1zLetl82ZXvtzHn3
4OL7fQ6tyDH8ah/Au5DzduteuDiLfYfw9uSH+2+sVT37Je4DXDxmrdkO+Tm3
9v+dx7D71LtT+2Hiay+GiYlKPrAXLGeYu2LTFrj6+cp6X7ua79r/5lyfVy78
Fi7u0KX4M7346/7S+AeXZgZ9hIuX6fz4HMs3xf7E0yMqaWwH4eIX77OebPF6
b/91UubLC3MR6uvcvmrMbH65v0nm+Ud+3idw8UQOp/Avby7tF1+w8Had1EW4
+D25Fb9lO4/a/7O6ltr4CqE+88uz3yIPn9qf2/jRQMX4NNxf+7Nc9Pp2HLWf
JCbs7L6MyQEm3riD42F+Xbt9YHNv6ISsW3Bzgq+EfGFKeLg/30/cvIifGa5e
rLPzx2fjD/vFhVjOKlv9g5ufpy9/Xe/ie/v91kwV6Ysewc2Z3P3P1OL92/0T
46K957Aiwv/cxg8qKx9t3P9QI7zdoOUF3Bxhx7fMetbn939dZfycb9dluPp9
9Vai9zK329fHLJqdUX0Irl724KQGv0vX7DelRE06G3UWrr7W+uSfJ3kP9ifb
fhLiTULEV94Znwk5ekf2338ka3Sy5iVcPH3Hq8Ssnxf2M6/8VOTJfgku/q+y
nLPJ7779l5qfNedDj8DFAYwMIMM=
        "]]}}},
    Axes->True,
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.4},
    DisplayFunction->Identity,
    FaceGridsStyle->Automatic,
    Method->{"DefaultBoundaryStyle" -> Directive[
        GrayLevel[0.3]], "RotationControl" -> "Globe"},
    PlotLabel->FormBox["\"SupportVectorMachine\"", TraditionalForm],
    PlotRange->{{-4., 4.}, {-5., 4.}, {0, 1}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic, Automatic}], ",", 
   Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
iZR890N//wWfLyJYv80GnPK07DoDuA10KE9bdmY5l3sAGxdhOnGAU55WHReU
p31m3ffJWwrx791cpzDgoaNARzsueHtHnlY/X3AfKU87vuT+cn26s3ERNr7i
Aac8rdpv0wG3gE4M4DbQoTxtw4lvTtrzKZ8vuE4U4JSnVfttHuAG0KE87bJS
5Rb/dV766NPqOPK0/4qJFeX7ROWmqP32OuCUp1X7Q7SeO/K0qg7laU+k74ub
NpfPF1w/FuhTnlYdF5SnbfPYGz82+03mxIB+IaAvjtwU/XwB7pfC/KI8bW7d
1tUvtOL9n40jR55WPy/kpqj9Mw1wS6/jyNPq5wWuQ3naZie7RxyYy/s/14/S
c0eeVu3nuYAbQIfytIWeKNdv4CTW/8N0KE877JMO8dFDef/PZP3zBuCUp1V/
n2jAbaBDedoZdUYklPyVzwtcJxZwytOq/Z/ytL1mP3Ts9yTW/8N0CgEujkx9
/4f3RdwvytP2f/nQ0689xd9jm8n62ynAbcApT9u6+ktDDsv6FOVp1f5wE3DK
zarXT+J7//Fp8onDrD4V1v8Bd+Rp1faAO/K0anvAHXla1j5wlyd7t88/3Pyl
ZJH/pDxt00bZ+0Y8xN9Lxdo78rSqDuCOPK3aHnBHnlZtjzjlaXsvXfDcg6/y
fdeTvT36FnkmadpG6bee24BTnvblZddbrr5H7O9BedqV07acLTVc7AdFedrG
2XWGxT62gY2jZO/8A3dyU/tsYH4le8/dd2WRf22SmI9CnzfLax+1x038sD8b
X/w8UJ625tPn/opP2Mx85P7GAk552re/HdQx7kmhkwG4BXSiAbeBDuVpn962
MS81We7/DHQiAKc8bc1nKk+a/KnQuQO4AXQoT9ttfqfd8b/w/XOYjiNPaxys
FPnjveL9BZSn3bP+bNILJUUd8CrglKdV+0OMnjvytKoO5Wm/6dVo4br14jk7
S6/jyNOq+kGgQ3naLpUTOiccmcquV1w/Qc/lkebts/WdN+fcJ+rglKdNaFrj
dmyOeP6C8rT1LqRO7rJEvMeH8rSqj5SnLdewWsrI38TzjJSnVcaXI0+rjrsg
0LkEuKXXceRpVX0b6FCetlHHi1MGfSzOj6nXceRpVX3K05bKtc48agq/bgNu
AB3K0xZKymr4xGMiH0t5WlWH8rQlqzUaXmKK2N+Y8rQlOg5v6q4pngPKApzy
tGp/iAHcBjrpgFtAJx5wytNa1R4c798oPi/laZNKFMxJR8X+mW6gkwC4OLK8
h2d/l1HrqMj/UJ52QueBGUkHQ+87duRpXY18v75tDWLjgvtIeVpVn/K06viK
A5zytOOLVUt6oJnIb1wA3AI6LsBtoEN52pVPPzYuooV4Hs0EOpGAU5625sOl
PdP7iucubwFuAB3K03ao84y1baV8XsCn1fFHSr7z5xWn/6olnlP79/enVfuD
S8//H/anVfXj9Px/sT+tleY+ePwRMT+69TqOPK2qL458r/oeecrTFiv69zFU
jK/A3T9jfN/+UezhGUX4fRT3kfK0d97LrXuzvtwX7m57PxtfjjytOu4oT9t0
X9OHqv4q7g/PAW7pdfwuoG8DHcrTTo7+bFjsILlfK9CP1HNHnnblqIXTd987
Wf6/nhtAh/K0s+dUGHZ+hnhfG+VpVZ1Iydf6l83aX1w8l0F52s2LAnVPlhG5
lGzAKU+r9gcX4DbQoTzt+grl5rRPEfOvBXTiAKc8beHEFxevOyPmd8rTuuuZ
81/pIq/DQKcw4KGjQKd+paSkx0qJnJJjf9qb/Uq/Gz0g5DvlaauUvOehrd3E
+30oT6v6SHnaqwvvb+aZ9A2bL/j4igec8rRD5vd7ZnKcGL/pgFtAJwZwG+hQ
nvbFLze90+9dfh/FdaIApzzt2q6/PueaK/pnHuAG0KE87bU5+Vtf/GW0Oi64
jiNPO/DTTclnlsj91aVOl5/eLTr0RZGjuw64Y39apT9E67kjT6vqUJ62VXzn
1XemifsfS6/j3J9W0ac87ZjIvFr7togcMuVpt/x1eEbdyWxchOkX0nN5xPja
Ku+FpzztsPxqLS7Y7P3dYX5RnnZc+5I5M6qLHDvlaZVx5MjTquOL8rSdT1Q6
/fNLYl/fNMAtoB8D9G2gQ3nal19JsmblsfulMP0ooE952tWpj5WN/1Ts65gL
uAF0KE9bpUXN95pcEe9rozytqkN52o2zSs12/VOMF8rTnm6wPPDPl8T9/A3A
KU+r+h4NuA10MiRf1OzHrz9L5vdLXCcWcMrTFr54qMftLqL/U5722Ze37d7g
5fdLXKcQ4KGjQCdR7f8BwVVfKE+bk37fT5e6i/sfytMOqrxsxcL14r7iFOA2
4JSnrXb0Vs6pfDGuKU8bKF+/bKf54nviTcApN6twR552XfED326+8r7qewH/
LnvsjWfr9A21B9yRp1XbA+7I06rtAXfkaVn7u76E7QNJeVqVg/aOPK3aHnBH
nlZtD7gjT8v28QOc8rSese1WrKwhvndQnnb0b5G1vpgk1m0yAbcBpzztS+sP
bu//vnxPhOS5wwcdubeXGF+Up331iR6jy6aw/HkB/+P009FNukwW88vdz1Vw
v29O6OcrXlLcx1KeVv28lKeter3uCxFTP1b9CvMxFnDK0/YoG99hVwNx3jIA
t4BONOA20KE8bauvb7Uv/4u43zCBTgTglKct/slvgzMbsv0NwrgBdChPO++J
byr8fJhdB7iOI0/b9av0QU/+0E/tbwU6av+5Cvi/vz+tqkN52uXXai35/iu2
3+C/sT+t2p8pT5s27pObuWVYzv/f2J9W6f//i/1pc/cdmffnQLFvD+Vp1faU
p725p3ej+n+xehMfX448rTruKE+r9ttLgFtAPxro20CH8rRjNpR/tkOiaG8C
/QigT3latf/fBtwAOpSnXdFm6tYp3cer4yJMh/K08w813+2Kek0dFwU6VaYO
3LcnPnx/WpX/+/vTqjqUp627IlDW7ZXrhEDnf96ftu7cWqN+nibqzZSnfXRw
TKNB60T97t/fn/ZQqYmuY8PE7/k/70+rHRdhPlKe9tdDfx/ifonytKpOHOCU
p73devr2Ig1FneUC4BbQcQFuAx3K0+bW6nHiYHH5PgigEwk45Wl3jZpZYVB9
sc/wLcANoEN52o2tPq1Zr4FYB6A8raLjj5S8zs3fbwyoKNZ7KU+beX7hO/Ur
inrrNcApT6teB1x67sjTqjqUpy1deWDZudVEPdrS6zjytOw6KXXm2Q0+aN1L
fI+lPG3snXEf/eNrWS8G+oX1XB6uQOq/xoXYb8oD2lOeVj9fcB8pT3u5bY2e
txNF3ZbytEp7R55WOy4KdO59cMWHjfry9VjOLb2O3wX0baBDedqOB75aevI+
sW5g6nX8kXruyNM+G/H3C7bF9TMfcAPoUJ72Qp+Y4Igmcp8Qn14nUvIytc31
qx5kz3EX6Kj9NhtwytOy6wzgNtChPO3n2xYtPWmtZ/NF2HUScMrTquOC8rQz
nmzS60ilrWy+4DqFAQ8dBTraccHbO/K0+vmC+0h52sUxu1rUKb2GzRd8fMUD
Tnlatd+mA24BnRjAbaBDeVprwatdR3wj1qtNoBMFOOVp1X6bB7gBdChP+0Rk
1ANvfCXqtpSnVXQcedq+fZqtSqkr3+snddR+ex1wytOq/SFazx15WlWH8rRx
rf+s9uApsY+KBfRjgT7ladVxQXnau/dRYl9rN9AvBPTFkZuiny/A/VKYX5Sn
7bKpS52BZ3j/Z+PIkafVzwu5KWr/TAPc0us48rT6eYHrUJ52/VvlixXx8v2g
uH6UnjvytGo/zwXcADqUp51V+8Ywe5nIEVGeVtWhPG3yrMlLD7QR30MpT6v2
zxuAU55W/X2iAbeBDuVp3z9VfEPnLeI+wQI6sYBTnlbt/5SnXbv0p0csXwqb
F7hOIcDFkanv//C+iPtFedr7B2SXXrBCjHfK06r97RTgNuCUp+3Z7Pwvyw+L
eh/ladX+cBNwys2q10/iOf/6XLIeIbna/wF35GnV9oA78rRqe8AdeVrWPnCX
J3vrV45qN3GruB5SnvZCu/di+paW9w/69o48raoDuCNPq7YH3JGnVdsjTnna
R4euTjnxgtiXifK0f13a6ht++Iz0W89twClP++6vO1atfVnu4yr51JGpCzbd
FJzytLlDv3n1ZFH5/JcheFbZUm+8V+Qi8yvZ++H9b+waUPJbMR+FPm+Wt37p
p1+fcFbUZylPq54HytOOaBbRq90bZ5iP3N9YwClPe7nKO7e3nBPzSgbgFtCJ
BtwGOpSnrZ09eE/2SrH/lQl0IgCnPO2+Bx9aMriJ+D52B3AD6FCe9pm5tWNa
fCmuR5SnVXQceVpXmT9334kXeWnK0x4dtvP0lwvE570KOOVp1f4Qo+eOPK2q
Q3naNomepA2DxPdGS6/jyNOq+pSnPT5/0/iSpUW/pTztuuQeZ48V5s9rcP0E
PZdHmjcvaeissVX5uEjzVm90+vqjH4v5kfK0szKGFFrTph4bF9xHytOuv9i2
1rlcsd8O5WmV8eXI06rjjvK0pdclfubtEfq+4cjTqtzS6zjytKq+DXQoT3uo
x84m3bqKz2PqdRx5WlWf8rQLF570fV5BjK/bgBtAh/K0B8p9kPjhjz+yccF1
KE+b+eC0edMXie+/jv1pt/7SLrbiTyGeBTjladX+EAO4DXQoT7s9fW3ikOHi
fFpAJx5wytPOL/7Ufn/J30Oc8rSR6ye1PL5RcDfQSQBcHFneznmuxr59Qofy
tNU/+LV4YqfQOr8jT1u/1dkfxlYV+3tTnlb1kfK03S4YhbKPHGTjgo+vOMAp
T7u3TecH50idC4BbQMcFuA10KE/b7fCoSv4qbB/OMJ1IwClPW3JjfE7GveI+
9RbgBtChPG3qfPuov7LYd53ytIqOP1Lyzdu+7n/oGVEHoTztK1EfPX+xm8gD
XAOc8rRqf3DpuSNPq+pQnnZhYubrFxrz3CDXj9NzR552372er1ZliDwP5Wmf
nd/5Rr1dsl4A9AvruTxwnvY+z9+HeN8c5Wm/HvRXsbzGLDcY5iPlaavWORZX
fo7QpzytMr4ceVp13FGedkm92J0fzRI65wC39Dp+F9C3gQ7lacdM3Fo+eg3L
DYbpR+q5I097+otZhfK2jJD/r+cG0KE87bQqpccuOCD6G+VpVZ1Iyc/NmnPP
nRTx3kPK0ybZhxe/1kOs/2cDTnlatT+4ALeBDuVpq2y8NHHBFXFfYQGdOMAp
TzsureK+Yg+J92hQnvZ0xXk/jqotuBvoFAY8dBTo1H130j3mAqFDedrgsCHr
u08QuR3K01ZosqRE9ZLPquPCz32kPO2CMxcfXjFf/p5324eNr3jAKU+7c9/s
bq+eEOczHXAL6MQAbgMdytOOXlO5auoOsZ+zCXSiAKc8rdnmhcQ/ToocaR7g
BtChPG1qmVHLUpeK+izlaRUdR57WV7tf5TmXRc6B8rSud+Iy1+4X+bfrgFOe
Vu0P0XruyNOqOpSn7bsracvgX+U6ANCP1XNHnjauYkrdsbXFe6YoT3tuTrMG
WRMFd+t1HHlaVV8cMb6tnarO2HtG6FCetvebkZ/e+257Ni9wvyhP+9mBxNYn
PhL3G5SnVcaRI0+rji/K03qONx1YYbWo76cBbgH9GKBvAx3K0wbKxDTruI7V
u8P0o4A+5Wkbj6r66tqz4XlalRtAh/K0wUnl64z5Vrwvj/K0qg7laYcfvzVs
5nPyuQ+p07bbpYoJNURu7QbglKdVfY8G3AY6lKd95rXXS9W+Ier7FtCJBZzy
tOdrjF71aXtRV6I87VvJ30/dNU1wN9ApBHjo+L/kaVVfKE9769jjX7RYIH4u
5WlrzzjYqfEQ0X9OAW4DTnnaMZnPRK3eJu5PKE+7o+Xp90/Ufj3EbwJOuVmF
O/K03f9Y0LNa7ADV9wJ+s9Lcrvs7Nwy1B9yRp1XbA+7I06rtAXfkaQX/P3pL
FmQ=
      "], {{
        {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
          GrayLevel[1], 3], 
         StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
lLcNKxZtcnzQHvQBukMeZw5PZHFG0TaPGkF70JFqC31UHjWFcjbVC8vcpvLG
FnnsrTq7036tHEP5Q0/HIp0HKp//EX2829/p7x6TRw6mekT7r/J8nSW29ndL
8thbdZao2mS6fVO+P9X+ovxzin1QebX2zY+z2PdHO7Zc7m994D5cmkeOrdxv
RB55rHLpkY4tF+dxzqk4rDNM5ZDKkyfax+vb3/XuZ35e87DFfVYto9xjgr+l
sasPM+2nyu3nOBYp7umctkEWZ8jKgVUjKDce6PY1/53t700cRxRPuhYiTtR3
nOkJehTCDhQrexfCRts5Z1dsbAV6+dlubqOZY1QXx4hdeTynOKDaQXnvpjy+
2czvqI0Sf0PxRnGng7mx+9q9EPFNfWru625+rr3jmvyoLvyGv1nittWH2rZh
1X3Kq1UDKofZ6v2xxONTH2TzdeyPrTw+zYPiWA3H2D5+vo370tz9k52rnjrC
Mbmm/ail+65ntH9V9x7RzfOg9+WbOmPUee9m91lzpf996H8hPVKcRXdyvNL/
EfT/mPIp9lbtuZ867ulcusjxs79jpmKdzn90pl3BdqJ3dZ6m81udz9dwXC12
DnOd8xmdZ+q8Tmeb7RwrFGN19jje39W5q86ydB6r/xn9//87jsk6W9b/CFSb
3ID+Ef4HcPYfuA==
             "]], Polygon3DBox[CompressedData["
1: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
77MsX3IU6t38P216ivoX9YH/ARaAWKg=
             "]]}],
          Lighting->{{"Ambient", 
             RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
            "Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 0, 2}]}}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
          GrayLevel[1], 3], 
         StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNmXf8l2MXx3938b1uZCcRpTIys5IRkfbQ0PJraQ9pa6tUyipUyEpkPvaI
bB4rIyXrkUjDr0VpGWU878/rfLz443w/577v677u6zrXuc451+dbudvAVgNK
FRUVnc9PabBDVlRUjDRG2qSiovvA1uAlyDz09uAP4Ebka+RwrseCR4DHI8PR
TwTrIHPQLwAvRh5FbwVWRq5EPxLsn9Mv370MPJ3rq7hfU+25Ppv7bcFDuB7D
/cPABlzX5H5j8Ciux3G/Gng+Mhn9QrAJz86kzUXgIKQYfaAQOQe9E7gb7S6n
fQKPRcajn6B5FYqKRqLvh14VGYZ+NHgQMhq9fIpx3ox+mr87C722+kMeRu8P
nonM8FzqI/eg1wMbI3PRG4GVkKHoVVLY8AbPUfO93t9qidyL3gz8lbH1Q98F
Hsj1IPRyYFPkNvQm4MnIBI9N96eiXwRORB5Ev1pzYv4dsMNQcA3Xu6GvBdch
u6NvBMvx7DT0s8GJ4FXIYGSI3kMmIROQQX420NfjkZ5IL2Q4spy+SoErwL3p
6xj0MuAErp9kPJPA/bmuxv39wD2Qo9Fz8ApwCnK1ZTIyDPmJdxK4LcU4hvrZ
2VzfRZ9npWivturjIfrqAT4M9kLOQ+8LlkeORS9rP2lsm1yKtEXvAo5GOqKP
0Hv0ezf9nwvW5roG9+uADyDd0R8E+4NXImMtY+TbHuMwj3MUMhLpo3Ego31v
BNLbz2THccgA93e5r9W2n/sdyzheYzxjwIORweiHprDt6+jjwa34ykD0LeAm
ZID2LdgFbI5cipxKu+vAGmBHsCnSCdmb69vBFmBn32uG9EC6IxfLt7Loq7Pb
XwuekiJuzHCsWM73eqNvBrv6my2Qdjx7DGwL/lwIf94BtgS7ZdF2ZyHm9RvY
kHZT7Oc1sXVr2Q38jmftub8SLClE/FpbiDE18xibZDG3Dr7XyfPUt1r5ey08
tuZ+p7nntp2+RoHbwJ+QPtYLjg+7p3i/le1yhvev/HBP5Ar0PVK8O9J2+Brp
hf4j2NM2bZ1FjJ2psSqOIs+iX6HYgzyHPgqsK/9GbwBWQIagVwRraT84FmkM
d3pNOyH3u887kHfQbwdvRd5GvwXsjTyF3ssx6ibHHMXDa9CrO77NRh/ob2mc
53g8tzj2zkIWoc8EO3i/dAaPsR2O035PYc+yKdb0Vs9F853nOfZ2nOwHdnes
6Oa4OtHfVVy90bG0pWOy8lRPx7oeYFeP7W/9Aa0x2Bd5CL1Pirhxg/e1xvw4
erHtNsvtlcumO4ZPR15En5YiJkzLIscNQ15BHwp2QZ7w3Ic4XiqODuH6Ge4P
AC9DnvYcm9gf5aPN8OnqtG2Rx7sTHXsbOXY1BOsh56LXBXfw/qnoZ6IfgVRA
rwqegFRErw5OQZqjXwseiRyGfkwe36qN3hQ8FKmKfrjjXlPFHsVjx+Rj88it
DZ1/FQProZ+nvpFGzrkXO5a2Ak91jK3h/NvEOV0xtj56d+V9jRv9ILBlHnWI
5q58dJBz04fINmzzEfgLUt7xfxGynfsfg+8hW9AXpqgrGjnvKwcdgP614lke
sfS2PPLIweibwU8Ug3h3KXgyzypx/zTlPuQi5R9wluP7TPDePNZkLviFxsS7
X2m/IOWcQ7/h3rfIJvmZ7aY6p6LWAL0yeJxz4onOfeWcH3fPY+7KgyOcT5Ub
ZM+zwFP8bk2vy0muedSP8ml557XfPPffwc+099B/dfysi97BvnSi/aqj17SL
x3m6/eGePHL9HOXuPMYyHvyDvg5EL8qj/8roB9vfuthuByL7om9XntHa2w9n
IN3Qb7avnoR+fB72r26/PSuPOrCG9ePQa9nnq6Af4jx+CHoF7RfkAuV9cDrS
FX0auBeyN/o+4F+Ky+il0EvrGXpBY0T2QT8AHGA/HOz9coL3VDXbSntHfpij
71T8yCMvXw/elEfOvxF8R3Gf9X83xb0xzt+XO7crp/d3raDnGn9Lf/du23CO
fU11ltZAPtwJvMPrcqn9UP7Z0b7d399Q7bDK810J/spY1imfZrHXTuZ+a/B/
PMu8R6Z7DFoXzavYc9FaV7Uv7XQf67OoVTQX1YDX5FHPyw7t86gFZ+dRd2kf
9QRvVYxQnWNfaqf4CI7No+4a73fbyF72NdVKqosm+DuDvCe0N1RnzssjVt6X
R43U13aeZx+7X37hdVTMHFXqn/pLftgKvCWPWm6o28sHWsiOedTDF6JfAp7j
faG4V5LCf74HNyC/K6eDKY8YW7CPVbC//Zdnm2nzNvgWUsT9L1PEENW0ij9q
8xdtPge3gquyiH2rbHd9q1se8V/2VD2vuKoadRPP/qDNFvDbFGukdd+K/In+
aQo/r+i9oH1xOPqeeYxnP/SfHVd1LlC8XZziXKAYu0PfzyJWar5luL8+xXe1
v350LNTzkizGIpvovLgB2ZXFHIQb/awN3z6Fd8/Io/2PWYx1bRb+qv4Unwu0
WQKuyWIc2y2yzeos9prsKdsq7m527H3Pvq092C+PPKj6f2UW9t1i0T79Losa
UWdf5eThtKtD+3ZgQ9UaqtEU6z2f9cZlno/ifHvF6jzsVGJbaP46Ky9XncSz
M2hTH+xh/1ceXGPb7nCfG20n7Yte3guyyZfew+u9B9e57Q+25wbbWM/lJ814
t2sez5fbvp3zyO86C5f4u59nMYbPfL3C9vjJ9t1mX3wCO74EPuW12O7nsucn
bvNGivm+bh9e6furjUudG5UjF9n+37ndw9oD4KMp6pnjGWelPNp//K9xCRd7
nVd4nHelOPvcAy5xf2r7kb+j731h3yqxb5X4erjjgHLHUo9T8xmU4v2nwce0
b9GftC/VdnzY7PmssO8U21dUD78K3gaOc9xWTbXM/qB1U+6u5pz+lX1Ja3i0
/eQoxWevs9a+Sh5nT9UPGVIWfTe/qzVX21f43vvgqynWupZ9YJBrVNXnH9t+
GvN/XNM+Dr6GfOC1+9RrJnuc67U4P499ufZffrjO323kPK56cnaK8+mdKdZA
3/p7TZbYtqobVc+oVlTuUDyeCk7OIz5Pcr7o7vg8l77e4L154HMpzjLzU+yj
Bt5393P9JvcfSsE5qMYTt3Af1y9w/4EUfMjz6FelsOGRrmFUdx1ley5IYe8X
Upyb5qPfncI/l7p/1RKH0v5PcI77vDfFGD7xOF9KYZsXwRkpznQ6cz2ILPR4
nkmx7570/QXoj8huSGn6X60aI8XZ4UbXmYqHm+2Tn3q/TElxrrkWnJziTDfV
8V+1jfJC8xRc3FD3r/pN/IzOLzqPjwBHpjgHiVuYbV+RD4svKuvxLHY+WOJ4
u8j7c5nrjG/kg97/H6Twsfc9r10pajbVTqpRVcupLtW7qqlUS1+Xgk+b5jG/
jH6z89oepaJ/5V/FSOUg+bz2wMsp+Eadf8UtXGN/mGr7v2Ub7nI/WjtxKTqv
iTOZ69ihGKLzmvhPncEVWxbbn7XW79ofJtsnJ3mNFLuu99zFfS30nlrm/ahz
nzg9nQE/9PrKPoqZH3L/TfvMQs9Ftdn+rhPEA+gsfyU4LsV5Vj78hPes9u9J
sjX64BQcizixYtvhaY9NZz3xe6qftdavet317h1Z8LSq2yu5Hp7ivSP+ULyB
uIjbvUYL7G86Fz+CflOK86+4X53Zte/e877QWV5cqHiG51PE4vn23zWONdrX
ykXPpjini9vs7/bvej/qXNZZNbFz4heOjZvM+4jvWuDvat/lKbhi8b2qq1VD
3qWcYm7qG7AoBY/9VyFidTP3/2ch+J0sBW8s7rp0Cl5RnJ54v1WFqAtWg3fm
UQ+rPhf/I36nDLihELzTRvM/bf1d8eHiEMSfi9MWzyBuXHXRBa7Pf6fdZR6b
+Ki+6L94zP09HvUvTns9uK4Q98WDXec6VuegUik4Z81FZ9iurpk1R/FIfxSC
SxQPL25ZfL44N/E2OteIN57pWkjzFe8m7kpcoPirNeaoZYdVHudK20b5UHmx
xHP5vhDviTMTdyZ71EPqZ8HpiWdbATYA2/m+OEHxdC39bT1r6Hfru117o57t
m4L/PCCFDfU/gvhzcemjbcOt5kN3eO062zfEsU/wu9VcJ+t8Ktt2tJ0132LP
pZ7H0SYLTlX7SFyofKyd5zLZ9aFyXF3PV+3F24tz038QGrP+j9grxZmllnOu
+EbZWlyieD/xYOJ79T+CeD9xgDqb6Fwv3l5nkDKu7cXBjqDNPim4OPGH+l9D
XJw4W/3fIQ5W/Ke41gbOp6pR9T+I/lvR/xSH5ZHvVI+Jt9H5UTyJ7utsrjP4
TvO88iXVuuJ56tj3tNbiS1Xnqx5VLVrFOVd1jrg78YF9vGcH2A7iJXQeFF+h
XPm244NqEv2nI05A/+OID9T/QarpPndcUGz5LPunttV91beKn/MdS/X/jjhw
cZL/B8g+fo4=
             "]], Polygon3DBox[CompressedData["
1:eJxNmXnYltMWxt/nlXc/qYQUJZFKKmOTUDRoUApp7mv8qL7mkZKIEpGhQiKl
klmm45xjyhQZj3nmmDPPM5H7Z92uyx/39d7PHtdee++111pv/ZGTek8sFgqF
B7JCoZJ+y/NCoYsKugoniF8lTBGfLKwSX54KhUfUdqNwqfglKuutuuOFS8WX
CRPExwsXi5+nNg+p7YPCOeLnqWys6iqEc8RX5jH2JOFK8bOFAeIDXd9LfS5T
32XC0eJVhZPEZwjbiR8kLBQ/V2guPlRYL36zMFj8co0xRGMNFa7I45sFI+Ny
8dPd/hZhrvgZebSlz2nio/PQRTdhjL+Rr7/1Mz6FbMg4QfxW4UnxJ4T1Kca/
X3yDcKr4heozrhg6WCR+RwpdotN/ifdWWXfVHSUcI36Ryu5W3V3CBeITVHYs
dYwhfnOKurs93xyVHa26npb/YNakujOFNuIj8qijzVDxG1X2guqeF64T/6pU
KMwUP1l4U3yaym4Uv0mYLn6P8Jr4q8wpvsrr4/xc5e9nxZ8RVrB3mqOP5uor
DEDf6FB8lHCq+J0+T48K/xafnUfdiW5P/cuqe8n6maeyMcUYY674FSl0e7/n
a5ribHBGmiFbir1gTx4QP0v4D3OhE/GjNcYRGutwdC5+gsquUd06YYT4TMpU
V+7zjXyspZ/lP8P67CWcKd5DfRao79k+r705g+JXCMeL75eiboHl4/4w9khh
ie/DMPHhvm+L86gbIVwgvk59HlPfTcKaFPdzuOtXix/CHVPdIuFQ8XYp+PnC
4eJr8mjLmGu5iyq7TXW3CqPFWwhzszgzLdGF2kxX22nCOvFaPk+0qSG+lzBf
fJ6wR4rztkR8sfsP8PdSYaB4XcuDjLXFr9OYM4oxx7XiSWWnqW4O9kj8N53B
2eKnCD+L78Md4i4IjcT7pJiLOfp6fNqfKuwuvmuKvrM93wzN0UFzdRROEl/h
+z7M9udBtXlTbd/weWG9k8WnCLuIn6w2ZWo7GJnFz2cNqrve93N2Ctuz3vcd
e3Sl+EphmPjV3s9y6xP9rGUvLf8gYUUWfQa7Pbqf6v1aqrJ7VXefcLH3l7Yr
vN+TUshyne1RF9svbHon8U6cOfoK7bkPPm9DfX7n2F6yxlPEL1GbO7h7tvez
UnDKTrI9aau27ThTtv9ltp/Y14U+n8yxQPwozqz6rhK6iE/LQ5eDeGPyuN/Y
VmzsfPGMNmo7VfhD+z8jha7Wev6l7l/m9+YVlRXEM+FVy0vbqzlDKd4v5L9T
uFz8f8K2altJeBr7J+wiXkv4XLy+xmwo3kjYC93YvvZAZvbf9vg430/ORw/b
V/Q3w+8j9VOx/Xm8bQP8npR7vdiT4eKT8tAFbcaLV+Rh67Evo8RPzIP3tL6x
D4zd2/Zjd6FBMWSuJ16w/JT97vflEPFDebPF++XBD/N6Fno+1nSu7XU/v3fY
2ymej/qJeZyfXn6P2N+qQmPxvYXK7I3tJW/AweKzOIPiR/q7j+9je3Tk9fP2
dfd5aJuHbMh4CHO5nve4h3jrPO4yY/S1frv5/UR/3f3NHegKz8PWc147ix+Z
B+cMd7B+2/k9QN/DvH7WUJbHee3u/Z9u/fWwvOjz2DzWwpvSM4/3+givD331
z8NX6m37U2F5aDPW+m3v9XBeOuZxdzvTRjzPQ7ecx23FdxaaiO8j7CheUzhI
/EChpXgboT5nV/hB+99A3/uKNxP2tH4OFm9jfaJfOGfkGJ+nluIthDrM5fat
2WPrj/H2sz4b58Epa2h9871/Md7XhZLhv1m8wQtSfF9re3VuiveNOtpck0Kf
B3g9nA/ea8Y6wPpt5fOLvM1p6/a02Ve8RR59/xpD/OcUukAnL/Iee72sqal4
7TzW2vwf+tpNvK7X873K9hTfQ6ih76Lr6whbVbclxV1jjl88fmPvz/7WH/vX
2PMdlEddE8tfymMuxtzG+uR7d8YQ316o5+8qnB3vTyufj+utX3zCG1Loh7Gb
+v7slIfsjFHd+qrn9aAf7B1jtbT9aJbHXPWsz12EHThr1t83sslDeduEb0tx
XzirnNnhlq+z7/th9M3Dvu7q88r5hdemTPxDjVlFfDvhPfG3hRriOwlvin+X
oj1jfJ3C3tTydzXx51X2o2T5SXhZ/I0UfZGX9+ALoZp4VeHTFPqu4u8k/oLK
qotvL3zr/aQ/MmA/fxS2ZvHGPMz6U7RlzC9T7E8196/u+1qzGDJW9nlhbVW8
v9vlMXc17+ezGuOHLNbwnPhHKfrvLHwg/m6K/pWF//u9KiG79fGZ3zPKPre+
qMuFn8RfS8Epe9nj8/bR52Pxp/y9jfBkCn0mj/ec5/9Fsv2axf6wX/DfhM3i
jwnFYry/m1K8x+h+B+vr0RR16O8R8ZeEL9X3K+Eh8Y1+v7f6m/3aIv57Fvpl
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
Xd/K/SlrbvvL+1Tb9vhPQRFJ/Q==
             "]]}],
          Lighting->{{"Ambient", 
             RGBColor[
             0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
            "Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{2, 0, 2}]}}]}, 
        {RGBColor[0.560181, 0.691569, 0.194885], EdgeForm[None], Specularity[
          GrayLevel[1], 3], 
         StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
Cp1Z3ffPQj/rfat4Wzm0z+27NZbXKZ+bjbxHoc+mzoXGKNuuWEt2JpONOfzA
e15nRPtNMYziLvlH+aHJubhTVPQ+bGcbonuEcpXKuSn3KHtb2vbzGdAmGzkK
5TyV31OuUrGf7i+KJ99PkV/6IEWucq1txR+Ur+L53xoX6IHelmK/dfe5UL5X
ufGdPo/d0Kt8pjqjp6fISyuPrdyycnrKwytvppyS8tX75SP3q/hcsfEUny+N
d6O/9SH8j/ug+tL93beVKfJpq31+u9lGaf5b2P4od62cvHLL72r86DUp1jTj
da/kGFW2V/ahi+3Jm17r6dZ6d2qKeF55e+Wot6awY5of+YhS9n2at47oJSly
9fqfhf6PoHU5yftnHbjC8/+yzg/6yxQ5cP2/YK/rtPc8yEfofwfKi8q2XGo7
ttvtyA5o7eRH9rlN7fkVKWxgV9s3zVsvP1eOUfko5RuVY9f/FJTDV95e9x3d
sxQPNHNMoD1zuW2v8o1nZiMnqd8VdyvnNYJyJ3hZCp8v3688w1bvq09TtCVf
pPhic4q7mGy1coNtfQaVP5Q9V55Q+VLlxpRvVF5Odls5t7Xeb7Kxysu1zkb+
c5L3v9ZLucqW9jX6Vgf3YYT7L5sw0e8qN7vc51f7WX5K+c7xKeIKrZ1iLu2l
a7z3lLNVvlC5XOUudI9WPkR3Vf1PZ4/72dt7T3lC+XflEtWWYkPFJv8HyDN3
yg==
             "]], Polygon3DBox[CompressedData["
1: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
z+955D9yDzmIeo1+i/p0g+Mf+njW9sr3cV6rS1EjV3X8gfPbWeKnpqidVzke
faY9ZonP5MzEz/b737ofJt5ucP1L/OP8Vrr/rYivexyZThE/0ePscZJ4U8uH
D1JfHeV4vMXng32Q+5+0/e5t+VbaPq6xv5JTyJeHpNDVJuunvvXHmvQ3tVLI
ikxniJ9WRK4kp5xchHzbnA9q2h97Or42KkI/211/I/9lfiaGt3J+QtanvF5z
r8ecFt6PMWoY8vNhKXS52v7T3PkNmVqI78zjrJfbHuknqQWp/+gvqXeoHahB
qU+od+hv6Imoj+lf6KXp4ekv3hHOF68jzExRz1EfUVNTz9BvUxtRI9E/XuH4
Q4ym/+iT4q6ivvAiuTBFbU89vyFFvqB2Geb8gf0zTs1KfUo9ydyu9odhKWJ9
beF18ZFCI/FL/PxCitx3mvdjfzg5hPuSoUI9fEl4ze+zFjlwVIp6nl6+s+MD
8QJOz06/NM7fw30F/TP9MXsjw4IU9dXFWdxp0C98YPkaZ9Evch+ELlhjNLHR
67PnR+JLU/Ty9ICfYS9F5IaRPl/2p3dv5ff3Eb7QWS8VKot3KSL3kfOuL+K+
gv6JM+I+hPxELiHHUD/Rn/LuF/a34x2/lrpf3V9Y5vF97Z/wZfaHnT5/9qAe
Tili32dCefFj/Myax6bIT9QS1BDk/+kp7h64g5iaoh+lvifG0R+iP3rtdtZv
HedXakDqZ/r1puJNsrgvo19vjq6y6O/pl+il6JnXWd/ojzsQ7l+oZ6kdqa+p
b4kv9G6D7L+dnV8HW5/0t8jS3vbbxfOpR6g3Nlle+nf6V+6rOKvWPt/LHD+o
gcn33Ketc7zjvov7Nu6a+K2R9cczdwxH8n3y6fHiE4hp5HJhrPgYYXIe+fNt
8WnOz+Rr+HTnmzl5vMsaM8mNecTqd8hB4u/mMZd3Zou/IYwUHyGMEh/Hb3Bh
rHibFLGMOxvuV0bmMXc4cPz/0fGOfMH9SWOfF/cby/OYyzsjxBd4/dHCwjzs
6V3xec6n2Pt88QW2x5/z4PxGPUN9A3+PmOx8PM/Pe2C7+m12KXLUkjzqg5l+
3i6+VZhcihrpe+uDb0WmedQ+eehqhuXb7OeZri8+z6O24v1POQvt2SwLG+U+
6X399qrGhlIz5HHf08Tj+Hsvx6e65JAU97n03vTI3F+yHndTxORp4sNTxDJi
CvfLvf3MGvRfQ8gxWfRkzzo+1nf8oz+Y7njVMIv7QfoNakt6GO5/qa8ZYw79
4iw/E/O4D+T8uVvjDq+V8wX+18zyDU7hi82dP5CX3NLS8XeCvx+boP9Ybn0x
f4XjYVOvx/3mR3no7jVhcR79S2PHX+L3XinOer7j4TDHZ2SmP6jlePZlKe7f
yAfIwh3yc+JzU+i+np/ph7mb2iOL+8aDUrzLGgeI359ijDnc56/Lw17nUvOI
73A9hM1Rv27Mwx6Zsz6Pegn/HWd7xB/x5bGun8bY/vDB0axlfxxl/9w1Rayl
ni7x7fptouPDXO9P7fyx7Rv7H2f/XyG+TJhSCptdmsd9Justcbyh3vjU8byG
7XdSKfaYT6xwvJn6f/47w/EGf9npep4al3p6dR66meP4tcHz8aHv3E/Msf5K
zkfEwrXOH3zvXOuvvM97qfML/v1HHrL8TyZktT6JJxPziBd8K9/8Sx72hL9P
sj+ucfxDprX299GOr8THCX4mHozP4+8JDewf5K93HJ/R8TTHk/ccvzblcT5D
ShED0N8nedjyMMeLWY7XyD8jj3jaV/wlx991Pt9Jtp+NPo/JXp/13vTzYvdP
s61v+rPVjv8TbZ/kkzm2zxXOJwPFB2ET1t+AUvxGfnlb6FMKmYY73iH767Yf
zpNecZH1R/1AfF5ofyF/vCze3/r7LY+xBT4P9MvYAJ8X9Tn1LD0Y/cx055eR
1g/6Hiz+SinyGfkKXfWzv5DvGBtif8CfGEMG8hf9IrIiM38/mJLHtw/2+fH3
BcboHyt6fJz9E/38BQKw1bc=
             "]]}],
          Lighting->{{"Ambient", 
             RGBColor[0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
            "Directional", 
             RGBColor[
             0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[
             0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[
             0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
             ImageScaled[{2, 0, 2}]}}]}, 
        {RGBColor[0.922526, 0.385626, 0.209179], EdgeForm[None], Specularity[
          GrayLevel[1], 6], 
         StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
QyPbj2oT1Q6q9epnkROqpjgWvqQQ+bxsUjXCCMcv1YDKDc7NItbfiXTTN9L/
1vlQFuflDtviJ44Fn4I389wTOkPgA0h3nYcU8XFDPuLvRNu21i5bamt7ap9F
7XW3v9PK37qV3z+pc5eitn0GfleKWmZbPuoUvaOlf6+9qwhOKcS57Ogz2cLz
fsRSuievpKgNlWP8liLnV26j2Cd/2LoQtXP5LNZ4f4p8WDVs10LUL4rdyouU
vylfUmxa7d8qz3mN6++lWGdrnx3Vqppbe/DVQtQ+ihdvKjfiet8U+Yb09jj4
PuPXud4/RU74DvydFGvU+nR+lEvvD35ZiP7BPb7Xgec6gY+BM1PUOLNT5O2q
8VXr63zL1+p90sPH4LgUtX8772NXr6VLinqktW3jW+dy34MVi5HTHuK8V3N+
MsW75VNVz29nPDmLnsC8FPneXNtbG++v8uFx8IUpfif/2zmLGlk2rLq1kfPM
M4uhQ8XDNwqx7mZeu77byeu63jqRjf3s3En5W3tfK70nW1L80P4utP77Odfp
Dw4tRL2sPEHzUkx4MAsfq31XPtnFc37QqDUofqhOV+2vml1zu8n3ejm3ebkQ
+dgS51eqO17i/vMpzpr8hvo83VJ8Q/2T6YWor6f5fJW3/SsWq+ZVn6Grz472
Qj0f5cPq26hHcTR8JvgR996Dfwh+IDvLou5Qr6ardJjC98rPya92sn+QPWwp
RKxRjT/ddqh3PpFi3572M/rWdtv5C7Zh9Y6et81Lt2VswwNS1Br9HZtUI28s
RF9LPYp59iEt7UcG2W4Hgp+nqGsGg8/aF/UAKyBV4ClFb0ExQj2BdYXoKSnm
jkxRV34H/pii3vwhxRkc6LMs/fS0rvRO9XAUo3um6C+p97Wcd+0NX1mIObyR
RQ14I9Ib/iL4aIpaWL2pvvZpsmH9VnFfub36KuotqD+gWng0fHmKvoF8u/pg
v3jvxqToK0qHsiXVd9/5LPdyftvTfuwD+Gcp+nJ94H1S9CtUP6rWVg9B9Zrq
d+m2r/WpXHee83DZjPp4qovHpqiRJ4BLUtSwi63bit471aGKv8pJFK8Vayp5
/p/rXKboOcjnP5LinO7kW78WwlcP8DylQ8Ua9SXUD1EdcZznMNR6GG5fqn1U
30B1vXoFI+0/tae7nAeqPlJvRD3GSbYf9TBVp6suU59TcVP9qzq2YfUNZmRR
g8t3yOfKl9RlvAE8Fdyj84es0TdKAtdmUbOr96IaOV8Sz2cl0ZeYA6/q+l17
p3q8HuON8NPAw5Ap8MPBGu4J1CpG3a0+j2pt1ctb7RvVN1Bdr37mOrBMScxB
fU/1d7dn0b8p7x7ORr63CqzD89WKMeejwbOKES9Ugx9RjHVpnmVL4p16d64Y
fjtfjPf8kUUsyHldqutXWye7s/D/w7Pw85qvYpHmol6Beizqj9Xnt5vgpxej
P6O170oxnxXwpp6n+sbVwQyZ6zloHYpHO7PYi93+9vos5q05Kx6N8jvVk1nt
50r3TL87yv0r9ViqIIut/5x1qfVrXxbBD7V+5lpvVdzLUi+oQTF6ZmeAx3s/
ankf13r+9fx+rbekJOxCe6++tPpX6nXP8ZwVx7Ve9WHK+53qXZ9YjN74ZM/n
pGKsWdcVN7XPDcGzi7H/TX1ftii9KE9Q3159Qum+XEnMpbZt/uRixFXlMPfZ
9u/1uIP9uXIbxTjFfD3b2T5feUg3+0/FhQH2jfLb6vno/x3qC2k+Gzyncu41
ykZH2WaUb0xM0V+Vz9F3FEsVbxR31DfT/w4auD/W0Par9cru67tHp71Qvqqz
q/8LlFjfWndP+z3FDvVvm8Avtn+Tv5IfviFFvnqT/Xkf+y71VBXzVR8pj1Xe
qZ5nF89ReYFyJ/1PQX1a5c/KS29x3FH8/dlr7Acf4t8qp+hqP7PIPkF9Rf3/
Rb3rrT536k9Kb1qHdHcKz80EDyxGP1ZxRL3fU3yOtKday+PSY4pcTj29SrYf
/Z9FPk39cPUe1dPW2drl8yVbWgmeUwzfIj3v8B5Kn7Lj/wLjBcur
             "]], Polygon3DBox[CompressedData["
1:eJwtmXf81+Maxr/5fRKf55NKlCikQUhCEik7M+M4jnk4zl6cgbIqIhKRoqh0
SlGkgUqUUhoa0rAqbe1Fe5Drfe7rj+v1vT7Pvp/nucdzf2vffe8N9xxUKpUm
liuVMv3uSaXSJyKThL3ixxWl0nfiS4Tjxd9Q2eviA4TXxT/IS6XDxasIo8Q/
Udk48Y+Ej8VbqM9u8V3C+eKjVDZYfIgwWvx/wqvivYX+4muFKeKfCt+Lb9aY
x4vXFraIv0of8X5CT/HPVFZRvBCmiQ9TWQ/xl4Th4mvyqKPNWvHFKWRDxm/F
P/J4/YVx4n2EV7JYU1/xRlrzj+I/CKeKj0kxN30+ED9HZTvEtwtNxdtbHsZ4
RPxJ4UXxbsLj4iu8P+OFleI/eT2ThZ/Fq2uMReKLhaPEqwjTxKcLh4svSbG3
jLFU/GWhq/jz3o9vhBHiIy3fc0JH8SeErpyd9iATL0MG8R4q6yneiz0Tn62y
SuKVhc/FewrluBhCD/F3hQriB7O/4l2En8skh9BWfJfGmKG6mcJuyzdffJ7v
01ZhtPgY9lT8Ism0Tny9cLH4xxojFz+UOyT+X7XpJP6UcJ/4JWqzj7HcfrDa
7Nfc+4Q3xO9Xm0dV1054QHxqHnW04X78Q2XPqq6L8HfxPwmdxZ8W/pjifrGX
L3Anxd/PQ/Zyvt9z8pCdPfhC/EG37+r52nu8Z4QOKepZS3vhIfGHU8zV2fdj
vvfzEGFBHvrEXAcJY8X7Cnu09t3Cq+I1ithL9vRo8a0qq85dYT/FN2vML8Tn
CBvEpyGD+HvolO/rKnRLaCbeWPiGuyKcIX6o8JX4l5yxeC23X+n5KgnLxZeh
c+JLNecx1HFnxYdqjmHi76Dj4p+q7EjxI9A58bOLGGuV9QX9466OsD7NFiZg
O4QZ4nWKsD1LhbqsTWVjxT8UvhafIwwSf4PzEC9ze2xWSfyAymaJz/b3H/Td
Rrytz7uBytaIrxbqW172doFwbBH3g7YPCn/2+Iz1uZCJj1fZW+JvZ2HvsH/w
ocIk8e15nE0NYUce9o56+vS1fFvEN2dhX7EPjD/L+j3f/av7vi32fr2LjOL7
89h7zuAn8SoqO0m8AfZC/Ms8bDM2+ivxhSl0c4b3bwc2PIs9fVd8XgpbM836
uSqFLcY+LU9hv2lLn24pzoOxPnP/8bZPnM+H2PIUtm6c94P5qaPNItsD5poq
bBJflmKuSZZvZApbMdrnO9b9WQP+Y5/lYb/2i1csYizGPEx8Y4pvfMq6FPd7
iufLxcsVMR8yHiRevgg+xfd/cIq7zHkOwt+kuJvINNX2Fl8yEZ0R76893lsW
OvtaHvYMTtkE8UmuxyZNFh9k+0TZAPHeeeg+NqCX+Id56D5jYA8X5WEbc+vb
S9hc1e0UXhRf7f1mjWvwVXnYesbsI97d9uyA2r8gvt7yTLC9+DGFLMi0M4U9
mWD5tojPdT1ln4ufKDQVP0c4CV3QmBs19ib7g6H2D8z3jviIPDhrGCk+MMXe
ohP9fV+G2n5M9X7Dh9kenFKE7cEG4Y9r2J6sEKoV4a+X+/t08apFcMoqi9cr
QtexfyfY/uF/1gqnidcuom6V9f+CIupoc2ER8cwat28pfkQRvot67GfzImKd
ncJ5RfjzjeytsF3rP0bfm7Iow7+fJSzMwudvt3zEGlvZT/EzhW1ZxCDIg/0k
1qCsifi5RcxFDNLM692TRczF+hp6/az5ZK9vtb/Pd3/kXe319rE9Iz57xfoG
f8v6TLxA/Pam8C/xXq6njPjhPWKSLGIK6hekaDvY9mKEMNzn+Y74CylsNzZ8
uO0/dcN9v9baf42y/qLPo2wPsBeTU/g27OFE7moKjo0cZ/tFPWMQT47Ow9fi
c9/LI54b4fnex5Z4fNpPtz1iPMZYbn8z2uuZZX2g7wjrP/Eytpwzrin+tedD
Z7/Jw1+iu0lYJl5bfU4Vb8h9FK+Xgp8m1Bc/JAWnrDz6qT5niDfOIh6uyJxZ
xMgz8oiXqTvd3+OEqlnYf+KJ5Xn4YnzyCvHvXE/ZEvGdwplZzLGNuhScsiPE
f1ZZXfF6wgFsVQpeXygTX6eyE/29WrwWdzoLGY+1Pzohi3h+nvhxKmsifjYy
eHy+zxL2eXzqmng+1s98db3e6UI1yzNFfKLlQ6bxecSz7A17NITYV+PVFK/l
/Vxk/1nD57M7D07ZnjzOj298MPFZKYWvZYxy4ivz4Mf4POfmIRtzEj9/7/in
mvdjo3BYFjH2EMeT1V0/S3xmHrE0NvPpPM6b8U7weWA/K7s/9vR9+3fKRtre
Uscc9Of9U8vrXeX10baK93+d9481bPJ9YG/rCAu9Xw19fsh7cIqz5YwrpPA/
q7XWNcLL4nV8XviEuuJPqWyl6lYJz+ThH9eJr7e/w//BNzh+78aelcWY+LPO
+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
             "]]}],
          Lighting->{{"Ambient", 
             RGBColor[0.30756835, 0.18676585, 0.147065275]}, {"Directional", 
             RGBColor[0.2306315, 0.0964065, 0.05229475], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             GrayLevel[0.3], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[0.2306315, 0.0964065, 0.05229475], 
             ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}, {}, {}}, {
        {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0L0uw1EYwOHjo61vrRuQViJmrSrVaqsiVgmrMCAGRsbGpHEFuomtvQQm
toYbkNTAztAL4PmH4ZfnJCfnnJw3fXi+czYQQjjQoKL1jGZjIcyxwly0z01e
cY/3POYzL/nJJlvqKBEP4ZELfOU233nKb97E/x7rMMUuM8wqpyXltayCVrSq
otZUUlnrqqiqmja0qDf3pdlmkk3+ePKEX9xij/N8YYwPbOtWff+55gcv+MQj
3nGXDda5zyzLzDClpKY1pUlNaFxjGtVINB9FI3AsDGvof/6/GFgkeQ==
          "]]}, 
        {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0DkvxEEYwOF3FShkaURrP4DIKkTtvtaxuyJKYpU2Crvu+yrp1jdARUul
phMdH4FKlHj+UfzyzGQmk5nJLJTzy6mImNeAQb9m9FEfscR0Q0SVnTzjFC+5
whte8IF3fOa7PvVq/stvttRFtDVGZNjDLs6xj+ssssYSK6pqLVnThja1pW3t
aFd72teBDnWkY51oVVfOW0zOYYGz7GU3s2xlO7/cr5kv/EnerTc9mj/xlvc8
5zXLrHGCp+xghU0ssaiC8ppO/kuTyX7lNK4xjWpEwxrSYOr///8A5SYvjw==

          "]]}, 
        {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0LsuA1AYwPFPiWDgBcRlECsPIMLAXjtxiZEFI5NrUdfWKgb1Btq6q/sb
YBMbTyAVv8bwzy/nDF/O+drHppNTVRExqpVExLIOVKyLOOE7CyzzhS317tjL
b47wlwtsqo5oU7eOnPtZ4hA/OcHahohZdnKJg8xykjnmVVBRZzrXhS51pWvd
6LYyW3e614Me9aRTzZl3zAFm2MFF1nCGH94zXpnFJA/Zxy61Ku3cyHmW/W+Y
X+zhG5v5zB97yfOVOWaV0b72tKsdbWtLaW1qQ+tKaU2rif/9/wHO2Dql
          "]]}, 
        {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0L0uw1EYwOG3/q2P/lsTK7ETBhdAYmTQ3aB2jXAJDDaRcAmITQxcgqrP
qo/WHbQ2MWnxJIZfnrwnOeck70S5UlrPRMSqaknEtd61m4/44Cl7rHE464zj
LKYRM5ziPJdY4pq2tGHe4T4Pec5jNnjJL1Y5WohocZYddtXTj34VuYiM+pQo
q5z6NaBBDSmvVAV9u7fgvTZH2OSn/65Y5wXPeMQ9HrDCbW6qrBXzMhc5x0lO
M+UY2/ZQZJVd+zlhhy019aZXvehZDT2prkc96F53utVN8r//P9rAOMg=
          "]]}, 
        {GrayLevel[0.2], 
         Line3DBox[{1311, 1293, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 
          1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1312, 1315, 1316, 
          1319, 1320, 1323, 1324, 1327, 1328, 1331, 1332, 1335, 1336, 1339, 
          1340, 1342}], 
         Line3DBox[{1344, 1294, 1313, 1314, 1317, 1318, 1321, 1322, 1325, 
          1326, 1329, 1330, 1333, 1334, 1337, 1338, 1341, 1345, 1348, 1349, 
          1352, 1353, 1356, 1357, 1360, 1361, 1364, 1365, 1368, 1369, 1372, 
          1373, 1375}], 
         Line3DBox[{1377, 1310, 1346, 1347, 1350, 1351, 1354, 1355, 1358, 
          1359, 1362, 1363, 1366, 1367, 1370, 1371, 1374, 1378, 1381, 1382, 
          1385, 1386, 1389, 1390, 1393, 1394, 1397, 1398, 1401, 1402, 1405, 
          1406, 1408}], 
         Line3DBox[{1410, 1343, 1379, 1380, 1383, 1384, 1387, 1388, 1391, 
          1392, 1395, 1396, 1399, 1400, 1403, 1404, 1407, 1411, 1414, 1415, 
          1418, 1419, 1422, 1423, 1426, 1427, 1430, 1431, 1434, 1435, 1438, 
          1439, 1441}], 
         Line3DBox[{1443, 1376, 1412, 1413, 1416, 1417, 1420, 1421, 1424, 
          1425, 1428, 1429, 1432, 1433, 1436, 1437, 1440, 1444, 1447, 1448, 
          1451, 1452, 1455, 1456, 1459, 1460, 1463, 1464, 1467, 1468, 1471, 
          1472, 1474}], 
         Line3DBox[{1475, 1409, 1445, 1446, 1449, 1450, 1453, 1454, 1457, 
          1458, 1461, 1462, 1465, 1466, 1469, 1470, 1473, 1476, 1479, 1480, 
          1483, 1484, 1487, 1488, 1491, 1492, 1495, 1496, 1499, 1500, 1503, 
          1504, 1506}], 
         Line3DBox[{1507, 1442, 1477, 1478, 1481, 1482, 1485, 1486, 1489, 
          1490, 1493, 1494, 1497, 1498, 1501, 1502, 1505, 1508, 1509, 1510, 
          1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 
          1522, 1523}], 
         Line3DBox[{154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 
          165, 166, 167, 168, 169, 170}], 
         Line3DBox[{1541, 1572, 1571, 1568, 1567, 1564, 1563, 1560, 1559, 
          1556, 1555, 1552, 1551, 1548, 1547, 1544, 1540, 1539, 1538, 1537, 
          1536, 1535, 1534, 1533, 1532, 1531, 1530, 1529, 1528, 1527, 1526, 
          1524, 1543}], 
         Line3DBox[{1574, 1605, 1604, 1601, 1600, 1597, 1596, 1593, 1592, 
          1589, 1588, 1585, 1584, 1581, 1580, 1577, 1573, 1570, 1569, 1566, 
          1565, 1562, 1561, 1558, 1557, 1554, 1553, 1550, 1549, 1546, 1545, 
          1525, 1576}], 
         Line3DBox[{1607, 1638, 1637, 1634, 1633, 1630, 1629, 1626, 1625, 
          1622, 1621, 1618, 1617, 1614, 1613, 1610, 1606, 1603, 1602, 1599, 
          1598, 1595, 1594, 1591, 1590, 1587, 1586, 1583, 1582, 1579, 1578, 
          1542, 1609}], 
         Line3DBox[{1640, 1671, 1670, 1667, 1666, 1663, 1662, 1659, 1658, 
          1655, 1654, 1651, 1650, 1647, 1646, 1643, 1639, 1636, 1635, 1632, 
          1631, 1628, 1627, 1624, 1623, 1620, 1619, 1616, 1615, 1612, 1611, 
          1575, 1642}], 
         Line3DBox[{1673, 1704, 1703, 1700, 1699, 1696, 1695, 1692, 1691, 
          1688, 1687, 1684, 1683, 1680, 1679, 1676, 1672, 1669, 1668, 1665, 
          1664, 1661, 1660, 1657, 1656, 1653, 1652, 1649, 1648, 1645, 1644, 
          1608, 1675}], 
         Line3DBox[{1706, 1736, 1735, 1732, 1731, 1728, 1727, 1724, 1723, 
          1720, 1719, 1716, 1715, 1712, 1711, 1708, 1705, 1702, 1701, 1698, 
          1697, 1694, 1693, 1690, 1689, 1686, 1685, 1682, 1681, 1678, 1677, 
          1641, 1707}], 
         Line3DBox[{1738, 1674, 1709, 1710, 1713, 1714, 1717, 1718, 1721, 
          1722, 1725, 1726, 1729, 1730, 1733, 1734, 1737, 1739, 1740, 1741, 
          1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 
          1753, 1754}], 
         Line3DBox[{1773, 1755, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 
          1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1777, 1778, 
          1781, 1782, 1785, 1786, 1789, 1790, 1793, 1794, 1797, 1798, 1801, 
          1802, 1804}], 
         Line3DBox[{1806, 1756, 1775, 1776, 1779, 1780, 1783, 1784, 1787, 
          1788, 1791, 1792, 1795, 1796, 1799, 1800, 1803, 1807, 1810, 1811, 
          1814, 1815, 1818, 1819, 1822, 1823, 1826, 1827, 1830, 1831, 1834, 
          1835, 1837}], 
         Line3DBox[{1839, 1772, 1808, 1809, 1812, 1813, 1816, 1817, 1820, 
          1821, 1824, 1825, 1828, 1829, 1832, 1833, 1836, 1840, 1843, 1844, 
          1847, 1848, 1851, 1852, 1855, 1856, 1859, 1860, 1863, 1864, 1867, 
          1868, 1870}], 
         Line3DBox[{1872, 1805, 1841, 1842, 1845, 1846, 1849, 1850, 1853, 
          1854, 1857, 1858, 1861, 1862, 1865, 1866, 1869, 1873, 1876, 1877, 
          1880, 1881, 1884, 1885, 1888, 1889, 1892, 1893, 1896, 1897, 1900, 
          1901, 1903}], 
         Line3DBox[{1905, 1838, 1874, 1875, 1878, 1879, 1882, 1883, 1886, 
          1887, 1890, 1891, 1894, 1895, 1898, 1899, 1902, 1906, 1909, 1910, 
          1913, 1914, 1917, 1918, 1921, 1922, 1925, 1926, 1929, 1930, 1933, 
          1934, 1936}], 
         Line3DBox[{1937, 1871, 1907, 1908, 1911, 1912, 1915, 1916, 1919, 
          1920, 1923, 1924, 1927, 1928, 1931, 1932, 1935, 1938, 1941, 1942, 
          1945, 1946, 1949, 1950, 1953, 1954, 1957, 1958, 1961, 1962, 1965, 
          1966, 1968}], 
         Line3DBox[{1969, 1904, 1939, 1940, 1943, 1944, 1947, 1948, 1951, 
          1952, 1955, 1956, 1959, 1960, 1963, 1964, 1967, 1970, 1971, 1972, 
          1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 
          1984, 1985}], 
         Line3DBox[{477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 
          488, 489, 490, 491, 492, 493}], 
         Line3DBox[{2003, 2034, 2033, 2030, 2029, 2026, 2025, 2022, 2021, 
          2018, 2017, 2014, 2013, 2010, 2009, 2006, 2002, 2001, 2000, 1999, 
          1998, 1997, 1996, 1995, 1994, 1993, 1992, 1991, 1990, 1989, 1988, 
          1986, 2005}], 
         Line3DBox[{2036, 2067, 2066, 2063, 2062, 2059, 2058, 2055, 2054, 
          2051, 2050, 2047, 2046, 2043, 2042, 2039, 2035, 2032, 2031, 2028, 
          2027, 2024, 2023, 2020, 2019, 2016, 2015, 2012, 2011, 2008, 2007, 
          1987, 2038}], 
         Line3DBox[{2069, 2100, 2099, 2096, 2095, 2092, 2091, 2088, 2087, 
          2084, 2083, 2080, 2079, 2076, 2075, 2072, 2068, 2065, 2064, 2061, 
          2060, 2057, 2056, 2053, 2052, 2049, 2048, 2045, 2044, 2041, 2040, 
          2004, 2071}], 
         Line3DBox[{2102, 2133, 2132, 2129, 2128, 2125, 2124, 2121, 2120, 
          2117, 2116, 2113, 2112, 2109, 2108, 2105, 2101, 2098, 2097, 2094, 
          2093, 2090, 2089, 2086, 2085, 2082, 2081, 2078, 2077, 2074, 2073, 
          2037, 2104}], 
         Line3DBox[{2135, 2166, 2165, 2162, 2161, 2158, 2157, 2154, 2153, 
          2150, 2149, 2146, 2145, 2142, 2141, 2138, 2134, 2131, 2130, 2127, 
          2126, 2123, 2122, 2119, 2118, 2115, 2114, 2111, 2110, 2107, 2106, 
          2070, 2137}], 
         Line3DBox[{2168, 2198, 2197, 2194, 2193, 2190, 2189, 2186, 2185, 
          2182, 2181, 2178, 2177, 2174, 2173, 2170, 2167, 2164, 2163, 2160, 
          2159, 2156, 2155, 2152, 2151, 2148, 2147, 2144, 2143, 2140, 2139, 
          2103, 2169}], 
         Line3DBox[{2200, 2136, 2171, 2172, 2175, 2176, 2179, 2180, 2183, 
          2184, 2187, 2188, 2191, 2192, 2195, 2196, 2199, 2201, 2202, 2203, 
          2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 
          2215, 2216}], 
         Line3DBox[{2235, 2217, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 
          2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2236, 2239, 2240, 
          2243, 2244, 2247, 2248, 2251, 2252, 2255, 2256, 2259, 2260, 2263, 
          2264, 2266}], 
         Line3DBox[{2268, 2218, 2237, 2238, 2241, 2242, 2245, 2246, 2249, 
          2250, 2253, 2254, 2257, 2258, 2261, 2262, 2265, 2269, 2272, 2273, 
          2276, 2277, 2280, 2281, 2284, 2285, 2288, 2289, 2292, 2293, 2296, 
          2297, 2299}], 
         Line3DBox[{2301, 2234, 2270, 2271, 2274, 2275, 2278, 2279, 2282, 
          2283, 2286, 2287, 2290, 2291, 2294, 2295, 2298, 2302, 2305, 2306, 
          2309, 2310, 2313, 2314, 2317, 2318, 2321, 2322, 2325, 2326, 2329, 
          2330, 2332}], 
         Line3DBox[{2334, 2267, 2303, 2304, 2307, 2308, 2311, 2312, 2315, 
          2316, 2319, 2320, 2323, 2324, 2327, 2328, 2331, 2335, 2338, 2339, 
          2342, 2343, 2346, 2347, 2350, 2351, 2354, 2355, 2358, 2359, 2362, 
          2363, 2365}], 
         Line3DBox[{2367, 2300, 2336, 2337, 2340, 2341, 2344, 2345, 2348, 
          2349, 2352, 2353, 2356, 2357, 2360, 2361, 2364, 2368, 2371, 2372, 
          2375, 2376, 2379, 2380, 2383, 2384, 2387, 2388, 2391, 2392, 2395, 
          2396, 2398}], 
         Line3DBox[{2399, 2333, 2369, 2370, 2373, 2374, 2377, 2378, 2381, 
          2382, 2385, 2386, 2389, 2390, 2393, 2394, 2397, 2400, 2403, 2404, 
          2407, 2408, 2411, 2412, 2415, 2416, 2419, 2420, 2423, 2424, 2427, 
          2428, 2430}], 
         Line3DBox[{2431, 2366, 2401, 2402, 2405, 2406, 2409, 2410, 2413, 
          2414, 2417, 2418, 2421, 2422, 2425, 2426, 2429, 2432, 2433, 2434, 
          2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 
          2446, 2447}], 
         Line3DBox[{800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 
          811, 812, 813, 814, 815, 816}], 
         Line3DBox[{2465, 2496, 2495, 2492, 2491, 2488, 2487, 2484, 2483, 
          2480, 2479, 2476, 2475, 2472, 2471, 2468, 2464, 2463, 2462, 2461, 
          2460, 2459, 2458, 2457, 2456, 2455, 2454, 2453, 2452, 2451, 2450, 
          2448, 2467}], 
         Line3DBox[{2498, 2529, 2528, 2525, 2524, 2521, 2520, 2517, 2516, 
          2513, 2512, 2509, 2508, 2505, 2504, 2501, 2497, 2494, 2493, 2490, 
          2489, 2486, 2485, 2482, 2481, 2478, 2477, 2474, 2473, 2470, 2469, 
          2449, 2500}], 
         Line3DBox[{2531, 2562, 2561, 2558, 2557, 2554, 2553, 2550, 2549, 
          2546, 2545, 2542, 2541, 2538, 2537, 2534, 2530, 2527, 2526, 2523, 
          2522, 2519, 2518, 2515, 2514, 2511, 2510, 2507, 2506, 2503, 2502, 
          2466, 2533}], 
         Line3DBox[{2564, 2595, 2594, 2591, 2590, 2587, 2586, 2583, 2582, 
          2579, 2578, 2575, 2574, 2571, 2570, 2567, 2563, 2560, 2559, 2556, 
          2555, 2552, 2551, 2548, 2547, 2544, 2543, 2540, 2539, 2536, 2535, 
          2499, 2566}], 
         Line3DBox[{2597, 2628, 2627, 2624, 2623, 2620, 2619, 2616, 2615, 
          2612, 2611, 2608, 2607, 2604, 2603, 2600, 2596, 2593, 2592, 2589, 
          2588, 2585, 2584, 2581, 2580, 2577, 2576, 2573, 2572, 2569, 2568, 
          2532, 2599}], 
         Line3DBox[{2630, 2660, 2659, 2656, 2655, 2652, 2651, 2648, 2647, 
          2644, 2643, 2640, 2639, 2636, 2635, 2632, 2629, 2626, 2625, 2622, 
          2621, 2618, 2617, 2614, 2613, 2610, 2609, 2606, 2605, 2602, 2601, 
          2565, 2631}], 
         Line3DBox[{2662, 2598, 2633, 2634, 2637, 2638, 2641, 2642, 2645, 
          2646, 2649, 2650, 2653, 2654, 2657, 2658, 2661, 2663, 2664, 2665, 
          2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 
          2677, 2678}], 
         Line3DBox[{2697, 2679, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 
          2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2698, 2701, 2702, 
          2705, 2706, 2709, 2710, 2713, 2714, 2717, 2718, 2721, 2722, 2725, 
          2726, 2728}], 
         Line3DBox[{2730, 2680, 2699, 2700, 2703, 2704, 2707, 2708, 2711, 
          2712, 2715, 2716, 2719, 2720, 2723, 2724, 2727, 2731, 2734, 2735, 
          2738, 2739, 2742, 2743, 2746, 2747, 2750, 2751, 2754, 2755, 2758, 
          2759, 2761}], 
         Line3DBox[{2763, 2696, 2732, 2733, 2736, 2737, 2740, 2741, 2744, 
          2745, 2748, 2749, 2752, 2753, 2756, 2757, 2760, 2764, 2767, 2768, 
          2771, 2772, 2775, 2776, 2779, 2780, 2783, 2784, 2787, 2788, 2791, 
          2792, 2794}], 
         Line3DBox[{2796, 2729, 2765, 2766, 2769, 2770, 2773, 2774, 2777, 
          2778, 2781, 2782, 2785, 2786, 2789, 2790, 2793, 2797, 2800, 2801, 
          2804, 2805, 2808, 2809, 2812, 2813, 2816, 2817, 2820, 2821, 2824, 
          2825, 2827}], 
         Line3DBox[{2829, 2762, 2798, 2799, 2802, 2803, 2806, 2807, 2810, 
          2811, 2814, 2815, 2818, 2819, 2822, 2823, 2826, 2830, 2833, 2834, 
          2837, 2838, 2841, 2842, 2845, 2846, 2849, 2850, 2853, 2854, 2857, 
          2858, 2860}], 
         Line3DBox[{2861, 2795, 2831, 2832, 2835, 2836, 2839, 2840, 2843, 
          2844, 2847, 2848, 2851, 2852, 2855, 2856, 2859, 2862, 2865, 2866, 
          2869, 2870, 2873, 2874, 2877, 2878, 2881, 2882, 2885, 2886, 2889, 
          2890, 2892}], 
         Line3DBox[{2893, 2828, 2863, 2864, 2867, 2868, 2871, 2872, 2875, 
          2876, 2879, 2880, 2883, 2884, 2887, 2888, 2891, 2894, 2895, 2896, 
          2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 2906, 2907, 
          2908, 2909}], 
         Line3DBox[{1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 
          1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139}], 
         Line3DBox[{2927, 2958, 2957, 2954, 2953, 2950, 2949, 2946, 2945, 
          2942, 2941, 2938, 2937, 2934, 2933, 2930, 2926, 2925, 2924, 2923, 
          2922, 2921, 2920, 2919, 2918, 2917, 2916, 2915, 2914, 2913, 2912, 
          2910, 2929}], 
         Line3DBox[{2960, 2991, 2990, 2987, 2986, 2983, 2982, 2979, 2978, 
          2975, 2974, 2971, 2970, 2967, 2966, 2963, 2959, 2956, 2955, 2952, 
          2951, 2948, 2947, 2944, 2943, 2940, 2939, 2936, 2935, 2932, 2931, 
          2911, 2962}], 
         Line3DBox[{2993, 3024, 3023, 3020, 3019, 3016, 3015, 3012, 3011, 
          3008, 3007, 3004, 3003, 3000, 2999, 2996, 2992, 2989, 2988, 2985, 
          2984, 2981, 2980, 2977, 2976, 2973, 2972, 2969, 2968, 2965, 2964, 
          2928, 2995}], 
         Line3DBox[{3026, 3057, 3056, 3053, 3052, 3049, 3048, 3045, 3044, 
          3041, 3040, 3037, 3036, 3033, 3032, 3029, 3025, 3022, 3021, 3018, 
          3017, 3014, 3013, 3010, 3009, 3006, 3005, 3002, 3001, 2998, 2997, 
          2961, 3028}], 
         Line3DBox[{3059, 3090, 3089, 3086, 3085, 3082, 3081, 3078, 3077, 
          3074, 3073, 3070, 3069, 3066, 3065, 3062, 3058, 3055, 3054, 3051, 
          3050, 3047, 3046, 3043, 3042, 3039, 3038, 3035, 3034, 3031, 3030, 
          2994, 3061}], 
         Line3DBox[{3092, 3122, 3121, 3118, 3117, 3114, 3113, 3110, 3109, 
          3106, 3105, 3102, 3101, 3098, 3097, 3094, 3091, 3088, 3087, 3084, 
          3083, 3080, 3079, 3076, 3075, 3072, 3071, 3068, 3067, 3064, 3063, 
          3027, 3093}], 
         Line3DBox[{3124, 3060, 3095, 3096, 3099, 3100, 3103, 3104, 3107, 
          3108, 3111, 3112, 3115, 3116, 3119, 3120, 3123, 3125, 3126, 3127, 
          3128, 3129, 3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3138, 
          3139, 3140}]}, 
        {GrayLevel[0.2], 
         Line3DBox[{2, 19, 1295, 36, 1313, 53, 1346, 70, 1379, 87, 1412, 104, 
          1445, 121, 1477, 138, 155, 172, 1526, 189, 1545, 206, 1578, 223, 
          1611, 240, 1644, 257, 1677, 274, 1709, 291, 308}], 
         Line3DBox[{3, 20, 1297, 37, 1317, 54, 1350, 71, 1383, 88, 1416, 105, 
          1449, 122, 1481, 139, 156, 173, 1528, 190, 1549, 207, 1582, 224, 
          1615, 241, 1648, 258, 1681, 275, 1713, 292, 309}], 
         Line3DBox[{4, 21, 1299, 38, 1321, 55, 1354, 72, 1387, 89, 1420, 106, 
          1453, 123, 1485, 140, 157, 174, 1530, 191, 1553, 208, 1586, 225, 
          1619, 242, 1652, 259, 1685, 276, 1717, 293, 310}], 
         Line3DBox[{5, 22, 1301, 39, 1325, 56, 1358, 73, 1391, 90, 1424, 107, 
          1457, 124, 1489, 141, 158, 175, 1532, 192, 1557, 209, 1590, 226, 
          1623, 243, 1656, 260, 1689, 277, 1721, 294, 311}], 
         Line3DBox[{6, 23, 1303, 40, 1329, 57, 1362, 74, 1395, 91, 1428, 108, 
          1461, 125, 1493, 142, 159, 176, 1534, 193, 1561, 210, 1594, 227, 
          1627, 244, 1660, 261, 1693, 278, 1725, 295, 312}], 
         Line3DBox[{7, 24, 1305, 41, 1333, 58, 1366, 75, 1399, 92, 1432, 109, 
          1465, 126, 1497, 143, 160, 177, 1536, 194, 1565, 211, 1598, 228, 
          1631, 245, 1664, 262, 1697, 279, 1729, 296, 313}], 
         Line3DBox[{8, 25, 1307, 42, 1337, 59, 1370, 76, 1403, 93, 1436, 110, 
          1469, 127, 1501, 144, 161, 178, 1538, 195, 1569, 212, 1602, 229, 
          1635, 246, 1668, 263, 1701, 280, 1733, 297, 314}], 
         Line3DBox[{9, 26, 1309, 43, 1341, 60, 1374, 77, 1407, 94, 1440, 111, 
          1473, 128, 1505, 145, 162, 179, 1540, 196, 1573, 213, 1606, 230, 
          1639, 247, 1672, 264, 1705, 281, 1737, 298, 315}], 
         Line3DBox[{10, 27, 1315, 44, 1348, 61, 1381, 78, 1414, 95, 1447, 112,
           1479, 129, 1509, 146, 163, 180, 1547, 197, 1580, 214, 1613, 231, 
          1646, 248, 1679, 265, 1711, 282, 1740, 299, 316}], 
         Line3DBox[{11, 28, 1319, 45, 1352, 62, 1385, 79, 1418, 96, 1451, 113,
           1483, 130, 1511, 147, 164, 181, 1551, 198, 1584, 215, 1617, 232, 
          1650, 249, 1683, 266, 1715, 283, 1742, 300, 317}], 
         Line3DBox[{12, 29, 1323, 46, 1356, 63, 1389, 80, 1422, 97, 1455, 114,
           1487, 131, 1513, 148, 165, 182, 1555, 199, 1588, 216, 1621, 233, 
          1654, 250, 1687, 267, 1719, 284, 1744, 301, 318}], 
         Line3DBox[{13, 30, 1327, 47, 1360, 64, 1393, 81, 1426, 98, 1459, 115,
           1491, 132, 1515, 149, 166, 183, 1559, 200, 1592, 217, 1625, 234, 
          1658, 251, 1691, 268, 1723, 285, 1746, 302, 319}], 
         Line3DBox[{14, 31, 1331, 48, 1364, 65, 1397, 82, 1430, 99, 1463, 116,
           1495, 133, 1517, 150, 167, 184, 1563, 201, 1596, 218, 1629, 235, 
          1662, 252, 1695, 269, 1727, 286, 1748, 303, 320}], 
         Line3DBox[{15, 32, 1335, 49, 1368, 66, 1401, 83, 1434, 100, 1467, 
          117, 1499, 134, 1519, 151, 168, 185, 1567, 202, 1600, 219, 1633, 
          236, 1666, 253, 1699, 270, 1731, 287, 1750, 304, 321}], 
         Line3DBox[{16, 33, 1339, 50, 1372, 67, 1405, 84, 1438, 101, 1471, 
          118, 1503, 135, 1521, 152, 169, 186, 1571, 203, 1604, 220, 1637, 
          237, 1670, 254, 1703, 271, 1735, 288, 1752, 305, 322}], 
         Line3DBox[{325, 342, 1757, 359, 1775, 376, 1808, 393, 1841, 410, 
          1874, 427, 1907, 444, 1939, 461, 478, 495, 1988, 512, 2007, 529, 
          2040, 546, 2073, 563, 2106, 580, 2139, 597, 2171, 614, 631}], 
         Line3DBox[{326, 343, 1759, 360, 1779, 377, 1812, 394, 1845, 411, 
          1878, 428, 1911, 445, 1943, 462, 479, 496, 1990, 513, 2011, 530, 
          2044, 547, 2077, 564, 2110, 581, 2143, 598, 2175, 615, 632}], 
         Line3DBox[{327, 344, 1761, 361, 1783, 378, 1816, 395, 1849, 412, 
          1882, 429, 1915, 446, 1947, 463, 480, 497, 1992, 514, 2015, 531, 
          2048, 548, 2081, 565, 2114, 582, 2147, 599, 2179, 616, 633}], 
         Line3DBox[{328, 345, 1763, 362, 1787, 379, 1820, 396, 1853, 413, 
          1886, 430, 1919, 447, 1951, 464, 481, 498, 1994, 515, 2019, 532, 
          2052, 549, 2085, 566, 2118, 583, 2151, 600, 2183, 617, 634}], 
         Line3DBox[{329, 346, 1765, 363, 1791, 380, 1824, 397, 1857, 414, 
          1890, 431, 1923, 448, 1955, 465, 482, 499, 1996, 516, 2023, 533, 
          2056, 550, 2089, 567, 2122, 584, 2155, 601, 2187, 618, 635}], 
         Line3DBox[{330, 347, 1767, 364, 1795, 381, 1828, 398, 1861, 415, 
          1894, 432, 1927, 449, 1959, 466, 483, 500, 1998, 517, 2027, 534, 
          2060, 551, 2093, 568, 2126, 585, 2159, 602, 2191, 619, 636}], 
         Line3DBox[{331, 348, 1769, 365, 1799, 382, 1832, 399, 1865, 416, 
          1898, 433, 1931, 450, 1963, 467, 484, 501, 2000, 518, 2031, 535, 
          2064, 552, 2097, 569, 2130, 586, 2163, 603, 2195, 620, 637}], 
         Line3DBox[{332, 349, 1771, 366, 1803, 383, 1836, 400, 1869, 417, 
          1902, 434, 1935, 451, 1967, 468, 485, 502, 2002, 519, 2035, 536, 
          2068, 553, 2101, 570, 2134, 587, 2167, 604, 2199, 621, 638}], 
         Line3DBox[{333, 350, 1777, 367, 1810, 384, 1843, 401, 1876, 418, 
          1909, 435, 1941, 452, 1971, 469, 486, 503, 2009, 520, 2042, 537, 
          2075, 554, 2108, 571, 2141, 588, 2173, 605, 2202, 622, 639}], 
         Line3DBox[{334, 351, 1781, 368, 1814, 385, 1847, 402, 1880, 419, 
          1913, 436, 1945, 453, 1973, 470, 487, 504, 2013, 521, 2046, 538, 
          2079, 555, 2112, 572, 2145, 589, 2177, 606, 2204, 623, 640}], 
         Line3DBox[{335, 352, 1785, 369, 1818, 386, 1851, 403, 1884, 420, 
          1917, 437, 1949, 454, 1975, 471, 488, 505, 2017, 522, 2050, 539, 
          2083, 556, 2116, 573, 2149, 590, 2181, 607, 2206, 624, 641}], 
         Line3DBox[{336, 353, 1789, 370, 1822, 387, 1855, 404, 1888, 421, 
          1921, 438, 1953, 455, 1977, 472, 489, 506, 2021, 523, 2054, 540, 
          2087, 557, 2120, 574, 2153, 591, 2185, 608, 2208, 625, 642}], 
         Line3DBox[{337, 354, 1793, 371, 1826, 388, 1859, 405, 1892, 422, 
          1925, 439, 1957, 456, 1979, 473, 490, 507, 2025, 524, 2058, 541, 
          2091, 558, 2124, 575, 2157, 592, 2189, 609, 2210, 626, 643}], 
         Line3DBox[{338, 355, 1797, 372, 1830, 389, 1863, 406, 1896, 423, 
          1929, 440, 1961, 457, 1981, 474, 491, 508, 2029, 525, 2062, 542, 
          2095, 559, 2128, 576, 2161, 593, 2193, 610, 2212, 627, 644}], 
         Line3DBox[{339, 356, 1801, 373, 1834, 390, 1867, 407, 1900, 424, 
          1933, 441, 1965, 458, 1983, 475, 492, 509, 2033, 526, 2066, 543, 
          2099, 560, 2132, 577, 2165, 594, 2197, 611, 2214, 628, 645}], 
         Line3DBox[{648, 665, 2219, 682, 2237, 699, 2270, 716, 2303, 733, 
          2336, 750, 2369, 767, 2401, 784, 801, 818, 2450, 835, 2469, 852, 
          2502, 869, 2535, 886, 2568, 903, 2601, 920, 2633, 937, 954}], 
         Line3DBox[{649, 666, 2221, 683, 2241, 700, 2274, 717, 2307, 734, 
          2340, 751, 2373, 768, 2405, 785, 802, 819, 2452, 836, 2473, 853, 
          2506, 870, 2539, 887, 2572, 904, 2605, 921, 2637, 938, 955}], 
         Line3DBox[{650, 667, 2223, 684, 2245, 701, 2278, 718, 2311, 735, 
          2344, 752, 2377, 769, 2409, 786, 803, 820, 2454, 837, 2477, 854, 
          2510, 871, 2543, 888, 2576, 905, 2609, 922, 2641, 939, 956}], 
         Line3DBox[{651, 668, 2225, 685, 2249, 702, 2282, 719, 2315, 736, 
          2348, 753, 2381, 770, 2413, 787, 804, 821, 2456, 838, 2481, 855, 
          2514, 872, 2547, 889, 2580, 906, 2613, 923, 2645, 940, 957}], 
         Line3DBox[{652, 669, 2227, 686, 2253, 703, 2286, 720, 2319, 737, 
          2352, 754, 2385, 771, 2417, 788, 805, 822, 2458, 839, 2485, 856, 
          2518, 873, 2551, 890, 2584, 907, 2617, 924, 2649, 941, 958}], 
         Line3DBox[{653, 670, 2229, 687, 2257, 704, 2290, 721, 2323, 738, 
          2356, 755, 2389, 772, 2421, 789, 806, 823, 2460, 840, 2489, 857, 
          2522, 874, 2555, 891, 2588, 908, 2621, 925, 2653, 942, 959}], 
         Line3DBox[{654, 671, 2231, 688, 2261, 705, 2294, 722, 2327, 739, 
          2360, 756, 2393, 773, 2425, 790, 807, 824, 2462, 841, 2493, 858, 
          2526, 875, 2559, 892, 2592, 909, 2625, 926, 2657, 943, 960}], 
         Line3DBox[{655, 672, 2233, 689, 2265, 706, 2298, 723, 2331, 740, 
          2364, 757, 2397, 774, 2429, 791, 808, 825, 2464, 842, 2497, 859, 
          2530, 876, 2563, 893, 2596, 910, 2629, 927, 2661, 944, 961}], 
         Line3DBox[{656, 673, 2239, 690, 2272, 707, 2305, 724, 2338, 741, 
          2371, 758, 2403, 775, 2433, 792, 809, 826, 2471, 843, 2504, 860, 
          2537, 877, 2570, 894, 2603, 911, 2635, 928, 2664, 945, 962}], 
         Line3DBox[{657, 674, 2243, 691, 2276, 708, 2309, 725, 2342, 742, 
          2375, 759, 2407, 776, 2435, 793, 810, 827, 2475, 844, 2508, 861, 
          2541, 878, 2574, 895, 2607, 912, 2639, 929, 2666, 946, 963}], 
         Line3DBox[{658, 675, 2247, 692, 2280, 709, 2313, 726, 2346, 743, 
          2379, 760, 2411, 777, 2437, 794, 811, 828, 2479, 845, 2512, 862, 
          2545, 879, 2578, 896, 2611, 913, 2643, 930, 2668, 947, 964}], 
         Line3DBox[{659, 676, 2251, 693, 2284, 710, 2317, 727, 2350, 744, 
          2383, 761, 2415, 778, 2439, 795, 812, 829, 2483, 846, 2516, 863, 
          2549, 880, 2582, 897, 2615, 914, 2647, 931, 2670, 948, 965}], 
         Line3DBox[{660, 677, 2255, 694, 2288, 711, 2321, 728, 2354, 745, 
          2387, 762, 2419, 779, 2441, 796, 813, 830, 2487, 847, 2520, 864, 
          2553, 881, 2586, 898, 2619, 915, 2651, 932, 2672, 949, 966}], 
         Line3DBox[{661, 678, 2259, 695, 2292, 712, 2325, 729, 2358, 746, 
          2391, 763, 2423, 780, 2443, 797, 814, 831, 2491, 848, 2524, 865, 
          2557, 882, 2590, 899, 2623, 916, 2655, 933, 2674, 950, 967}], 
         Line3DBox[{662, 679, 2263, 696, 2296, 713, 2329, 730, 2362, 747, 
          2395, 764, 2427, 781, 2445, 798, 815, 832, 2495, 849, 2528, 866, 
          2561, 883, 2594, 900, 2627, 917, 2659, 934, 2676, 951, 968}], 
         Line3DBox[{971, 988, 2681, 1005, 2699, 1022, 2732, 1039, 2765, 1056, 
          2798, 1073, 2831, 1090, 2863, 1107, 1124, 1141, 2912, 1158, 2931, 
          1175, 2964, 1192, 2997, 1209, 3030, 1226, 3063, 1243, 3095, 1260, 
          1277}], Line3DBox[{972, 989, 2683, 1006, 2703, 1023, 2736, 1040, 
          2769, 1057, 2802, 1074, 2835, 1091, 2867, 1108, 1125, 1142, 2914, 
          1159, 2935, 1176, 2968, 1193, 3001, 1210, 3034, 1227, 3067, 1244, 
          3099, 1261, 1278}], 
         Line3DBox[{973, 990, 2685, 1007, 2707, 1024, 2740, 1041, 2773, 1058, 
          2806, 1075, 2839, 1092, 2871, 1109, 1126, 1143, 2916, 1160, 2939, 
          1177, 2972, 1194, 3005, 1211, 3038, 1228, 3071, 1245, 3103, 1262, 
          1279}], Line3DBox[{974, 991, 2687, 1008, 2711, 1025, 2744, 1042, 
          2777, 1059, 2810, 1076, 2843, 1093, 2875, 1110, 1127, 1144, 2918, 
          1161, 2943, 1178, 2976, 1195, 3009, 1212, 3042, 1229, 3075, 1246, 
          3107, 1263, 1280}], 
         Line3DBox[{975, 992, 2689, 1009, 2715, 1026, 2748, 1043, 2781, 1060, 
          2814, 1077, 2847, 1094, 2879, 1111, 1128, 1145, 2920, 1162, 2947, 
          1179, 2980, 1196, 3013, 1213, 3046, 1230, 3079, 1247, 3111, 1264, 
          1281}], Line3DBox[{976, 993, 2691, 1010, 2719, 1027, 2752, 1044, 
          2785, 1061, 2818, 1078, 2851, 1095, 2883, 1112, 1129, 1146, 2922, 
          1163, 2951, 1180, 2984, 1197, 3017, 1214, 3050, 1231, 3083, 1248, 
          3115, 1265, 1282}], 
         Line3DBox[{977, 994, 2693, 1011, 2723, 1028, 2756, 1045, 2789, 1062, 
          2822, 1079, 2855, 1096, 2887, 1113, 1130, 1147, 2924, 1164, 2955, 
          1181, 2988, 1198, 3021, 1215, 3054, 1232, 3087, 1249, 3119, 1266, 
          1283}], Line3DBox[{978, 995, 2695, 1012, 2727, 1029, 2760, 1046, 
          2793, 1063, 2826, 1080, 2859, 1097, 2891, 1114, 1131, 1148, 2926, 
          1165, 2959, 1182, 2992, 1199, 3025, 1216, 3058, 1233, 3091, 1250, 
          3123, 1267, 1284}], 
         Line3DBox[{979, 996, 2701, 1013, 2734, 1030, 2767, 1047, 2800, 1064, 
          2833, 1081, 2865, 1098, 2895, 1115, 1132, 1149, 2933, 1166, 2966, 
          1183, 2999, 1200, 3032, 1217, 3065, 1234, 3097, 1251, 3126, 1268, 
          1285}], Line3DBox[{980, 997, 2705, 1014, 2738, 1031, 2771, 1048, 
          2804, 1065, 2837, 1082, 2869, 1099, 2897, 1116, 1133, 1150, 2937, 
          1167, 2970, 1184, 3003, 1201, 3036, 1218, 3069, 1235, 3101, 1252, 
          3128, 1269, 1286}], 
         Line3DBox[{981, 998, 2709, 1015, 2742, 1032, 2775, 1049, 2808, 1066, 
          2841, 1083, 2873, 1100, 2899, 1117, 1134, 1151, 2941, 1168, 2974, 
          1185, 3007, 1202, 3040, 1219, 3073, 1236, 3105, 1253, 3130, 1270, 
          1287}], Line3DBox[{982, 999, 2713, 1016, 2746, 1033, 2779, 1050, 
          2812, 1067, 2845, 1084, 2877, 1101, 2901, 1118, 1135, 1152, 2945, 
          1169, 2978, 1186, 3011, 1203, 3044, 1220, 3077, 1237, 3109, 1254, 
          3132, 1271, 1288}], 
         Line3DBox[{983, 1000, 2717, 1017, 2750, 1034, 2783, 1051, 2816, 1068,
           2849, 1085, 2881, 1102, 2903, 1119, 1136, 1153, 2949, 1170, 2982, 
          1187, 3015, 1204, 3048, 1221, 3081, 1238, 3113, 1255, 3134, 1272, 
          1289}], Line3DBox[{984, 1001, 2721, 1018, 2754, 1035, 2787, 1052, 
          2820, 1069, 2853, 1086, 2885, 1103, 2905, 1120, 1137, 1154, 2953, 
          1171, 2986, 1188, 3019, 1205, 3052, 1222, 3085, 1239, 3117, 1256, 
          3136, 1273, 1290}], 
         Line3DBox[{985, 1002, 2725, 1019, 2758, 1036, 2791, 1053, 2824, 1070,
           2857, 1087, 2889, 1104, 2907, 1121, 1138, 1155, 2957, 1172, 2990, 
          1189, 3023, 1206, 3056, 1223, 3089, 1240, 3121, 1257, 3138, 1274, 
          1291}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
      VertexNormals->CompressedData["
1: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
u5h8MUXK5yQJG9VCsM7vaTOpUAmfBEvxd89MATeHFAG2xEzAJIdq9XzQBN8+
LTolijcFkjkKMghbOkFQUpYtydUq2JH0elREchxMM2va7V7qApyHWa/ZigZB
iYNVkdOr48DmWufp2W9uoG2PXog8yhcyt52QXFpBzyPbtNC+8gE78upC0usc
4YfA/NMViP4Pv8uwP3iiCfLdzqw8LnaA/sn7qk4juj10yI7jqNAFuoTGJx7F
28KDwfE6j7H0PPpSkO0xwkM47FC62OMUHFxHp6WP2tkMTm48zMv/X3hvMLo8
4tY4FYL5fLbpWLk1ogMurn4Z78zb8WQMz33+WZpmCgWujKRJXjHJwvCvqkzT
RI0osNgRmg1tejCc/ZXDK+en4+D96bPygotdGB7ZX9d6DX8CvE0k5XyI6P+D
S+SSWsciceuAg2dwj9nfR/T/wU0rNyzR48qPOPjfpds/zem8NGk13KMwnyew
sYmSIO2RfpNvzaeQWccJbkOed3zOjDHfHdMx/FmFZenxHuS5czouunrnJwwn
0UGt5nagQD4lS4pYywCGC4wTLkveHAHPdlyUFhFqxHBD9kz7IYkpwEZJ7Arv
bcWDqiPX9xYkHtg3+db7HxpFK/IFpD79ozuOqym93ooTOxr9RkT/7k2ujuHR
pyvo5/+D/EIxo8oe35SKeY/0/b7GmNwwChBv8kIM57u1350iEPfvor11td6K
YWsfZUjXPXwFRIdrm9wXwyuDpmew8/bPdu6cUBa6y77VLuhe6nBmIOXlNnkM
hi/ME7d0IM9ftcQX2YeoP2w9H5jopiHSH1Da5Plbz21Divy89P8cv/AMuoUK
leRgdCNU6uJ9WoYCl3/iRP/Ncdl54Cx6IqvdDVOe+c5lowAknlVxcFx2wvwv
naZgCNsaz9lerOxA+kWJOPh3Y/4nXaGZW3lSOuJmUzMKLODgf1Wf/1f8X7/8
sT5/xnNFk+ID2u2B+MvlPgmsPGlN2dywU8kd7LHatWC7/tf5txPJRMPFOZBY
N0nrm4Q7sLx8rwVVggK60Zr2JjezoXNRrX/6aDj4viOHl65iy84ddyN7PdZY
kL2L7Ol+JJ+cylMT0rWRguEiUuE6NGlgtkVzL+MAChwhcEhPoA+GIdOTa3E3
UoH/XOvAN4Q7x22rEx0yhAW2OTRfDscBcqu3UizzyPjRpCjT6mgYGN+Rzs86
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
U2CKeuV7pKb+wbjmf50an9byAN3g0mX0wtpnisiNHlCLhTkej/5PJ1NRgqDd
tAhRPS2p8SW4huv0L89PlfpBzpLyeE1TMtIX1eyXxa7j3c4FCdstXqAm3zp2
siYRWSjgvxA/D1rr+cVF1nBDk4sutsfdQPTkyUhDtwQ0LbPznfoiHqav7tzE
GecL3zrJqndeikOp7xGN63fSHimlmbZ5DX+k56inEejsiXZ8tt1JuL+6c0V4
O1O3H9yhYbohEhOFVKvk4qyx9XCdQNZruw0ecKFhR/cGszD04gOj9iy2Hh5+
unjwuW88ktboFWp08kSFJmQUrdjnafa/+uVHYRI6Qt/5jXcyFB0bvv6tchYP
tYGtG6n878FNVCuYUvoEtZqq/4zBxlFG3tDHXpwrVO9i19zOGoCOdCa/1Fgm
7Wmqib7iZJ6MRr0yAhXqY5EZr7cYfCXsYz3Vd0HRHYJ7GCapTR+ixHPL/SmY
J/7b9gJ+YVu4dje9WQuLA333UvLlsO+h5KNTX0t6GkpIOUd2D/PIJl+51ILD
g3UH7YvQHc+RC+010+Muici38PTM8UnScYZU/JzN+yhiGRaG2hxb5IydE5Ec
lVLSA6w/8F1svGHGEQp83gfiZ6WjUJL0ipPm97+Pw9tpxplky3wRXZSa8v/u
r+TnmprOyYLSkepKcfEoNJNx6iklUX1UKFWj/ccaL/SKx+P9lX8wLvxki10+
FzihFbK57eWE/H2DyA/XhmRg4OnwqKgLQW+eCGup/4e6Qbv6moSU9WFgkBSU
uLU2BLGlXvH2wPrVjSfNViLVwVDF8/JktlEgevrXLr8X/2D/yFruiruY5PI5
GHYNjJUTPI9kE98nYp6CzbEf3p0Jg87DHI0Vpl6ovCOgavAP/iepuyfGX/v/
Xq/eMI3/q3KZtCfl8uNi8doAkA5kIWuacENPpte/O4q1R8O23OpYv/3lUboq
UsC/QJo3qbVqybI8hH3Vgh05mMdH+mVnKebJkWFJrGv2A0/1Y4f/wsZvLGQw
V/zB3xbTucSXlPqbp0wMLdPMkvYctBpj+97sDO9nK2NDMa7OKvg9mBBvG1N8
7Xesnnfvvl0slPDeEvwRk6GGn8m/uXUCL7nY/N/HybX8GNtddROJ1Tq6muXv
1IT1nvyk9K1R78e/f+/Egrw45R88v7il00pBHhb/JUUX/jf+py7rHr/mkf37
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
du9V
       "]], {
      {RGBColor[1, 1, 0], Opacity[0.5], Point3DBox[CompressedData["
1:eJxTTMoPSmViYGCQA2JmIM5SPsB/6gGbwza2+oK3RYwODGDwwf4dR5X+ZnZO
hzDT+Z9SFZjg4nlbCx3/fftu/+a0UvtTHy64+IGzlx9PN3hgf+3iyqDQPoQ5
L1wy9pu6v7WvXeAacOjFZ3uY+Oz/7/ltmj/ZH9EVqT1RyAlXLzxXfuXZa0wO
m6Q1uTj72eHiMx+2n2CUZneIfezafrUcIc7AFBrrs4TPIWKGxuv+Dla4uMMK
xVXqoQwO2utleazvCsDFYya97t8+gcthQ5ZfXmfRO7h7ik33WVUvZXb4xba3
pvgCwp0RgbMm7j7+yz5j6oHHnBe54eZkGXrWv9JndyioMv97M+0kXL1n7a1f
5wX/2+8QcCotfncBLi68ffXEV6sYHVp3VDbP+vQLLr6gfNbqzNlsDlKLkmQ8
u9/DxZ/1PpA4GfjdnuOD/gyD3N9w8VPbRKZMKvxvr/Ls/hym8wh3OnFzJdZ/
+2S/mLt2bcJTZrg7r05QTdk7hcthibkO8xJzRLi1RRnm8Hr8t5+k6Obttw2h
Pt/56Ms7hawOAfuKvI6zIeJXgzmXrSTtn/351Vb7S/b+R9jbdNJEYzGrg995
hrzqyYjwPzZb0fL50T/2d9SUY1YvQIT/sQX/U1yl/tsL3GTqf7DzDCKcX+W3
3nRjd4i6MjPT+SMi/ZxzecRTHfvMnuV4wuZWpjtw9c81Fbce/vbXfud0XpO0
Bx/g4gCaJwBa
        "]]}, 
      {RGBColor[0, 0, 1], Opacity[0.5], Point3DBox[CompressedData["
1:eJxTTMoPSmViYGCQA2JmID6R8dpMad3h/e4rXgZkhn22ZwCDD/YPyos/LW1+
uX9d5FobzXO/4eJ8UwJy3J483M/w5bejy53rcHGOk+UMT+PP7t8e+O2f4ft/
cPEzG0vOadt83S+i9WKK0M6vcPHvX3f/qljwc/9Nv/7fCRx/4eLXl+3R3M3J
fqBndV5o+7YvcPGSN1eeRLqwHIh0u/3e8wSLA0zcLd3Ssmwqz4FL/MXTpizn
gYv7ddwWn3yQ7UDdsYTf4inMcHGD6u6XxSUP99ufzNKZMeU/3PywT1fjLr3/
vf9LnPesY4VccPVa7ydvdXnGcuBFIONzVsWr+2HiBy75llz8PWM/37UPjKc4
fsHN4W81lpJo/b2/4tqPlbM5PsLF5bozlm7sZzhQccw/azE7Inxizxke8jP5
tb9Hb1/D9BW8cHsTqluLQns223dMNvi2P4wbLm7itjRKOIr7wLrC4l0Hsxng
4uVFaZ/OL2I5UDOx7tST84jwaYnq2X2CgfPAz1NfL7xP+wG398qjB37svMwH
uA9vtUy/jnB/adrixnSv//sPTjl3YmM6It59PyzoWG/PcqCqtbT3WwQinM1l
ayqme/3a/6ZMytSp5xNcvc6nOyUT5rMcaFkoJZGSjvBXkc/EpQEmj/ezMn/O
W72PDS5erK0v8Lfw7/5v87jPM8V/h5ujkbjeLFee9UCg/m7n6f844eo9kz/z
he78tV96nVWWERtCHACgARo9
        "]]}, 
      {RGBColor[0, 1, 0], Opacity[0.5], Point3DBox[CompressedData["
1:eJxTTMoPSmViYGCQA2JmIO6qy5yVIv7BfttMreOqPTwHGMDgg73ZvorYKVr3
7GUOR87fvujlfpg4u5DNpwDhw/vnbmCYv1f3O1z8bu1TpWaTz/vfMH+/qywm
CDenyS17vkrBKftP1RfLKiz54OJphX3Ru9Yc259cqqVwx4gZLn53Ass+kdkP
7K9G2d36nscNF9fdGX/tO/Ph/UxGH5Nd9rLCxW/LeVb6mB/ZXztPctOTTbxw
8YBTP03aj37bH/th25QHb//A3SkaNG3+9cof9osmfGG55/sLLn7xUdgN0eIT
+1Wz2G4eE2WDm7PsOuP/da3n9nfKhXXYnuSEi1vf/fzlZ+cz+8mZLq0+BxHm
i3eeub7N+Yn94cuFFjcTOeDqOUVO1m+7+tW+3n/3nsp8hDkLal5XnXh50/5C
fGXqi+sscPE/q1LZDsh83v9kTRGD3T5EOFzawf0zeccd+w61Dfsn1/2E23vT
o11tS8Vne/7lFxQO/f4HF5+ndHXd/nCmA6fXMR57pI0wRyTopcbp6T+B7pmz
LfkLItw+fPjVtpnx1f7dkU7cF9v54eKfVzGp8Lq/2D/9fkzwrAUI93sfOeI+
6fWl/RPWv/h9/NczhHu+sk4NiWJwuB7Z7dz3hAuu/qzA5c+BVTftW6yPX780
WxguzhMTG/JD9qm9CrO014YziHCw7jQTWGHweH+NZeCnlddew83/xt2889T6
9/vNWnYeNvdmgqsHAGHYKEI=
        "]]}, 
      {RGBColor[1, 0, 0], Opacity[0.5], Point3DBox[CompressedData["
1:eJxTTMoPSmViYGCQA2JmIM51WL/owpSt9tyTv6TzzrhjzwAGH+yzz2SdPMTw
dL/P8+Zt/8qnwcWv9J29PyF/pb29t/wfGYfvcPH/c39a1zLetl82ZXvtzHn3
4OL7fQ6tyDH8ah/Au5DzduteuDiLfYfw9uSH+2+sVT37Je4DXDxmrdkO+Tm3
9v+dx7D71LtT+2Hiay+GiYlKPrAXLGeYu2LTFrj6+cp6X7ua79r/5lyfVy78
Fi7u0KX4M7346/7S+AeXZgZ9hIuX6fz4HMs3xf7E0yMqaWwH4eIX77OebPF6
b/91UubLC3MR6uvcvmrMbH65v0nm+Ud+3idw8UQOp/Avby7tF1+w8Had1EW4
+D25Fb9lO4/a/7O6ltr4CqE+88uz3yIPn9qf2/jRQMX4NNxf+7Nc9Pp2HLWf
JCbs7L6MyQEm3riD42F+Xbt9YHNv6ISsW3Bzgq+EfGFKeLg/30/cvIifGa5e
rLPzx2fjD/vFhVjOKlv9g5ufpy9/Xe/ie/v91kwV6Ysewc2Z3P3P1OL92/0T
46K957Aiwv/cxg8qKx9t3P9QI7zdoOUF3Bxhx7fMetbn939dZfycb9dluPp9
9Vai9zK329fHLJqdUX0Irl724KQGv0vX7DelRE06G3UWrr7W+uSfJ3kP9ifb
fhLiTULEV94Znwk5ekf2338ka3Sy5iVcPH3Hq8Ssnxf2M6/8VOTJfgku/q+y
nLPJ7779l5qfNedDj8DFAYwMIMM=
        "]]}}},
    Axes->True,
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.4},
    DisplayFunction->Identity,
    FaceGridsStyle->Automatic,
    Method->{"DefaultBoundaryStyle" -> Directive[
        GrayLevel[0.3]], "RotationControl" -> "Globe"},
    PlotLabel->FormBox["\"NaiveBayes\"", TraditionalForm],
    PlotRange->{{-4., 4.}, {-5., 4.}, {0, 1}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic, Automatic}], ",", 
   Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
6jNo9/s1pjbARYgmh+hoWKhuAS5ClB66ckxC+TrgIkQuzoeMqiPNgIsQNc5w
XOvk1LOe0LPn88f98Yj4vkxcElmf0Kfn8+yHA4xTvidZS/3Xq/v1ewcfb2r2
6Fn35cnncjbly37fDvA85e68SgGdnSXfk3vyuHydjtTq+nzwnOXuvAP1WbTe
qCf3pLj88lyT5yGfwHN+u/P9kyUjx+4n+U+G5LurTX3jFVv+u66gO68Vxv+e
MIrkLVx+yH7ud6db3/+73qA7//hqwoxXmmRdRwWXu3y1k5P37/rvOoTu3K5w
+rPHN8h8fQKXv7u9pc/cWXL/Pa6682Fq50Mad/asW/Ps+fw9FXGc2TfNtUVg
38vu10upd2apm5F1Pj3jlN35GFWl3QOewef49MNLfa7+2DqZvF6By7cInH26
etfpcXVunTixXfcn2aeuicvtTp16tS+C26eIq2Omv5y2XUfWAcpyuWJ+SMuP
oe3/XV/RXadkm9H08yVkX50fXC4sHHvkRxTZ94DH1fnyRN24jx05rqS43Cls
xOY3i8E+2N11jr6wy5a9TdZV/uXy6xWjn0zMIut7Ka5O332xjLUbOR46GZJL
ORQcseHWjfS00+46DtEVKetO9Ozv5CnD5ePo0K0peSvA+ae7/pYBOyy5/bpb
uVwn+JaMU9f3/64b6a6zPvLbet9pPeuHPeW5PK9RbWF6OulPWa7OQn5I4fNy
8jlXcrkQr9s0wQ3sv9pdx7CitMDHuuf601OJy3U+Tpwc/Ztbj8HV8TjstGtS
CVkvhLn84uPG+mvO5PgUcHUKLiyKLC/qmaf27MflGY4OV/d8487bFKnTUR6j
EDqerOsTcq+vWZTqcHMv+b7fF//vpxyemK1vZvWGrD8k/Us/fFXWbEcVRdab
kfvJ+uHfguTNH7PJ8dzTLrrb1+5bliVy8T2v91Tg8tKL+lJnrpL1h2Kujkbw
kWz0kuzj1MDlY0oNanKfgfXP3XV0Y7cJcqN72p2nLJfbTe7n+kH0+7/torvO
lNq/n68uIutIO7jcZbT3Cb95ZD0wj6tTFOG2Rri357ztKcXlW7JzTQL2/Phv
u+ius/yq6+Xwt2R/xT9c/u68kHmVTfa7oLg6/TdXUScXkuPqF0PyhOne+Pu8
9v+2i+46x2+l7DPyWdpTR4bLl29xjEtTIdcVEq5O8I1JWw3vkeO/jcutnlLO
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
KeGeR8zVCe1XFffqK6kjz+X5kdHLd3H7LrJcnStJyz8d0ibXLVVc3vzL2DUm
GM6HVtLXt0TNXz6G1FHicou6P3u+LYL7HLbRDsKO5HkXyPjbcy6PN9m1eXoi
GTcTcHW+WozavHcJqdOPyyNbi1UU18P9EtvoV96erplryPc10i7a6NMGis6x
ZN9RbvxWGim1yDg/WEr2uyDtoo2WR+WzSrnnKpJ1r2206s6/0XeV4PrGLtr+
Q0ToNn1yfCpyedOZ/kpeNmQ/FjFXx/Suw6XPgWTdaR2XK+fePf7uODkP87k6
ypNvrYoNI9fVclzuuGJggM9dctyyXJ0kmTk59vfJ8d/O5S9XSPpGK8J9erto
QXwDu3kyud6W5vKJu7b3y7lG9lGRcHUsVjHlu++ROr+5fNgS68/9/tlPvrvO
IXZhbiP5PkjGb7toW36YozCH7O9N2kUb7exc/XH4fuIlzeUXjg35NPuffba7
6LfR792vpJD9ZL5zuejjwU0nq8lzLnhcndmex2t0r5H6clz+fOOPpTvjYbvo
oqvKLoaGbyPrK2q4XOhbYW8wkBzPfK6O5NHPgLFkH2wyftudLxCXWSj+s790
F73BlYk/dpuMY+RyeXiZrnHebXI8C7g6ukFTfVYnc8czl7+agVukUmC76KJn
ZQw+Hr2Yux8Ekfyn8ZSQWG4/cDJOJY88oo8g0VZu33tMXn+6dFyW4T1yPUm+
z3XRMucXokXl5Hgm47fSqKJYajj+PoJ8Dlz+SVf9YOBWcp0g5urcsGod1L+F
XP/XcPnr3+Z7Z5ST45nP1Ym58fFlzeJRxJHLLe7cCz5ZT/ZNYrk6qHW3p+xm
ctx+5/IN3zUalLh99XlcHR+jxEf51hPJccjlBn+3xD1RJ+dhCVcnacCR9Kvc
vsdd3E8tiZeCZQ5oF9111K/OKqxIIM/1IOO30ijf+P2KqknweUZd9LwhCfcm
cvu6S3O5hv23EY+LQbvormMkZR5V8Yw8t7Sdy0/tT/JSKVwF2kUXbekfaRRf
SurIcblxv07je2WgXfz/+28Zb2h9hKzfq+Ny3rYdtd4H4P3+XbTXc8G0Oq6O
IpdvefBhd0cpaBfdddocOj7NOEuuc95z+VXhsydj+3LPuebqRJiZq8hydfpy
eafpgIGGJaBddNeJOTBQUZhA9lEk41TSyFPn07nmWtK+etpF93Vf1JrlLXJO
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
3IU86Gl/Xe4+8IsL+hd6WocvBYJCXVTnM8SInWbxqroX+id62kfTE5+1tkC9
GvS0N8uTe+v2gd9GT6vBHW0T1k7cNcmzQ1d5jthOWO+PnjZi6XGuKQ3g89HT
KlyN8bX1hfOCntZTdmbdoAPE0dOOTD1yvMIYXBp62lyd7XsS91P2l2Hl+Vo3
sjHjPjfkJXEv64CEBRFw3tHTVnT8kk+yB4eGnjbrrJiXvR4896Gnnb6/d4Fc
DLQH9LS/o3yveX4k61lInvkS/1bRysBdoKf9KlNQqhJIqX/LyvM4R7y54wKs
D0VPWyQq/Cm2FFw6etoOF8X0uALod+hp16k2WVubw30melr+hsQ+1WT2fQuH
p5VdsSHpewA8R8BniPH0oed8vWswr46edoHecFXwJOq6vCGGXmZRXKMNOCf0
tEKRwhdevof5T/S0eubCgy+G2Y6Cw9Oq2Q8UpuqCr0BP67LGLHxnH7wfRE+b
sOBMzsznMP+Anjax7WBvvRd7/OLwtBf9NYW9A8APo6fNbdavPCEDz2voabsS
+K7KuMC4iZ7WLO+j259htiPl8LRJtx9WSJA6cuhp24QiZmpLQv9FT6s7Kiua
p0Z8OMnjsNtvRM4J5vfQ09bX7uCdcRLqkqGnLd+4r77yEPgu9LQhWzriznwm
vp3ksc9tN11QBPMk6Gm5v3/et3kuxNHTPp1yVZ1nPfFjJN4RWLB79R3ik0ke
w1oRu9l7oH4Fetrvv8wcVCvJPmUkz9nSgoi4y8S/kbh7vpfGl2cQR097Qmmt
SFo21D1GT/v5Rxvt0zRqHekhhtFC1boYQciDnvbgvLufpqpDHD59DNOcOpea
CFJ3ghyv9v2Htzd5fkdPqxKrH7OGC+oQoqct97+h5dEH96XoaT/xOVkEl8Hz
GnraLbJ922u9II6e9mS3c0O5A8zLoaftsZujclWXun8Nqx3KZhmXasD7PvS0
c3/nrNGVhTi62TdbJjGGK+C9OcbdGd0/LRjgNtHNNs5dt3v4Ltv1cXjao4Y1
5z8FylLObx+DMc11opsK22txeNqo4+GHHvFKUs5XH2Om+OMlqUpsl8jhaeXs
v/M3T5WgnJc+xpKHqQf8V4nD8cz/xTPoxx9coW0Khfc46Gk1J/+9KGVB3W86
g57vZkrf5/8FvieJ+5lXdHRdoTqZDPr3W+VZJ6Na4XcgcW+rLZESKlQnmUHf
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
P4E=
      "], {{
        {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
          GrayLevel[1], 3], 
         StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
lLcNKxZtcnzQHvQBukMeZw5PZHFG0TaPGkF70JFqC31UHjWFcjbVC8vcpvLG
FnnsrTq7036tHEP5Q0/HIp0HKp//EX2829/p7x6TRw6mekT7r/J8nSW29ndL
8thbdZao2mS6fVO+P9X+ovxzin1QebX2zY+z2PdHO7Zc7m994D5cmkeOrdxv
RB55rHLpkY4tF+dxzqk4rDNM5ZDKkyfax+vb3/XuZ35e87DFfVYto9xjgr+l
sasPM+2nyu3nOBYp7umctkEWZ8jKgVUjKDce6PY1/53t700cRxRPuhYiTtR3
nOkJehTCDhQrexfCRts5Z1dsbAV6+dlubqOZY1QXx4hdeTynOKDaQXnvpjy+
2czvqI0Sf0PxRnGng7mx+9q9EPFNfWru625+rr3jmvyoLvyGv1nittWH2rZh
1X3Kq1UDKofZ6v2xxONTH2TzdeyPrTw+zYPiWA3H2D5+vo370tz9k52rnjrC
Mbmm/ail+65ntH9V9x7RzfOg9+WbOmPUee9m91lzpf996H8hPVKcRXdyvNL/
EfT/mPIp9lbtuZ867ulcusjxs79jpmKdzn90pl3BdqJ3dZ6m81udz9dwXC12
DnOd8xmdZ+q8Tmeb7RwrFGN19jje39W5q86ydB6r/xn9//87jsk6W9b/CFSb
3ID+Ef4HcPYfuA==
             "]], Polygon3DBox[CompressedData["
1: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
77MsX3IU6t38P216ivoX9YH/ARaAWKg=
             "]]}],
          Lighting->{{"Ambient", 
             RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
            "Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 0, 2}]}}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
          GrayLevel[1], 3], 
         StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNmXf8l2MXx3938b1uZCcRpTIys5IRkfbQ0PJraQ9pa6tUyipUyEpkPvaI
bB4rIyXrkUjDr0VpGWU878/rfLz443w/577v677u6zrXuc451+dbudvAVgNK
FRUVnc9PabBDVlRUjDRG2qSiovvA1uAlyDz09uAP4Ebka+RwrseCR4DHI8PR
TwTrIHPQLwAvRh5FbwVWRq5EPxLsn9Mv370MPJ3rq7hfU+25Ppv7bcFDuB7D
/cPABlzX5H5j8Ciux3G/Gng+Mhn9QrAJz86kzUXgIKQYfaAQOQe9E7gb7S6n
fQKPRcajn6B5FYqKRqLvh14VGYZ+NHgQMhq9fIpx3ox+mr87C722+kMeRu8P
nonM8FzqI/eg1wMbI3PRG4GVkKHoVVLY8AbPUfO93t9qidyL3gz8lbH1Q98F
Hsj1IPRyYFPkNvQm4MnIBI9N96eiXwRORB5Ev1pzYv4dsMNQcA3Xu6GvBdch
u6NvBMvx7DT0s8GJ4FXIYGSI3kMmIROQQX420NfjkZ5IL2Q4spy+SoErwL3p
6xj0MuAErp9kPJPA/bmuxv39wD2Qo9Fz8ApwCnK1ZTIyDPmJdxK4LcU4hvrZ
2VzfRZ9npWivturjIfrqAT4M9kLOQ+8LlkeORS9rP2lsm1yKtEXvAo5GOqKP
0Hv0ezf9nwvW5roG9+uADyDd0R8E+4NXImMtY+TbHuMwj3MUMhLpo3Ego31v
BNLbz2THccgA93e5r9W2n/sdyzheYzxjwIORweiHprDt6+jjwa34ykD0LeAm
ZID2LdgFbI5cipxKu+vAGmBHsCnSCdmb69vBFmBn32uG9EC6IxfLt7Loq7Pb
XwuekiJuzHCsWM73eqNvBrv6my2Qdjx7DGwL/lwIf94BtgS7ZdF2ZyHm9RvY
kHZT7Oc1sXVr2Q38jmftub8SLClE/FpbiDE18xibZDG3Dr7XyfPUt1r5ey08
tuZ+p7nntp2+RoHbwJ+QPtYLjg+7p3i/le1yhvev/HBP5Ar0PVK8O9J2+Brp
hf4j2NM2bZ1FjJ2psSqOIs+iX6HYgzyHPgqsK/9GbwBWQIagVwRraT84FmkM
d3pNOyH3u887kHfQbwdvRd5GvwXsjTyF3ssx6ibHHMXDa9CrO77NRh/ob2mc
53g8tzj2zkIWoc8EO3i/dAaPsR2O035PYc+yKdb0Vs9F853nOfZ2nOwHdnes
6Oa4OtHfVVy90bG0pWOy8lRPx7oeYFeP7W/9Aa0x2Bd5CL1Pirhxg/e1xvw4
erHtNsvtlcumO4ZPR15En5YiJkzLIscNQ15BHwp2QZ7w3Ic4XiqODuH6Ge4P
AC9DnvYcm9gf5aPN8OnqtG2Rx7sTHXsbOXY1BOsh56LXBXfw/qnoZ6IfgVRA
rwqegFRErw5OQZqjXwseiRyGfkwe36qN3hQ8FKmKfrjjXlPFHsVjx+Rj88it
DZ1/FQProZ+nvpFGzrkXO5a2Ak91jK3h/NvEOV0xtj56d+V9jRv9ILBlHnWI
5q58dJBz04fINmzzEfgLUt7xfxGynfsfg+8hW9AXpqgrGjnvKwcdgP614lke
sfS2PPLIweibwU8Ug3h3KXgyzypx/zTlPuQi5R9wluP7TPDePNZkLviFxsS7
X2m/IOWcQ7/h3rfIJvmZ7aY6p6LWAL0yeJxz4onOfeWcH3fPY+7KgyOcT5Ub
ZM+zwFP8bk2vy0muedSP8ml557XfPPffwc+099B/dfysi97BvnSi/aqj17SL
x3m6/eGePHL9HOXuPMYyHvyDvg5EL8qj/8roB9vfuthuByL7om9XntHa2w9n
IN3Qb7avnoR+fB72r26/PSuPOrCG9ePQa9nnq6Af4jx+CHoF7RfkAuV9cDrS
FX0auBeyN/o+4F+Ky+il0EvrGXpBY0T2QT8AHGA/HOz9coL3VDXbSntHfpij
71T8yCMvXw/elEfOvxF8R3Gf9X83xb0xzt+XO7crp/d3raDnGn9Lf/du23CO
fU11ltZAPtwJvMPrcqn9UP7Z0b7d399Q7bDK810J/spY1imfZrHXTuZ+a/B/
PMu8R6Z7DFoXzavYc9FaV7Uv7XQf67OoVTQX1YDX5FHPyw7t86gFZ+dRd2kf
9QRvVYxQnWNfaqf4CI7No+4a73fbyF72NdVKqosm+DuDvCe0N1RnzssjVt6X
R43U13aeZx+7X37hdVTMHFXqn/pLftgKvCWPWm6o28sHWsiOedTDF6JfAp7j
faG4V5LCf74HNyC/K6eDKY8YW7CPVbC//Zdnm2nzNvgWUsT9L1PEENW0ij9q
8xdtPge3gquyiH2rbHd9q1se8V/2VD2vuKoadRPP/qDNFvDbFGukdd+K/In+
aQo/r+i9oH1xOPqeeYxnP/SfHVd1LlC8XZziXKAYu0PfzyJWar5luL8+xXe1
v350LNTzkizGIpvovLgB2ZXFHIQb/awN3z6Fd8/Io/2PWYx1bRb+qv4Unwu0
WQKuyWIc2y2yzeos9prsKdsq7m527H3Pvq092C+PPKj6f2UW9t1i0T79Losa
UWdf5eThtKtD+3ZgQ9UaqtEU6z2f9cZlno/ifHvF6jzsVGJbaP46Ky9XncSz
M2hTH+xh/1ceXGPb7nCfG20n7Yte3guyyZfew+u9B9e57Q+25wbbWM/lJ814
t2sez5fbvp3zyO86C5f4u59nMYbPfL3C9vjJ9t1mX3wCO74EPuW12O7nsucn
bvNGivm+bh9e6furjUudG5UjF9n+37ndw9oD4KMp6pnjGWelPNp//K9xCRd7
nVd4nHelOPvcAy5xf2r7kb+j731h3yqxb5X4erjjgHLHUo9T8xmU4v2nwce0
b9GftC/VdnzY7PmssO8U21dUD78K3gaOc9xWTbXM/qB1U+6u5pz+lX1Ja3i0
/eQoxWevs9a+Sh5nT9UPGVIWfTe/qzVX21f43vvgqynWupZ9YJBrVNXnH9t+
GvN/XNM+Dr6GfOC1+9RrJnuc67U4P499ufZffrjO323kPK56cnaK8+mdKdZA
3/p7TZbYtqobVc+oVlTuUDyeCk7OIz5Pcr7o7vg8l77e4L154HMpzjLzU+yj
Bt5393P9JvcfSsE5qMYTt3Af1y9w/4EUfMjz6FelsOGRrmFUdx1ley5IYe8X
Upyb5qPfncI/l7p/1RKH0v5PcI77vDfFGD7xOF9KYZsXwRkpznQ6cz2ILPR4
nkmx7570/QXoj8huSGn6X60aI8XZ4UbXmYqHm+2Tn3q/TElxrrkWnJziTDfV
8V+1jfJC8xRc3FD3r/pN/IzOLzqPjwBHpjgHiVuYbV+RD4svKuvxLHY+WOJ4
u8j7c5nrjG/kg97/H6Twsfc9r10pajbVTqpRVcupLtW7qqlUS1+Xgk+b5jG/
jH6z89oepaJ/5V/FSOUg+bz2wMsp+Eadf8UtXGN/mGr7v2Ub7nI/WjtxKTqv
iTOZ69ihGKLzmvhPncEVWxbbn7XW79ofJtsnJ3mNFLuu99zFfS30nlrm/ahz
nzg9nQE/9PrKPoqZH3L/TfvMQs9Ftdn+rhPEA+gsfyU4LsV5Vj78hPes9u9J
sjX64BQcizixYtvhaY9NZz3xe6qftdavet317h1Z8LSq2yu5Hp7ivSP+ULyB
uIjbvUYL7G86Fz+CflOK86+4X53Zte/e877QWV5cqHiG51PE4vn23zWONdrX
ykXPpjini9vs7/bvej/qXNZZNbFz4heOjZvM+4jvWuDvat/lKbhi8b2qq1VD
3qWcYm7qG7AoBY/9VyFidTP3/2ch+J0sBW8s7rp0Cl5RnJ54v1WFqAtWg3fm
UQ+rPhf/I36nDLihELzTRvM/bf1d8eHiEMSfi9MWzyBuXHXRBa7Pf6fdZR6b
+Ki+6L94zP09HvUvTns9uK4Q98WDXec6VuegUik4Z81FZ9iurpk1R/FIfxSC
SxQPL25ZfL44N/E2OteIN57pWkjzFe8m7kpcoPirNeaoZYdVHudK20b5UHmx
xHP5vhDviTMTdyZ71EPqZ8HpiWdbATYA2/m+OEHxdC39bT1r6Hfru117o57t
m4L/PCCFDfU/gvhzcemjbcOt5kN3eO062zfEsU/wu9VcJ+t8Ktt2tJ0132LP
pZ7H0SYLTlX7SFyofKyd5zLZ9aFyXF3PV+3F24tz038QGrP+j9grxZmllnOu
+EbZWlyieD/xYOJ79T+CeD9xgDqb6Fwv3l5nkDKu7cXBjqDNPim4OPGH+l9D
XJw4W/3fIQ5W/Ke41gbOp6pR9T+I/lvR/xSH5ZHvVI+Jt9H5UTyJ7utsrjP4
TvO88iXVuuJ56tj3tNbiS1Xnqx5VLVrFOVd1jrg78YF9vGcH2A7iJXQeFF+h
XPm244NqEv2nI05A/+OID9T/QarpPndcUGz5LPunttV91beKn/MdS/X/jjhw
cZL/B8g+fo4=
             "]], Polygon3DBox[CompressedData["
1:eJxNmXnYltMWxt/nlXc/qYQUJZFKKmOTUDRoUApp7mv8qL7mkZKIEpGhQiKl
klmm45xjyhQZj3nmmDPPM5H7Z92uyx/39d7PHtdee++111pv/ZGTek8sFgqF
B7JCoZJ+y/NCoYsKugoniF8lTBGfLKwSX54KhUfUdqNwqfglKuutuuOFS8WX
CRPExwsXi5+nNg+p7YPCOeLnqWys6iqEc8RX5jH2JOFK8bOFAeIDXd9LfS5T
32XC0eJVhZPEZwjbiR8kLBQ/V2guPlRYL36zMFj8co0xRGMNFa7I45sFI+Ny
8dPd/hZhrvgZebSlz2nio/PQRTdhjL+Rr7/1Mz6FbMg4QfxW4UnxJ4T1Kca/
X3yDcKr4heozrhg6WCR+RwpdotN/ifdWWXfVHSUcI36Ryu5W3V3CBeITVHYs
dYwhfnOKurs93xyVHa26npb/YNakujOFNuIj8qijzVDxG1X2guqeF64T/6pU
KMwUP1l4U3yaym4Uv0mYLn6P8Jr4q8wpvsrr4/xc5e9nxZ8RVrB3mqOP5uor
DEDf6FB8lHCq+J0+T48K/xafnUfdiW5P/cuqe8n6maeyMcUYY674FSl0e7/n
a5ribHBGmiFbir1gTx4QP0v4D3OhE/GjNcYRGutwdC5+gsquUd06YYT4TMpU
V+7zjXyspZ/lP8P67CWcKd5DfRao79k+r705g+JXCMeL75eiboHl4/4w9khh
ie/DMPHhvm+L86gbIVwgvk59HlPfTcKaFPdzuOtXix/CHVPdIuFQ8XYp+PnC
4eJr8mjLmGu5iyq7TXW3CqPFWwhzszgzLdGF2kxX22nCOvFaPk+0qSG+lzBf
fJ6wR4rztkR8sfsP8PdSYaB4XcuDjLXFr9OYM4oxx7XiSWWnqW4O9kj8N53B
2eKnCD+L78Md4i4IjcT7pJiLOfp6fNqfKuwuvmuKvrM93wzN0UFzdRROEl/h
+z7M9udBtXlTbd/weWG9k8WnCLuIn6w2ZWo7GJnFz2cNqrve93N2Ctuz3vcd
e3Sl+EphmPjV3s9y6xP9rGUvLf8gYUUWfQa7Pbqf6v1aqrJ7VXefcLH3l7Yr
vN+TUshyne1RF9svbHon8U6cOfoK7bkPPm9DfX7n2F6yxlPEL1GbO7h7tvez
UnDKTrI9aau27ThTtv9ltp/Y14U+n8yxQPwozqz6rhK6iE/LQ5eDeGPyuN/Y
VmzsfPGMNmo7VfhD+z8jha7Wev6l7l/m9+YVlRXEM+FVy0vbqzlDKd4v5L9T
uFz8f8K2altJeBr7J+wiXkv4XLy+xmwo3kjYC93YvvZAZvbf9vg430/ORw/b
V/Q3w+8j9VOx/Xm8bQP8npR7vdiT4eKT8tAFbcaLV+Rh67Evo8RPzIP3tL6x
D4zd2/Zjd6FBMWSuJ16w/JT97vflEPFDebPF++XBD/N6Fno+1nSu7XU/v3fY
2ymej/qJeZyfXn6P2N+qQmPxvYXK7I3tJW/AweKzOIPiR/q7j+9je3Tk9fP2
dfd5aJuHbMh4CHO5nve4h3jrPO4yY/S1frv5/UR/3f3NHegKz8PWc147ix+Z
B+cMd7B+2/k9QN/DvH7WUJbHee3u/Z9u/fWwvOjz2DzWwpvSM4/3+givD331
z8NX6m37U2F5aDPW+m3v9XBeOuZxdzvTRjzPQ7ecx23FdxaaiO8j7CheUzhI
/EChpXgboT5nV/hB+99A3/uKNxP2tH4OFm9jfaJfOGfkGJ+nluIthDrM5fat
2WPrj/H2sz4b58Epa2h9871/Md7XhZLhv1m8wQtSfF9re3VuiveNOtpck0Kf
B3g9nA/ea8Y6wPpt5fOLvM1p6/a02Ve8RR59/xpD/OcUukAnL/Iee72sqal4
7TzW2vwf+tpNvK7X873K9hTfQ6ih76Lr6whbVbclxV1jjl88fmPvz/7WH/vX
2PMdlEddE8tfymMuxtzG+uR7d8YQ316o5+8qnB3vTyufj+utX3zCG1Loh7Gb
+v7slIfsjFHd+qrn9aAf7B1jtbT9aJbHXPWsz12EHThr1t83sslDeduEb0tx
XzirnNnhlq+z7/th9M3Dvu7q88r5hdemTPxDjVlFfDvhPfG3hRriOwlvin+X
oj1jfJ3C3tTydzXx51X2o2T5SXhZ/I0UfZGX9+ALoZp4VeHTFPqu4u8k/oLK
qotvL3zr/aQ/MmA/fxS2ZvHGPMz6U7RlzC9T7E8196/u+1qzGDJW9nlhbVW8
v9vlMXc17+ezGuOHLNbwnPhHKfrvLHwg/m6K/pWF//u9KiG79fGZ3zPKPre+
qMuFn8RfS8Epe9nj8/bR52Pxp/y9jfBkCn0mj/ec5/9Fsv2axf6wX/DfhM3i
jwnFYry/m1K8x+h+B+vr0RR16O8R8ZeEL9X3K+Eh8Y1+v7f6m/3aIv57Fvpl
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
Xd/K/SlrbvvL+1Tb9vhPQRFJ/Q==
             "]]}],
          Lighting->{{"Ambient", 
             RGBColor[
             0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
            "Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{2, 0, 2}]}}]}, 
        {RGBColor[0.560181, 0.691569, 0.194885], EdgeForm[None], Specularity[
          GrayLevel[1], 3], 
         StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
Cp1Z3ffPQj/rfat4Wzm0z+27NZbXKZ+bjbxHoc+mzoXGKNuuWEt2JpONOfzA
e15nRPtNMYziLvlH+aHJubhTVPQ+bGcbonuEcpXKuSn3KHtb2vbzGdAmGzkK
5TyV31OuUrGf7i+KJ99PkV/6IEWucq1txR+Ur+L53xoX6IHelmK/dfe5UL5X
ufGdPo/d0Kt8pjqjp6fISyuPrdyycnrKwytvppyS8tX75SP3q/hcsfEUny+N
d6O/9SH8j/ug+tL93beVKfJpq31+u9lGaf5b2P4od62cvHLL72r86DUp1jTj
da/kGFW2V/ahi+3Jm17r6dZ6d2qKeF55e+Wot6awY5of+YhS9n2at47oJSly
9fqfhf6PoHU5yftnHbjC8/+yzg/6yxQ5cP2/YK/rtPc8yEfofwfKi8q2XGo7
ttvtyA5o7eRH9rlN7fkVKWxgV9s3zVsvP1eOUfko5RuVY9f/FJTDV95e9x3d
sxQPNHNMoD1zuW2v8o1nZiMnqd8VdyvnNYJyJ3hZCp8v3688w1bvq09TtCVf
pPhic4q7mGy1coNtfQaVP5Q9V55Q+VLlxpRvVF5Odls5t7Xeb7Kxysu1zkb+
c5L3v9ZLucqW9jX6Vgf3YYT7L5sw0e8qN7vc51f7WX5K+c7xKeIKrZ1iLu2l
a7z3lLNVvlC5XOUudI9WPkR3Vf1PZ4/72dt7T3lC+XflEtWWYkPFJv8HyDN3
yg==
             "]], Polygon3DBox[CompressedData["
1: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
z+955D9yDzmIeo1+i/p0g+Mf+njW9sr3cV6rS1EjV3X8gfPbWeKnpqidVzke
faY9ZonP5MzEz/b737ofJt5ucP1L/OP8Vrr/rYivexyZThE/0ePscZJ4U8uH
D1JfHeV4vMXng32Q+5+0/e5t+VbaPq6xv5JTyJeHpNDVJuunvvXHmvQ3tVLI
ikxniJ9WRK4kp5xchHzbnA9q2h97Or42KkI/211/I/9lfiaGt3J+QtanvF5z
r8ecFt6PMWoY8vNhKXS52v7T3PkNmVqI78zjrJfbHuknqQWp/+gvqXeoHahB
qU+od+hv6Imoj+lf6KXp4ekv3hHOF68jzExRz1EfUVNTz9BvUxtRI9E/XuH4
Q4ym/+iT4q6ivvAiuTBFbU89vyFFvqB2Geb8gf0zTs1KfUo9ydyu9odhKWJ9
beF18ZFCI/FL/PxCitx3mvdjfzg5hPuSoUI9fEl4ze+zFjlwVIp6nl6+s+MD
8QJOz06/NM7fw30F/TP9MXsjw4IU9dXFWdxp0C98YPkaZ9Evch+ELlhjNLHR
67PnR+JLU/Ty9ICfYS9F5IaRPl/2p3dv5ff3Eb7QWS8VKot3KSL3kfOuL+K+
gv6JM+I+hPxELiHHUD/Rn/LuF/a34x2/lrpf3V9Y5vF97Z/wZfaHnT5/9qAe
Tili32dCefFj/Myax6bIT9QS1BDk/+kp7h64g5iaoh+lvifG0R+iP3rtdtZv
HedXakDqZ/r1puJNsrgvo19vjq6y6O/pl+il6JnXWd/ojzsQ7l+oZ6kdqa+p
b4kv9G6D7L+dnV8HW5/0t8jS3vbbxfOpR6g3Nlle+nf6V+6rOKvWPt/LHD+o
gcn33Ketc7zjvov7Nu6a+K2R9cczdwxH8n3y6fHiE4hp5HJhrPgYYXIe+fNt
8WnOz+Rr+HTnmzl5vMsaM8mNecTqd8hB4u/mMZd3Zou/IYwUHyGMEh/Hb3Bh
rHibFLGMOxvuV0bmMXc4cPz/0fGOfMH9SWOfF/cby/OYyzsjxBd4/dHCwjzs
6V3xec6n2Pt88QW2x5/z4PxGPUN9A3+PmOx8PM/Pe2C7+m12KXLUkjzqg5l+
3i6+VZhcihrpe+uDb0WmedQ+eehqhuXb7OeZri8+z6O24v1POQvt2SwLG+U+
6X399qrGhlIz5HHf08Tj+Hsvx6e65JAU97n03vTI3F+yHndTxORp4sNTxDJi
CvfLvf3MGvRfQ8gxWfRkzzo+1nf8oz+Y7njVMIv7QfoNakt6GO5/qa8ZYw79
4iw/E/O4D+T8uVvjDq+V8wX+18zyDU7hi82dP5CX3NLS8XeCvx+boP9Ybn0x
f4XjYVOvx/3mR3no7jVhcR79S2PHX+L3XinOer7j4TDHZ2SmP6jlePZlKe7f
yAfIwh3yc+JzU+i+np/ph7mb2iOL+8aDUrzLGgeI359ijDnc56/Lw17nUvOI
73A9hM1Rv27Mwx6Zsz6Pegn/HWd7xB/x5bGun8bY/vDB0axlfxxl/9w1Rayl
ni7x7fptouPDXO9P7fyx7Rv7H2f/XyG+TJhSCptdmsd9Justcbyh3vjU8byG
7XdSKfaYT6xwvJn6f/47w/EGf9npep4al3p6dR66meP4tcHz8aHv3E/Msf5K
zkfEwrXOH3zvXOuvvM97qfML/v1HHrL8TyZktT6JJxPziBd8K9/8Sx72hL9P
sj+ucfxDprX299GOr8THCX4mHozP4+8JDewf5K93HJ/R8TTHk/ccvzblcT5D
ShED0N8nedjyMMeLWY7XyD8jj3jaV/wlx991Pt9Jtp+NPo/JXp/13vTzYvdP
s61v+rPVjv8TbZ/kkzm2zxXOJwPFB2ET1t+AUvxGfnlb6FMKmYY73iH767Yf
zpNecZH1R/1AfF5ofyF/vCze3/r7LY+xBT4P9MvYAJ8X9Tn1LD0Y/cx055eR
1g/6Hiz+SinyGfkKXfWzv5DvGBtif8CfGEMG8hf9IrIiM38/mJLHtw/2+fH3
BcboHyt6fJz9E/38BQKw1bc=
             "]]}],
          Lighting->{{"Ambient", 
             RGBColor[0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
            "Directional", 
             RGBColor[
             0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[
             0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[
             0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
             ImageScaled[{2, 0, 2}]}}]}, 
        {RGBColor[0.922526, 0.385626, 0.209179], EdgeForm[None], Specularity[
          GrayLevel[1], 6], 
         StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
QyPbj2oT1Q6q9epnkROqpjgWvqQQ+bxsUjXCCMcv1YDKDc7NItbfiXTTN9L/
1vlQFuflDtviJ44Fn4I389wTOkPgA0h3nYcU8XFDPuLvRNu21i5bamt7ap9F
7XW3v9PK37qV3z+pc5eitn0GfleKWmZbPuoUvaOlf6+9qwhOKcS57Ogz2cLz
fsRSuievpKgNlWP8liLnV26j2Cd/2LoQtXP5LNZ4f4p8WDVs10LUL4rdyouU
vylfUmxa7d8qz3mN6++lWGdrnx3Vqppbe/DVQtQ+ihdvKjfiet8U+Yb09jj4
PuPXud4/RU74DvydFGvU+nR+lEvvD35ZiP7BPb7Xgec6gY+BM1PUOLNT5O2q
8VXr63zL1+p90sPH4LgUtX8772NXr6VLinqktW3jW+dy34MVi5HTHuK8V3N+
MsW75VNVz29nPDmLnsC8FPneXNtbG++v8uFx8IUpfif/2zmLGlk2rLq1kfPM
M4uhQ8XDNwqx7mZeu77byeu63jqRjf3s3En5W3tfK70nW1L80P4utP77Odfp
Dw4tRL2sPEHzUkx4MAsfq31XPtnFc37QqDUofqhOV+2vml1zu8n3ejm3ebkQ
+dgS51eqO17i/vMpzpr8hvo83VJ8Q/2T6YWor6f5fJW3/SsWq+ZVn6Grz472
Qj0f5cPq26hHcTR8JvgR996Dfwh+IDvLou5Qr6ardJjC98rPya92sn+QPWwp
RKxRjT/ddqh3PpFi3572M/rWdtv5C7Zh9Y6et81Lt2VswwNS1Br9HZtUI28s
RF9LPYp59iEt7UcG2W4Hgp+nqGsGg8/aF/UAKyBV4ClFb0ExQj2BdYXoKSnm
jkxRV34H/pii3vwhxRkc6LMs/fS0rvRO9XAUo3um6C+p97Wcd+0NX1mIObyR
RQ14I9Ib/iL4aIpaWL2pvvZpsmH9VnFfub36KuotqD+gWng0fHmKvoF8u/pg
v3jvxqToK0qHsiXVd9/5LPdyftvTfuwD+Gcp+nJ94H1S9CtUP6rWVg9B9Zrq
d+m2r/WpXHee83DZjPp4qovHpqiRJ4BLUtSwi63bit471aGKv8pJFK8Vayp5
/p/rXKboOcjnP5LinO7kW78WwlcP8DylQ8Ua9SXUD1EdcZznMNR6GG5fqn1U
30B1vXoFI+0/tae7nAeqPlJvRD3GSbYf9TBVp6suU59TcVP9qzq2YfUNZmRR
g8t3yOfKl9RlvAE8Fdyj84es0TdKAtdmUbOr96IaOV8Sz2cl0ZeYA6/q+l17
p3q8HuON8NPAw5Ap8MPBGu4J1CpG3a0+j2pt1ctb7RvVN1Bdr37mOrBMScxB
fU/1d7dn0b8p7x7ORr63CqzD89WKMeejwbOKES9Ugx9RjHVpnmVL4p16d64Y
fjtfjPf8kUUsyHldqutXWye7s/D/w7Pw85qvYpHmol6Beizqj9Xnt5vgpxej
P6O170oxnxXwpp6n+sbVwQyZ6zloHYpHO7PYi93+9vos5q05Kx6N8jvVk1nt
50r3TL87yv0r9ViqIIut/5x1qfVrXxbBD7V+5lpvVdzLUi+oQTF6ZmeAx3s/
ankf13r+9fx+rbekJOxCe6++tPpX6nXP8ZwVx7Ve9WHK+53qXZ9YjN74ZM/n
pGKsWdcVN7XPDcGzi7H/TX1ftii9KE9Q3159Qum+XEnMpbZt/uRixFXlMPfZ
9u/1uIP9uXIbxTjFfD3b2T5feUg3+0/FhQH2jfLb6vno/x3qC2k+Gzyncu41
ykZH2WaUb0xM0V+Vz9F3FEsVbxR31DfT/w4auD/W0Par9cru67tHp71Qvqqz
q/8LlFjfWndP+z3FDvVvm8Avtn+Tv5IfviFFvnqT/Xkf+y71VBXzVR8pj1Xe
qZ5nF89ReYFyJ/1PQX1a5c/KS29x3FH8/dlr7Acf4t8qp+hqP7PIPkF9Rf3/
Rb3rrT536k9Kb1qHdHcKz80EDyxGP1ZxRL3fU3yOtKday+PSY4pcTj29SrYf
/Z9FPk39cPUe1dPW2drl8yVbWgmeUwzfIj3v8B5Kn7Lj/wLjBcur
             "]], Polygon3DBox[CompressedData["
1:eJwtmXf81+Maxr/5fRKf55NKlCikQUhCEik7M+M4jnk4zl6cgbIqIhKRoqh0
SlGkgUqUUhoa0rAqbe1Fe5Drfe7rj+v1vT7Pvp/nucdzf2vffe8N9xxUKpUm
liuVMv3uSaXSJyKThL3ixxWl0nfiS4Tjxd9Q2eviA4TXxT/IS6XDxasIo8Q/
Udk48Y+Ej8VbqM9u8V3C+eKjVDZYfIgwWvx/wqvivYX+4muFKeKfCt+Lb9aY
x4vXFraIv0of8X5CT/HPVFZRvBCmiQ9TWQ/xl4Th4mvyqKPNWvHFKWRDxm/F
P/J4/YVx4n2EV7JYU1/xRlrzj+I/CKeKj0kxN30+ED9HZTvEtwtNxdtbHsZ4
RPxJ4UXxbsLj4iu8P+OFleI/eT2ThZ/Fq2uMReKLhaPEqwjTxKcLh4svSbG3
jLFU/GWhq/jz3o9vhBHiIy3fc0JH8SeErpyd9iATL0MG8R4q6yneiz0Tn62y
SuKVhc/FewrluBhCD/F3hQriB7O/4l2En8skh9BWfJfGmKG6mcJuyzdffJ7v
01ZhtPgY9lT8Ism0Tny9cLH4xxojFz+UOyT+X7XpJP6UcJ/4JWqzj7HcfrDa
7Nfc+4Q3xO9Xm0dV1054QHxqHnW04X78Q2XPqq6L8HfxPwmdxZ8W/pjifrGX
L3Anxd/PQ/Zyvt9z8pCdPfhC/EG37+r52nu8Z4QOKepZS3vhIfGHU8zV2fdj
vvfzEGFBHvrEXAcJY8X7Cnu09t3Cq+I1ithL9vRo8a0qq85dYT/FN2vML8Tn
CBvEpyGD+HvolO/rKnRLaCbeWPiGuyKcIX6o8JX4l5yxeC23X+n5KgnLxZeh
c+JLNecx1HFnxYdqjmHi76Dj4p+q7EjxI9A58bOLGGuV9QX9466OsD7NFiZg
O4QZ4nWKsD1LhbqsTWVjxT8UvhafIwwSf4PzEC9ze2xWSfyAymaJz/b3H/Td
Rrytz7uBytaIrxbqW172doFwbBH3g7YPCn/2+Iz1uZCJj1fZW+JvZ2HvsH/w
ocIk8e15nE0NYUce9o56+vS1fFvEN2dhX7EPjD/L+j3f/av7vi32fr2LjOL7
89h7zuAn8SoqO0m8AfZC/Ms8bDM2+ivxhSl0c4b3bwc2PIs9fVd8XgpbM836
uSqFLcY+LU9hv2lLn24pzoOxPnP/8bZPnM+H2PIUtm6c94P5qaPNItsD5poq
bBJflmKuSZZvZApbMdrnO9b9WQP+Y5/lYb/2i1csYizGPEx8Y4pvfMq6FPd7
iufLxcsVMR8yHiRevgg+xfd/cIq7zHkOwt+kuJvINNX2Fl8yEZ0R76893lsW
OvtaHvYMTtkE8UmuxyZNFh9k+0TZAPHeeeg+NqCX+Id56D5jYA8X5WEbc+vb
S9hc1e0UXhRf7f1mjWvwVXnYesbsI97d9uyA2r8gvt7yTLC9+DGFLMi0M4U9
mWD5tojPdT1ln4ufKDQVP0c4CV3QmBs19ib7g6H2D8z3jviIPDhrGCk+MMXe
ohP9fV+G2n5M9X7Dh9kenFKE7cEG4Y9r2J6sEKoV4a+X+/t08apFcMoqi9cr
QtexfyfY/uF/1gqnidcuom6V9f+CIupoc2ER8cwat28pfkQRvot67GfzImKd
ncJ5RfjzjeytsF3rP0bfm7Iow7+fJSzMwudvt3zEGlvZT/EzhW1ZxCDIg/0k
1qCsifi5RcxFDNLM692TRczF+hp6/az5ZK9vtb/Pd3/kXe319rE9Iz57xfoG
f8v6TLxA/Pam8C/xXq6njPjhPWKSLGIK6hekaDvY9mKEMNzn+Y74CylsNzZ8
uO0/dcN9v9baf42y/qLPo2wPsBeTU/g27OFE7moKjo0cZ/tFPWMQT47Ow9fi
c9/LI54b4fnex5Z4fNpPtz1iPMZYbn8z2uuZZX2g7wjrP/Eytpwzrin+tedD
Z7/Jw1+iu0lYJl5bfU4Vb8h9FK+Xgp8m1Bc/JAWnrDz6qT5niDfOIh6uyJxZ
xMgz8oiXqTvd3+OEqlnYf+KJ5Xn4YnzyCvHvXE/ZEvGdwplZzLGNuhScsiPE
f1ZZXfF6wgFsVQpeXygTX6eyE/29WrwWdzoLGY+1Pzohi3h+nvhxKmsifjYy
eHy+zxL2eXzqmng+1s98db3e6UI1yzNFfKLlQ6bxecSz7A17NITYV+PVFK/l
/Vxk/1nD57M7D07ZnjzOj298MPFZKYWvZYxy4ivz4Mf4POfmIRtzEj9/7/in
mvdjo3BYFjH2EMeT1V0/S3xmHrE0NvPpPM6b8U7weWA/K7s/9vR9+3fKRtre
Uscc9Of9U8vrXeX10baK93+d9481bPJ9YG/rCAu9Xw19fsh7cIqz5YwrpPA/
q7XWNcLL4nV8XviEuuJPqWyl6lYJz+ThH9eJr7e/w//BNzh+78aelcWY+LPO
+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
             "]]}],
          Lighting->{{"Ambient", 
             RGBColor[0.30756835, 0.18676585, 0.147065275]}, {"Directional", 
             RGBColor[0.2306315, 0.0964065, 0.05229475], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             GrayLevel[0.3], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[0.2306315, 0.0964065, 0.05229475], 
             ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}, {}, {}}, {
        {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0L0uw1EYwOHjo61vrRuQViJmrSrVaqsiVgmrMCAGRsbGpHEFuomtvQQm
toYbkNTAztAL4PmH4ZfnJCfnnJw3fXi+czYQQjjQoKL1jGZjIcyxwly0z01e
cY/3POYzL/nJJlvqKBEP4ZELfOU233nKb97E/x7rMMUuM8wqpyXltayCVrSq
otZUUlnrqqiqmja0qDf3pdlmkk3+ePKEX9xij/N8YYwPbOtWff+55gcv+MQj
3nGXDda5zyzLzDClpKY1pUlNaFxjGtVINB9FI3AsDGvof/6/GFgkeQ==
          "]]}, 
        {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0DkvxEEYwOF3FShkaURrP4DIKkTtvtaxuyJKYpU2Crvu+yrp1jdARUul
phMdH4FKlHj+UfzyzGQmk5nJLJTzy6mImNeAQb9m9FEfscR0Q0SVnTzjFC+5
whte8IF3fOa7PvVq/stvttRFtDVGZNjDLs6xj+ssssYSK6pqLVnThja1pW3t
aFd72teBDnWkY51oVVfOW0zOYYGz7GU3s2xlO7/cr5kv/EnerTc9mj/xlvc8
5zXLrHGCp+xghU0ssaiC8ppO/kuTyX7lNK4xjWpEwxrSYOr///8A5SYvjw==

          "]]}, 
        {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0LsuA1AYwPFPiWDgBcRlECsPIMLAXjtxiZEFI5NrUdfWKgb1Btq6q/sb
YBMbTyAVv8bwzy/nDF/O+drHppNTVRExqpVExLIOVKyLOOE7CyzzhS317tjL
b47wlwtsqo5oU7eOnPtZ4hA/OcHahohZdnKJg8xykjnmVVBRZzrXhS51pWvd
6LYyW3e614Me9aRTzZl3zAFm2MFF1nCGH94zXpnFJA/Zxy61Ku3cyHmW/W+Y
X+zhG5v5zB97yfOVOWaV0b72tKsdbWtLaW1qQ+tKaU2rif/9/wHO2Dql
          "]]}, 
        {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0L0uw1EYwOG3/q2P/lsTK7ETBhdAYmTQ3aB2jXAJDDaRcAmITQxcgqrP
qo/WHbQ2MWnxJIZfnrwnOeck70S5UlrPRMSqaknEtd61m4/44Cl7rHE464zj
LKYRM5ziPJdY4pq2tGHe4T4Pec5jNnjJL1Y5WohocZYddtXTj34VuYiM+pQo
q5z6NaBBDSmvVAV9u7fgvTZH2OSn/65Y5wXPeMQ9HrDCbW6qrBXzMhc5x0lO
M+UY2/ZQZJVd+zlhhy019aZXvehZDT2prkc96F53utVN8r//P9rAOMg=
          "]]}, 
        {GrayLevel[0.2], 
         Line3DBox[{1311, 1293, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 
          1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1312, 1315, 1316, 
          1319, 1320, 1323, 1324, 1327, 1328, 1331, 1332, 1335, 1336, 1339, 
          1340, 1342}], 
         Line3DBox[{1344, 1294, 1313, 1314, 1317, 1318, 1321, 1322, 1325, 
          1326, 1329, 1330, 1333, 1334, 1337, 1338, 1341, 1345, 1348, 1349, 
          1352, 1353, 1356, 1357, 1360, 1361, 1364, 1365, 1368, 1369, 1372, 
          1373, 1375}], 
         Line3DBox[{1377, 1310, 1346, 1347, 1350, 1351, 1354, 1355, 1358, 
          1359, 1362, 1363, 1366, 1367, 1370, 1371, 1374, 1378, 1381, 1382, 
          1385, 1386, 1389, 1390, 1393, 1394, 1397, 1398, 1401, 1402, 1405, 
          1406, 1408}], 
         Line3DBox[{1410, 1343, 1379, 1380, 1383, 1384, 1387, 1388, 1391, 
          1392, 1395, 1396, 1399, 1400, 1403, 1404, 1407, 1411, 1414, 1415, 
          1418, 1419, 1422, 1423, 1426, 1427, 1430, 1431, 1434, 1435, 1438, 
          1439, 1441}], 
         Line3DBox[{1443, 1376, 1412, 1413, 1416, 1417, 1420, 1421, 1424, 
          1425, 1428, 1429, 1432, 1433, 1436, 1437, 1440, 1444, 1447, 1448, 
          1451, 1452, 1455, 1456, 1459, 1460, 1463, 1464, 1467, 1468, 1471, 
          1472, 1474}], 
         Line3DBox[{1475, 1409, 1445, 1446, 1449, 1450, 1453, 1454, 1457, 
          1458, 1461, 1462, 1465, 1466, 1469, 1470, 1473, 1476, 1479, 1480, 
          1483, 1484, 1487, 1488, 1491, 1492, 1495, 1496, 1499, 1500, 1503, 
          1504, 1506}], 
         Line3DBox[{1507, 1442, 1477, 1478, 1481, 1482, 1485, 1486, 1489, 
          1490, 1493, 1494, 1497, 1498, 1501, 1502, 1505, 1508, 1509, 1510, 
          1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 
          1522, 1523}], 
         Line3DBox[{154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 
          165, 166, 167, 168, 169, 170}], 
         Line3DBox[{1541, 1572, 1571, 1568, 1567, 1564, 1563, 1560, 1559, 
          1556, 1555, 1552, 1551, 1548, 1547, 1544, 1540, 1539, 1538, 1537, 
          1536, 1535, 1534, 1533, 1532, 1531, 1530, 1529, 1528, 1527, 1526, 
          1524, 1543}], 
         Line3DBox[{1574, 1605, 1604, 1601, 1600, 1597, 1596, 1593, 1592, 
          1589, 1588, 1585, 1584, 1581, 1580, 1577, 1573, 1570, 1569, 1566, 
          1565, 1562, 1561, 1558, 1557, 1554, 1553, 1550, 1549, 1546, 1545, 
          1525, 1576}], 
         Line3DBox[{1607, 1638, 1637, 1634, 1633, 1630, 1629, 1626, 1625, 
          1622, 1621, 1618, 1617, 1614, 1613, 1610, 1606, 1603, 1602, 1599, 
          1598, 1595, 1594, 1591, 1590, 1587, 1586, 1583, 1582, 1579, 1578, 
          1542, 1609}], 
         Line3DBox[{1640, 1671, 1670, 1667, 1666, 1663, 1662, 1659, 1658, 
          1655, 1654, 1651, 1650, 1647, 1646, 1643, 1639, 1636, 1635, 1632, 
          1631, 1628, 1627, 1624, 1623, 1620, 1619, 1616, 1615, 1612, 1611, 
          1575, 1642}], 
         Line3DBox[{1673, 1704, 1703, 1700, 1699, 1696, 1695, 1692, 1691, 
          1688, 1687, 1684, 1683, 1680, 1679, 1676, 1672, 1669, 1668, 1665, 
          1664, 1661, 1660, 1657, 1656, 1653, 1652, 1649, 1648, 1645, 1644, 
          1608, 1675}], 
         Line3DBox[{1706, 1736, 1735, 1732, 1731, 1728, 1727, 1724, 1723, 
          1720, 1719, 1716, 1715, 1712, 1711, 1708, 1705, 1702, 1701, 1698, 
          1697, 1694, 1693, 1690, 1689, 1686, 1685, 1682, 1681, 1678, 1677, 
          1641, 1707}], 
         Line3DBox[{1738, 1674, 1709, 1710, 1713, 1714, 1717, 1718, 1721, 
          1722, 1725, 1726, 1729, 1730, 1733, 1734, 1737, 1739, 1740, 1741, 
          1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 
          1753, 1754}], 
         Line3DBox[{1773, 1755, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 
          1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1777, 1778, 
          1781, 1782, 1785, 1786, 1789, 1790, 1793, 1794, 1797, 1798, 1801, 
          1802, 1804}], 
         Line3DBox[{1806, 1756, 1775, 1776, 1779, 1780, 1783, 1784, 1787, 
          1788, 1791, 1792, 1795, 1796, 1799, 1800, 1803, 1807, 1810, 1811, 
          1814, 1815, 1818, 1819, 1822, 1823, 1826, 1827, 1830, 1831, 1834, 
          1835, 1837}], 
         Line3DBox[{1839, 1772, 1808, 1809, 1812, 1813, 1816, 1817, 1820, 
          1821, 1824, 1825, 1828, 1829, 1832, 1833, 1836, 1840, 1843, 1844, 
          1847, 1848, 1851, 1852, 1855, 1856, 1859, 1860, 1863, 1864, 1867, 
          1868, 1870}], 
         Line3DBox[{1872, 1805, 1841, 1842, 1845, 1846, 1849, 1850, 1853, 
          1854, 1857, 1858, 1861, 1862, 1865, 1866, 1869, 1873, 1876, 1877, 
          1880, 1881, 1884, 1885, 1888, 1889, 1892, 1893, 1896, 1897, 1900, 
          1901, 1903}], 
         Line3DBox[{1905, 1838, 1874, 1875, 1878, 1879, 1882, 1883, 1886, 
          1887, 1890, 1891, 1894, 1895, 1898, 1899, 1902, 1906, 1909, 1910, 
          1913, 1914, 1917, 1918, 1921, 1922, 1925, 1926, 1929, 1930, 1933, 
          1934, 1936}], 
         Line3DBox[{1937, 1871, 1907, 1908, 1911, 1912, 1915, 1916, 1919, 
          1920, 1923, 1924, 1927, 1928, 1931, 1932, 1935, 1938, 1941, 1942, 
          1945, 1946, 1949, 1950, 1953, 1954, 1957, 1958, 1961, 1962, 1965, 
          1966, 1968}], 
         Line3DBox[{1969, 1904, 1939, 1940, 1943, 1944, 1947, 1948, 1951, 
          1952, 1955, 1956, 1959, 1960, 1963, 1964, 1967, 1970, 1971, 1972, 
          1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 
          1984, 1985}], 
         Line3DBox[{477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 
          488, 489, 490, 491, 492, 493}], 
         Line3DBox[{2003, 2034, 2033, 2030, 2029, 2026, 2025, 2022, 2021, 
          2018, 2017, 2014, 2013, 2010, 2009, 2006, 2002, 2001, 2000, 1999, 
          1998, 1997, 1996, 1995, 1994, 1993, 1992, 1991, 1990, 1989, 1988, 
          1986, 2005}], 
         Line3DBox[{2036, 2067, 2066, 2063, 2062, 2059, 2058, 2055, 2054, 
          2051, 2050, 2047, 2046, 2043, 2042, 2039, 2035, 2032, 2031, 2028, 
          2027, 2024, 2023, 2020, 2019, 2016, 2015, 2012, 2011, 2008, 2007, 
          1987, 2038}], 
         Line3DBox[{2069, 2100, 2099, 2096, 2095, 2092, 2091, 2088, 2087, 
          2084, 2083, 2080, 2079, 2076, 2075, 2072, 2068, 2065, 2064, 2061, 
          2060, 2057, 2056, 2053, 2052, 2049, 2048, 2045, 2044, 2041, 2040, 
          2004, 2071}], 
         Line3DBox[{2102, 2133, 2132, 2129, 2128, 2125, 2124, 2121, 2120, 
          2117, 2116, 2113, 2112, 2109, 2108, 2105, 2101, 2098, 2097, 2094, 
          2093, 2090, 2089, 2086, 2085, 2082, 2081, 2078, 2077, 2074, 2073, 
          2037, 2104}], 
         Line3DBox[{2135, 2166, 2165, 2162, 2161, 2158, 2157, 2154, 2153, 
          2150, 2149, 2146, 2145, 2142, 2141, 2138, 2134, 2131, 2130, 2127, 
          2126, 2123, 2122, 2119, 2118, 2115, 2114, 2111, 2110, 2107, 2106, 
          2070, 2137}], 
         Line3DBox[{2168, 2198, 2197, 2194, 2193, 2190, 2189, 2186, 2185, 
          2182, 2181, 2178, 2177, 2174, 2173, 2170, 2167, 2164, 2163, 2160, 
          2159, 2156, 2155, 2152, 2151, 2148, 2147, 2144, 2143, 2140, 2139, 
          2103, 2169}], 
         Line3DBox[{2200, 2136, 2171, 2172, 2175, 2176, 2179, 2180, 2183, 
          2184, 2187, 2188, 2191, 2192, 2195, 2196, 2199, 2201, 2202, 2203, 
          2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 
          2215, 2216}], 
         Line3DBox[{2235, 2217, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 
          2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2236, 2239, 2240, 
          2243, 2244, 2247, 2248, 2251, 2252, 2255, 2256, 2259, 2260, 2263, 
          2264, 2266}], 
         Line3DBox[{2268, 2218, 2237, 2238, 2241, 2242, 2245, 2246, 2249, 
          2250, 2253, 2254, 2257, 2258, 2261, 2262, 2265, 2269, 2272, 2273, 
          2276, 2277, 2280, 2281, 2284, 2285, 2288, 2289, 2292, 2293, 2296, 
          2297, 2299}], 
         Line3DBox[{2301, 2234, 2270, 2271, 2274, 2275, 2278, 2279, 2282, 
          2283, 2286, 2287, 2290, 2291, 2294, 2295, 2298, 2302, 2305, 2306, 
          2309, 2310, 2313, 2314, 2317, 2318, 2321, 2322, 2325, 2326, 2329, 
          2330, 2332}], 
         Line3DBox[{2334, 2267, 2303, 2304, 2307, 2308, 2311, 2312, 2315, 
          2316, 2319, 2320, 2323, 2324, 2327, 2328, 2331, 2335, 2338, 2339, 
          2342, 2343, 2346, 2347, 2350, 2351, 2354, 2355, 2358, 2359, 2362, 
          2363, 2365}], 
         Line3DBox[{2367, 2300, 2336, 2337, 2340, 2341, 2344, 2345, 2348, 
          2349, 2352, 2353, 2356, 2357, 2360, 2361, 2364, 2368, 2371, 2372, 
          2375, 2376, 2379, 2380, 2383, 2384, 2387, 2388, 2391, 2392, 2395, 
          2396, 2398}], 
         Line3DBox[{2399, 2333, 2369, 2370, 2373, 2374, 2377, 2378, 2381, 
          2382, 2385, 2386, 2389, 2390, 2393, 2394, 2397, 2400, 2403, 2404, 
          2407, 2408, 2411, 2412, 2415, 2416, 2419, 2420, 2423, 2424, 2427, 
          2428, 2430}], 
         Line3DBox[{2431, 2366, 2401, 2402, 2405, 2406, 2409, 2410, 2413, 
          2414, 2417, 2418, 2421, 2422, 2425, 2426, 2429, 2432, 2433, 2434, 
          2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 
          2446, 2447}], 
         Line3DBox[{800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 
          811, 812, 813, 814, 815, 816}], 
         Line3DBox[{2465, 2496, 2495, 2492, 2491, 2488, 2487, 2484, 2483, 
          2480, 2479, 2476, 2475, 2472, 2471, 2468, 2464, 2463, 2462, 2461, 
          2460, 2459, 2458, 2457, 2456, 2455, 2454, 2453, 2452, 2451, 2450, 
          2448, 2467}], 
         Line3DBox[{2498, 2529, 2528, 2525, 2524, 2521, 2520, 2517, 2516, 
          2513, 2512, 2509, 2508, 2505, 2504, 2501, 2497, 2494, 2493, 2490, 
          2489, 2486, 2485, 2482, 2481, 2478, 2477, 2474, 2473, 2470, 2469, 
          2449, 2500}], 
         Line3DBox[{2531, 2562, 2561, 2558, 2557, 2554, 2553, 2550, 2549, 
          2546, 2545, 2542, 2541, 2538, 2537, 2534, 2530, 2527, 2526, 2523, 
          2522, 2519, 2518, 2515, 2514, 2511, 2510, 2507, 2506, 2503, 2502, 
          2466, 2533}], 
         Line3DBox[{2564, 2595, 2594, 2591, 2590, 2587, 2586, 2583, 2582, 
          2579, 2578, 2575, 2574, 2571, 2570, 2567, 2563, 2560, 2559, 2556, 
          2555, 2552, 2551, 2548, 2547, 2544, 2543, 2540, 2539, 2536, 2535, 
          2499, 2566}], 
         Line3DBox[{2597, 2628, 2627, 2624, 2623, 2620, 2619, 2616, 2615, 
          2612, 2611, 2608, 2607, 2604, 2603, 2600, 2596, 2593, 2592, 2589, 
          2588, 2585, 2584, 2581, 2580, 2577, 2576, 2573, 2572, 2569, 2568, 
          2532, 2599}], 
         Line3DBox[{2630, 2660, 2659, 2656, 2655, 2652, 2651, 2648, 2647, 
          2644, 2643, 2640, 2639, 2636, 2635, 2632, 2629, 2626, 2625, 2622, 
          2621, 2618, 2617, 2614, 2613, 2610, 2609, 2606, 2605, 2602, 2601, 
          2565, 2631}], 
         Line3DBox[{2662, 2598, 2633, 2634, 2637, 2638, 2641, 2642, 2645, 
          2646, 2649, 2650, 2653, 2654, 2657, 2658, 2661, 2663, 2664, 2665, 
          2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 
          2677, 2678}], 
         Line3DBox[{2697, 2679, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 
          2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2698, 2701, 2702, 
          2705, 2706, 2709, 2710, 2713, 2714, 2717, 2718, 2721, 2722, 2725, 
          2726, 2728}], 
         Line3DBox[{2730, 2680, 2699, 2700, 2703, 2704, 2707, 2708, 2711, 
          2712, 2715, 2716, 2719, 2720, 2723, 2724, 2727, 2731, 2734, 2735, 
          2738, 2739, 2742, 2743, 2746, 2747, 2750, 2751, 2754, 2755, 2758, 
          2759, 2761}], 
         Line3DBox[{2763, 2696, 2732, 2733, 2736, 2737, 2740, 2741, 2744, 
          2745, 2748, 2749, 2752, 2753, 2756, 2757, 2760, 2764, 2767, 2768, 
          2771, 2772, 2775, 2776, 2779, 2780, 2783, 2784, 2787, 2788, 2791, 
          2792, 2794}], 
         Line3DBox[{2796, 2729, 2765, 2766, 2769, 2770, 2773, 2774, 2777, 
          2778, 2781, 2782, 2785, 2786, 2789, 2790, 2793, 2797, 2800, 2801, 
          2804, 2805, 2808, 2809, 2812, 2813, 2816, 2817, 2820, 2821, 2824, 
          2825, 2827}], 
         Line3DBox[{2829, 2762, 2798, 2799, 2802, 2803, 2806, 2807, 2810, 
          2811, 2814, 2815, 2818, 2819, 2822, 2823, 2826, 2830, 2833, 2834, 
          2837, 2838, 2841, 2842, 2845, 2846, 2849, 2850, 2853, 2854, 2857, 
          2858, 2860}], 
         Line3DBox[{2861, 2795, 2831, 2832, 2835, 2836, 2839, 2840, 2843, 
          2844, 2847, 2848, 2851, 2852, 2855, 2856, 2859, 2862, 2865, 2866, 
          2869, 2870, 2873, 2874, 2877, 2878, 2881, 2882, 2885, 2886, 2889, 
          2890, 2892}], 
         Line3DBox[{2893, 2828, 2863, 2864, 2867, 2868, 2871, 2872, 2875, 
          2876, 2879, 2880, 2883, 2884, 2887, 2888, 2891, 2894, 2895, 2896, 
          2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 2906, 2907, 
          2908, 2909}], 
         Line3DBox[{1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 
          1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139}], 
         Line3DBox[{2927, 2958, 2957, 2954, 2953, 2950, 2949, 2946, 2945, 
          2942, 2941, 2938, 2937, 2934, 2933, 2930, 2926, 2925, 2924, 2923, 
          2922, 2921, 2920, 2919, 2918, 2917, 2916, 2915, 2914, 2913, 2912, 
          2910, 2929}], 
         Line3DBox[{2960, 2991, 2990, 2987, 2986, 2983, 2982, 2979, 2978, 
          2975, 2974, 2971, 2970, 2967, 2966, 2963, 2959, 2956, 2955, 2952, 
          2951, 2948, 2947, 2944, 2943, 2940, 2939, 2936, 2935, 2932, 2931, 
          2911, 2962}], 
         Line3DBox[{2993, 3024, 3023, 3020, 3019, 3016, 3015, 3012, 3011, 
          3008, 3007, 3004, 3003, 3000, 2999, 2996, 2992, 2989, 2988, 2985, 
          2984, 2981, 2980, 2977, 2976, 2973, 2972, 2969, 2968, 2965, 2964, 
          2928, 2995}], 
         Line3DBox[{3026, 3057, 3056, 3053, 3052, 3049, 3048, 3045, 3044, 
          3041, 3040, 3037, 3036, 3033, 3032, 3029, 3025, 3022, 3021, 3018, 
          3017, 3014, 3013, 3010, 3009, 3006, 3005, 3002, 3001, 2998, 2997, 
          2961, 3028}], 
         Line3DBox[{3059, 3090, 3089, 3086, 3085, 3082, 3081, 3078, 3077, 
          3074, 3073, 3070, 3069, 3066, 3065, 3062, 3058, 3055, 3054, 3051, 
          3050, 3047, 3046, 3043, 3042, 3039, 3038, 3035, 3034, 3031, 3030, 
          2994, 3061}], 
         Line3DBox[{3092, 3122, 3121, 3118, 3117, 3114, 3113, 3110, 3109, 
          3106, 3105, 3102, 3101, 3098, 3097, 3094, 3091, 3088, 3087, 3084, 
          3083, 3080, 3079, 3076, 3075, 3072, 3071, 3068, 3067, 3064, 3063, 
          3027, 3093}], 
         Line3DBox[{3124, 3060, 3095, 3096, 3099, 3100, 3103, 3104, 3107, 
          3108, 3111, 3112, 3115, 3116, 3119, 3120, 3123, 3125, 3126, 3127, 
          3128, 3129, 3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3138, 
          3139, 3140}]}, 
        {GrayLevel[0.2], 
         Line3DBox[{2, 19, 1295, 36, 1313, 53, 1346, 70, 1379, 87, 1412, 104, 
          1445, 121, 1477, 138, 155, 172, 1526, 189, 1545, 206, 1578, 223, 
          1611, 240, 1644, 257, 1677, 274, 1709, 291, 308}], 
         Line3DBox[{3, 20, 1297, 37, 1317, 54, 1350, 71, 1383, 88, 1416, 105, 
          1449, 122, 1481, 139, 156, 173, 1528, 190, 1549, 207, 1582, 224, 
          1615, 241, 1648, 258, 1681, 275, 1713, 292, 309}], 
         Line3DBox[{4, 21, 1299, 38, 1321, 55, 1354, 72, 1387, 89, 1420, 106, 
          1453, 123, 1485, 140, 157, 174, 1530, 191, 1553, 208, 1586, 225, 
          1619, 242, 1652, 259, 1685, 276, 1717, 293, 310}], 
         Line3DBox[{5, 22, 1301, 39, 1325, 56, 1358, 73, 1391, 90, 1424, 107, 
          1457, 124, 1489, 141, 158, 175, 1532, 192, 1557, 209, 1590, 226, 
          1623, 243, 1656, 260, 1689, 277, 1721, 294, 311}], 
         Line3DBox[{6, 23, 1303, 40, 1329, 57, 1362, 74, 1395, 91, 1428, 108, 
          1461, 125, 1493, 142, 159, 176, 1534, 193, 1561, 210, 1594, 227, 
          1627, 244, 1660, 261, 1693, 278, 1725, 295, 312}], 
         Line3DBox[{7, 24, 1305, 41, 1333, 58, 1366, 75, 1399, 92, 1432, 109, 
          1465, 126, 1497, 143, 160, 177, 1536, 194, 1565, 211, 1598, 228, 
          1631, 245, 1664, 262, 1697, 279, 1729, 296, 313}], 
         Line3DBox[{8, 25, 1307, 42, 1337, 59, 1370, 76, 1403, 93, 1436, 110, 
          1469, 127, 1501, 144, 161, 178, 1538, 195, 1569, 212, 1602, 229, 
          1635, 246, 1668, 263, 1701, 280, 1733, 297, 314}], 
         Line3DBox[{9, 26, 1309, 43, 1341, 60, 1374, 77, 1407, 94, 1440, 111, 
          1473, 128, 1505, 145, 162, 179, 1540, 196, 1573, 213, 1606, 230, 
          1639, 247, 1672, 264, 1705, 281, 1737, 298, 315}], 
         Line3DBox[{10, 27, 1315, 44, 1348, 61, 1381, 78, 1414, 95, 1447, 112,
           1479, 129, 1509, 146, 163, 180, 1547, 197, 1580, 214, 1613, 231, 
          1646, 248, 1679, 265, 1711, 282, 1740, 299, 316}], 
         Line3DBox[{11, 28, 1319, 45, 1352, 62, 1385, 79, 1418, 96, 1451, 113,
           1483, 130, 1511, 147, 164, 181, 1551, 198, 1584, 215, 1617, 232, 
          1650, 249, 1683, 266, 1715, 283, 1742, 300, 317}], 
         Line3DBox[{12, 29, 1323, 46, 1356, 63, 1389, 80, 1422, 97, 1455, 114,
           1487, 131, 1513, 148, 165, 182, 1555, 199, 1588, 216, 1621, 233, 
          1654, 250, 1687, 267, 1719, 284, 1744, 301, 318}], 
         Line3DBox[{13, 30, 1327, 47, 1360, 64, 1393, 81, 1426, 98, 1459, 115,
           1491, 132, 1515, 149, 166, 183, 1559, 200, 1592, 217, 1625, 234, 
          1658, 251, 1691, 268, 1723, 285, 1746, 302, 319}], 
         Line3DBox[{14, 31, 1331, 48, 1364, 65, 1397, 82, 1430, 99, 1463, 116,
           1495, 133, 1517, 150, 167, 184, 1563, 201, 1596, 218, 1629, 235, 
          1662, 252, 1695, 269, 1727, 286, 1748, 303, 320}], 
         Line3DBox[{15, 32, 1335, 49, 1368, 66, 1401, 83, 1434, 100, 1467, 
          117, 1499, 134, 1519, 151, 168, 185, 1567, 202, 1600, 219, 1633, 
          236, 1666, 253, 1699, 270, 1731, 287, 1750, 304, 321}], 
         Line3DBox[{16, 33, 1339, 50, 1372, 67, 1405, 84, 1438, 101, 1471, 
          118, 1503, 135, 1521, 152, 169, 186, 1571, 203, 1604, 220, 1637, 
          237, 1670, 254, 1703, 271, 1735, 288, 1752, 305, 322}], 
         Line3DBox[{325, 342, 1757, 359, 1775, 376, 1808, 393, 1841, 410, 
          1874, 427, 1907, 444, 1939, 461, 478, 495, 1988, 512, 2007, 529, 
          2040, 546, 2073, 563, 2106, 580, 2139, 597, 2171, 614, 631}], 
         Line3DBox[{326, 343, 1759, 360, 1779, 377, 1812, 394, 1845, 411, 
          1878, 428, 1911, 445, 1943, 462, 479, 496, 1990, 513, 2011, 530, 
          2044, 547, 2077, 564, 2110, 581, 2143, 598, 2175, 615, 632}], 
         Line3DBox[{327, 344, 1761, 361, 1783, 378, 1816, 395, 1849, 412, 
          1882, 429, 1915, 446, 1947, 463, 480, 497, 1992, 514, 2015, 531, 
          2048, 548, 2081, 565, 2114, 582, 2147, 599, 2179, 616, 633}], 
         Line3DBox[{328, 345, 1763, 362, 1787, 379, 1820, 396, 1853, 413, 
          1886, 430, 1919, 447, 1951, 464, 481, 498, 1994, 515, 2019, 532, 
          2052, 549, 2085, 566, 2118, 583, 2151, 600, 2183, 617, 634}], 
         Line3DBox[{329, 346, 1765, 363, 1791, 380, 1824, 397, 1857, 414, 
          1890, 431, 1923, 448, 1955, 465, 482, 499, 1996, 516, 2023, 533, 
          2056, 550, 2089, 567, 2122, 584, 2155, 601, 2187, 618, 635}], 
         Line3DBox[{330, 347, 1767, 364, 1795, 381, 1828, 398, 1861, 415, 
          1894, 432, 1927, 449, 1959, 466, 483, 500, 1998, 517, 2027, 534, 
          2060, 551, 2093, 568, 2126, 585, 2159, 602, 2191, 619, 636}], 
         Line3DBox[{331, 348, 1769, 365, 1799, 382, 1832, 399, 1865, 416, 
          1898, 433, 1931, 450, 1963, 467, 484, 501, 2000, 518, 2031, 535, 
          2064, 552, 2097, 569, 2130, 586, 2163, 603, 2195, 620, 637}], 
         Line3DBox[{332, 349, 1771, 366, 1803, 383, 1836, 400, 1869, 417, 
          1902, 434, 1935, 451, 1967, 468, 485, 502, 2002, 519, 2035, 536, 
          2068, 553, 2101, 570, 2134, 587, 2167, 604, 2199, 621, 638}], 
         Line3DBox[{333, 350, 1777, 367, 1810, 384, 1843, 401, 1876, 418, 
          1909, 435, 1941, 452, 1971, 469, 486, 503, 2009, 520, 2042, 537, 
          2075, 554, 2108, 571, 2141, 588, 2173, 605, 2202, 622, 639}], 
         Line3DBox[{334, 351, 1781, 368, 1814, 385, 1847, 402, 1880, 419, 
          1913, 436, 1945, 453, 1973, 470, 487, 504, 2013, 521, 2046, 538, 
          2079, 555, 2112, 572, 2145, 589, 2177, 606, 2204, 623, 640}], 
         Line3DBox[{335, 352, 1785, 369, 1818, 386, 1851, 403, 1884, 420, 
          1917, 437, 1949, 454, 1975, 471, 488, 505, 2017, 522, 2050, 539, 
          2083, 556, 2116, 573, 2149, 590, 2181, 607, 2206, 624, 641}], 
         Line3DBox[{336, 353, 1789, 370, 1822, 387, 1855, 404, 1888, 421, 
          1921, 438, 1953, 455, 1977, 472, 489, 506, 2021, 523, 2054, 540, 
          2087, 557, 2120, 574, 2153, 591, 2185, 608, 2208, 625, 642}], 
         Line3DBox[{337, 354, 1793, 371, 1826, 388, 1859, 405, 1892, 422, 
          1925, 439, 1957, 456, 1979, 473, 490, 507, 2025, 524, 2058, 541, 
          2091, 558, 2124, 575, 2157, 592, 2189, 609, 2210, 626, 643}], 
         Line3DBox[{338, 355, 1797, 372, 1830, 389, 1863, 406, 1896, 423, 
          1929, 440, 1961, 457, 1981, 474, 491, 508, 2029, 525, 2062, 542, 
          2095, 559, 2128, 576, 2161, 593, 2193, 610, 2212, 627, 644}], 
         Line3DBox[{339, 356, 1801, 373, 1834, 390, 1867, 407, 1900, 424, 
          1933, 441, 1965, 458, 1983, 475, 492, 509, 2033, 526, 2066, 543, 
          2099, 560, 2132, 577, 2165, 594, 2197, 611, 2214, 628, 645}], 
         Line3DBox[{648, 665, 2219, 682, 2237, 699, 2270, 716, 2303, 733, 
          2336, 750, 2369, 767, 2401, 784, 801, 818, 2450, 835, 2469, 852, 
          2502, 869, 2535, 886, 2568, 903, 2601, 920, 2633, 937, 954}], 
         Line3DBox[{649, 666, 2221, 683, 2241, 700, 2274, 717, 2307, 734, 
          2340, 751, 2373, 768, 2405, 785, 802, 819, 2452, 836, 2473, 853, 
          2506, 870, 2539, 887, 2572, 904, 2605, 921, 2637, 938, 955}], 
         Line3DBox[{650, 667, 2223, 684, 2245, 701, 2278, 718, 2311, 735, 
          2344, 752, 2377, 769, 2409, 786, 803, 820, 2454, 837, 2477, 854, 
          2510, 871, 2543, 888, 2576, 905, 2609, 922, 2641, 939, 956}], 
         Line3DBox[{651, 668, 2225, 685, 2249, 702, 2282, 719, 2315, 736, 
          2348, 753, 2381, 770, 2413, 787, 804, 821, 2456, 838, 2481, 855, 
          2514, 872, 2547, 889, 2580, 906, 2613, 923, 2645, 940, 957}], 
         Line3DBox[{652, 669, 2227, 686, 2253, 703, 2286, 720, 2319, 737, 
          2352, 754, 2385, 771, 2417, 788, 805, 822, 2458, 839, 2485, 856, 
          2518, 873, 2551, 890, 2584, 907, 2617, 924, 2649, 941, 958}], 
         Line3DBox[{653, 670, 2229, 687, 2257, 704, 2290, 721, 2323, 738, 
          2356, 755, 2389, 772, 2421, 789, 806, 823, 2460, 840, 2489, 857, 
          2522, 874, 2555, 891, 2588, 908, 2621, 925, 2653, 942, 959}], 
         Line3DBox[{654, 671, 2231, 688, 2261, 705, 2294, 722, 2327, 739, 
          2360, 756, 2393, 773, 2425, 790, 807, 824, 2462, 841, 2493, 858, 
          2526, 875, 2559, 892, 2592, 909, 2625, 926, 2657, 943, 960}], 
         Line3DBox[{655, 672, 2233, 689, 2265, 706, 2298, 723, 2331, 740, 
          2364, 757, 2397, 774, 2429, 791, 808, 825, 2464, 842, 2497, 859, 
          2530, 876, 2563, 893, 2596, 910, 2629, 927, 2661, 944, 961}], 
         Line3DBox[{656, 673, 2239, 690, 2272, 707, 2305, 724, 2338, 741, 
          2371, 758, 2403, 775, 2433, 792, 809, 826, 2471, 843, 2504, 860, 
          2537, 877, 2570, 894, 2603, 911, 2635, 928, 2664, 945, 962}], 
         Line3DBox[{657, 674, 2243, 691, 2276, 708, 2309, 725, 2342, 742, 
          2375, 759, 2407, 776, 2435, 793, 810, 827, 2475, 844, 2508, 861, 
          2541, 878, 2574, 895, 2607, 912, 2639, 929, 2666, 946, 963}], 
         Line3DBox[{658, 675, 2247, 692, 2280, 709, 2313, 726, 2346, 743, 
          2379, 760, 2411, 777, 2437, 794, 811, 828, 2479, 845, 2512, 862, 
          2545, 879, 2578, 896, 2611, 913, 2643, 930, 2668, 947, 964}], 
         Line3DBox[{659, 676, 2251, 693, 2284, 710, 2317, 727, 2350, 744, 
          2383, 761, 2415, 778, 2439, 795, 812, 829, 2483, 846, 2516, 863, 
          2549, 880, 2582, 897, 2615, 914, 2647, 931, 2670, 948, 965}], 
         Line3DBox[{660, 677, 2255, 694, 2288, 711, 2321, 728, 2354, 745, 
          2387, 762, 2419, 779, 2441, 796, 813, 830, 2487, 847, 2520, 864, 
          2553, 881, 2586, 898, 2619, 915, 2651, 932, 2672, 949, 966}], 
         Line3DBox[{661, 678, 2259, 695, 2292, 712, 2325, 729, 2358, 746, 
          2391, 763, 2423, 780, 2443, 797, 814, 831, 2491, 848, 2524, 865, 
          2557, 882, 2590, 899, 2623, 916, 2655, 933, 2674, 950, 967}], 
         Line3DBox[{662, 679, 2263, 696, 2296, 713, 2329, 730, 2362, 747, 
          2395, 764, 2427, 781, 2445, 798, 815, 832, 2495, 849, 2528, 866, 
          2561, 883, 2594, 900, 2627, 917, 2659, 934, 2676, 951, 968}], 
         Line3DBox[{971, 988, 2681, 1005, 2699, 1022, 2732, 1039, 2765, 1056, 
          2798, 1073, 2831, 1090, 2863, 1107, 1124, 1141, 2912, 1158, 2931, 
          1175, 2964, 1192, 2997, 1209, 3030, 1226, 3063, 1243, 3095, 1260, 
          1277}], Line3DBox[{972, 989, 2683, 1006, 2703, 1023, 2736, 1040, 
          2769, 1057, 2802, 1074, 2835, 1091, 2867, 1108, 1125, 1142, 2914, 
          1159, 2935, 1176, 2968, 1193, 3001, 1210, 3034, 1227, 3067, 1244, 
          3099, 1261, 1278}], 
         Line3DBox[{973, 990, 2685, 1007, 2707, 1024, 2740, 1041, 2773, 1058, 
          2806, 1075, 2839, 1092, 2871, 1109, 1126, 1143, 2916, 1160, 2939, 
          1177, 2972, 1194, 3005, 1211, 3038, 1228, 3071, 1245, 3103, 1262, 
          1279}], Line3DBox[{974, 991, 2687, 1008, 2711, 1025, 2744, 1042, 
          2777, 1059, 2810, 1076, 2843, 1093, 2875, 1110, 1127, 1144, 2918, 
          1161, 2943, 1178, 2976, 1195, 3009, 1212, 3042, 1229, 3075, 1246, 
          3107, 1263, 1280}], 
         Line3DBox[{975, 992, 2689, 1009, 2715, 1026, 2748, 1043, 2781, 1060, 
          2814, 1077, 2847, 1094, 2879, 1111, 1128, 1145, 2920, 1162, 2947, 
          1179, 2980, 1196, 3013, 1213, 3046, 1230, 3079, 1247, 3111, 1264, 
          1281}], Line3DBox[{976, 993, 2691, 1010, 2719, 1027, 2752, 1044, 
          2785, 1061, 2818, 1078, 2851, 1095, 2883, 1112, 1129, 1146, 2922, 
          1163, 2951, 1180, 2984, 1197, 3017, 1214, 3050, 1231, 3083, 1248, 
          3115, 1265, 1282}], 
         Line3DBox[{977, 994, 2693, 1011, 2723, 1028, 2756, 1045, 2789, 1062, 
          2822, 1079, 2855, 1096, 2887, 1113, 1130, 1147, 2924, 1164, 2955, 
          1181, 2988, 1198, 3021, 1215, 3054, 1232, 3087, 1249, 3119, 1266, 
          1283}], Line3DBox[{978, 995, 2695, 1012, 2727, 1029, 2760, 1046, 
          2793, 1063, 2826, 1080, 2859, 1097, 2891, 1114, 1131, 1148, 2926, 
          1165, 2959, 1182, 2992, 1199, 3025, 1216, 3058, 1233, 3091, 1250, 
          3123, 1267, 1284}], 
         Line3DBox[{979, 996, 2701, 1013, 2734, 1030, 2767, 1047, 2800, 1064, 
          2833, 1081, 2865, 1098, 2895, 1115, 1132, 1149, 2933, 1166, 2966, 
          1183, 2999, 1200, 3032, 1217, 3065, 1234, 3097, 1251, 3126, 1268, 
          1285}], Line3DBox[{980, 997, 2705, 1014, 2738, 1031, 2771, 1048, 
          2804, 1065, 2837, 1082, 2869, 1099, 2897, 1116, 1133, 1150, 2937, 
          1167, 2970, 1184, 3003, 1201, 3036, 1218, 3069, 1235, 3101, 1252, 
          3128, 1269, 1286}], 
         Line3DBox[{981, 998, 2709, 1015, 2742, 1032, 2775, 1049, 2808, 1066, 
          2841, 1083, 2873, 1100, 2899, 1117, 1134, 1151, 2941, 1168, 2974, 
          1185, 3007, 1202, 3040, 1219, 3073, 1236, 3105, 1253, 3130, 1270, 
          1287}], Line3DBox[{982, 999, 2713, 1016, 2746, 1033, 2779, 1050, 
          2812, 1067, 2845, 1084, 2877, 1101, 2901, 1118, 1135, 1152, 2945, 
          1169, 2978, 1186, 3011, 1203, 3044, 1220, 3077, 1237, 3109, 1254, 
          3132, 1271, 1288}], 
         Line3DBox[{983, 1000, 2717, 1017, 2750, 1034, 2783, 1051, 2816, 1068,
           2849, 1085, 2881, 1102, 2903, 1119, 1136, 1153, 2949, 1170, 2982, 
          1187, 3015, 1204, 3048, 1221, 3081, 1238, 3113, 1255, 3134, 1272, 
          1289}], Line3DBox[{984, 1001, 2721, 1018, 2754, 1035, 2787, 1052, 
          2820, 1069, 2853, 1086, 2885, 1103, 2905, 1120, 1137, 1154, 2953, 
          1171, 2986, 1188, 3019, 1205, 3052, 1222, 3085, 1239, 3117, 1256, 
          3136, 1273, 1290}], 
         Line3DBox[{985, 1002, 2725, 1019, 2758, 1036, 2791, 1053, 2824, 1070,
           2857, 1087, 2889, 1104, 2907, 1121, 1138, 1155, 2957, 1172, 2990, 
          1189, 3023, 1206, 3056, 1223, 3089, 1240, 3121, 1257, 3138, 1274, 
          1291}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
      VertexNormals->CompressedData["
1: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
xcV+Bsf/DyyeRCY=
       "]], {
      {RGBColor[1, 1, 0], Opacity[0.5], Point3DBox[CompressedData["
1:eJxTTMoPSmViYGCQA2JmIM5SPsB/6gGbwza2+oK3RYwODGDwwf4dR5X+ZnZO
hzDT+Z9SFZjg4nlbCx3/fftu/+a0UvtTHy64+IGzlx9PN3hgf+3iyqDQPoQ5
L1wy9pu6v7WvXeAacOjFZ3uY+Oz/7/ltmj/ZH9EVqT1RyAlXLzxXfuXZa0wO
m6Q1uTj72eHiMx+2n2CUZneIfezafrUcIc7AFBrrs4TPIWKGxuv+Dla4uMMK
xVXqoQwO2utleazvCsDFYya97t8+gcthQ5ZfXmfRO7h7ik33WVUvZXb4xba3
pvgCwp0RgbMm7j7+yz5j6oHHnBe54eZkGXrWv9JndyioMv97M+0kXL1n7a1f
5wX/2+8QcCotfncBLi68ffXEV6sYHVp3VDbP+vQLLr6gfNbqzNlsDlKLkmQ8
u9/DxZ/1PpA4GfjdnuOD/gyD3N9w8VPbRKZMKvxvr/Ls/hym8wh3OnFzJdZ/
+2S/mLt2bcJTZrg7r05QTdk7hcthibkO8xJzRLi1RRnm8Hr8t5+k6Obttw2h
Pt/56Ms7hawOAfuKvI6zIeJXgzmXrSTtn/351Vb7S/b+R9jbdNJEYzGrg995
hrzqyYjwPzZb0fL50T/2d9SUY1YvQIT/sQX/U1yl/tsL3GTqf7DzDCKcX+W3
3nRjd4i6MjPT+SMi/ZxzecRTHfvMnuV4wuZWpjtw9c81Fbce/vbXfud0XpO0
Bx/g4gCaJwBa
        "]]}, 
      {RGBColor[0, 0, 1], Opacity[0.5], Point3DBox[CompressedData["
1:eJxTTMoPSmViYGCQA2JmID6R8dpMad3h/e4rXgZkhn22ZwCDD/YPyos/LW1+
uX9d5FobzXO/4eJ8UwJy3J483M/w5bejy53rcHGOk+UMT+PP7t8e+O2f4ft/
cPEzG0vOadt83S+i9WKK0M6vcPHvX3f/qljwc/9Nv/7fCRx/4eLXl+3R3M3J
fqBndV5o+7YvcPGSN1eeRLqwHIh0u/3e8wSLA0zcLd3Ssmwqz4FL/MXTpizn
gYv7ddwWn3yQ7UDdsYTf4inMcHGD6u6XxSUP99ufzNKZMeU/3PywT1fjLr3/
vf9LnPesY4VccPVa7ydvdXnGcuBFIONzVsWr+2HiBy75llz8PWM/37UPjKc4
fsHN4W81lpJo/b2/4tqPlbM5PsLF5bozlm7sZzhQccw/azE7Inxizxke8jP5
tb9Hb1/D9BW8cHsTqluLQns223dMNvi2P4wbLm7itjRKOIr7wLrC4l0Hsxng
4uVFaZ/OL2I5UDOx7tST84jwaYnq2X2CgfPAz1NfL7xP+wG398qjB37svMwH
uA9vtUy/jnB/adrixnSv//sPTjl3YmM6It59PyzoWG/PcqCqtbT3WwQinM1l
ayqme/3a/6ZMytSp5xNcvc6nOyUT5rMcaFkoJZGSjvBXkc/EpQEmj/ezMn/O
W72PDS5erK0v8Lfw7/5v87jPM8V/h5ujkbjeLFee9UCg/m7n6f844eo9kz/z
he78tV96nVWWERtCHACgARo9
        "]]}, 
      {RGBColor[0, 1, 0], Opacity[0.5], Point3DBox[CompressedData["
1:eJxTTMoPSmViYGCQA2JmIO6qy5yVIv7BfttMreOqPTwHGMDgg73ZvorYKVr3
7GUOR87fvujlfpg4u5DNpwDhw/vnbmCYv1f3O1z8bu1TpWaTz/vfMH+/qywm
CDenyS17vkrBKftP1RfLKiz54OJphX3Ru9Yc259cqqVwx4gZLn53Ass+kdkP
7K9G2d36nscNF9fdGX/tO/Ph/UxGH5Nd9rLCxW/LeVb6mB/ZXztPctOTTbxw
8YBTP03aj37bH/th25QHb//A3SkaNG3+9cof9osmfGG55/sLLn7xUdgN0eIT
+1Wz2G4eE2WDm7PsOuP/da3n9nfKhXXYnuSEi1vf/fzlZ+cz+8mZLq0+BxHm
i3eeub7N+Yn94cuFFjcTOeDqOUVO1m+7+tW+3n/3nsp8hDkLal5XnXh50/5C
fGXqi+sscPE/q1LZDsh83v9kTRGD3T5EOFzawf0zeccd+w61Dfsn1/2E23vT
o11tS8Vne/7lFxQO/f4HF5+ndHXd/nCmA6fXMR57pI0wRyTopcbp6T+B7pmz
LfkLItw+fPjVtpnx1f7dkU7cF9v54eKfVzGp8Lq/2D/9fkzwrAUI93sfOeI+
6fWl/RPWv/h9/NczhHu+sk4NiWJwuB7Z7dz3hAuu/qzA5c+BVTftW6yPX780
WxguzhMTG/JD9qm9CrO014YziHCw7jQTWGHweH+NZeCnlddew83/xt2889T6
9/vNWnYeNvdmgqsHAGHYKEI=
        "]]}, 
      {RGBColor[1, 0, 0], Opacity[0.5], Point3DBox[CompressedData["
1:eJxTTMoPSmViYGCQA2JmIM51WL/owpSt9tyTv6TzzrhjzwAGH+yzz2SdPMTw
dL/P8+Zt/8qnwcWv9J29PyF/pb29t/wfGYfvcPH/c39a1zLetl82ZXvtzHn3
4OL7fQ6tyDH8ah/Au5DzduteuDiLfYfw9uSH+2+sVT37Je4DXDxmrdkO+Tm3
9v+dx7D71LtT+2Hiay+GiYlKPrAXLGeYu2LTFrj6+cp6X7ua79r/5lyfVy78
Fi7u0KX4M7346/7S+AeXZgZ9hIuX6fz4HMs3xf7E0yMqaWwH4eIX77OebPF6
b/91UubLC3MR6uvcvmrMbH65v0nm+Ud+3idw8UQOp/Avby7tF1+w8Had1EW4
+D25Fb9lO4/a/7O6ltr4CqE+88uz3yIPn9qf2/jRQMX4NNxf+7Nc9Pp2HLWf
JCbs7L6MyQEm3riD42F+Xbt9YHNv6ISsW3Bzgq+EfGFKeLg/30/cvIifGa5e
rLPzx2fjD/vFhVjOKlv9g5ufpy9/Xe/ie/v91kwV6Ysewc2Z3P3P1OL92/0T
46K957Aiwv/cxg8qKx9t3P9QI7zdoOUF3Bxhx7fMetbn939dZfycb9dluPp9
9Vai9zK329fHLJqdUX0Irl724KQGv0vX7DelRE06G3UWrr7W+uSfJ3kP9ifb
fhLiTULEV94Znwk5ekf2338ka3Sy5iVcPH3Hq8Ssnxf2M6/8VOTJfgku/q+y
nLPJ7779l5qfNedDj8DFAYwMIMM=
        "]]}}},
    Axes->True,
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.4},
    DisplayFunction->Identity,
    FaceGridsStyle->Automatic,
    Method->{"DefaultBoundaryStyle" -> Directive[
        GrayLevel[0.3]], "RotationControl" -> "Globe"},
    PlotLabel->FormBox["\"NeuralNetwork\"", TraditionalForm],
    PlotRange->{{-4., 4.}, {-5., 4.}, {0, 1}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7181255276842346`*^9},ExpressionUUID->"55d94636-5aad-4941-9b80-\
6e30d4db88fe"]
}, Open  ]],

Cell[TextData[StyleBox["BASIC DATA ANALYSIS WITH MATHEMATICA",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.718125960842594*^9, 
  3.7181259781540985`*^9}},ExpressionUUID->"67208e4d-3001-492f-857f-\
857b2b85ad5f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Edgar", " ", 
    RowBox[{"Anderson", "'"}], "s", " ", "Iris", " ", "data"}], " ", "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"iris", "=", 
     RowBox[{
     "Import", "[", 
      "\"\<http://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.\
data\>\"", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"iris", "=", 
     RowBox[{"Delete", "[", 
      RowBox[{"iris", ",", " ", 
       RowBox[{"Length", "[", "iris", "]"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"props", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<SepalLength\>\"", ",", "\"\<SepalWidth\>\"", ",", 
       "\"\<PetalLength\>\"", ",", "\"\<PetalWidth\>\"", ",", 
       "\"\<Species\>\""}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"data", "=", 
     RowBox[{"Association", "[", 
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"First", "[", 
            RowBox[{"props", "[", 
             RowBox[{"[", "#2", "]"}], "]"}], "]"}], "\[Rule]", " ", "#1"}], 
          ")"}], "&"}], ",", 
        RowBox[{"Transpose", "[", "iris", "]"}]}], "]"}], "]"}]}], ";"}], 
   "\n", 
   RowBox[{"dataset", "=", 
    RowBox[{"Dataset", "[", "data", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7181259848671494`*^9, 3.71812600582116*^9}, 
   3.718186990881569*^9},ExpressionUUID->"3f0b7ce6-1ae7-408e-9aa8-\
b700561a2829"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 5, "InitialType" -> 
        TypeSystem`Struct[{
          "SepalLength", "SepalWidth", "PetalLength", "PetalWidth", 
           "Species"}, {
           TypeSystem`Vector[
            TypeSystem`Atom[Real], 150], 
           TypeSystem`Vector[
            TypeSystem`Atom[Real], 150], 
           TypeSystem`Vector[
            TypeSystem`Atom[Real], 150], 
           TypeSystem`Vector[
            TypeSystem`Atom[Real], 150], 
           TypeSystem`Vector[
            TypeSystem`Atom[
             TypeSystem`Enumeration[
             "Iris-setosa", "Iris-versicolor", "Iris-virginica"]], 150]}], 
        "Shape" -> TypeSystem`PackageScope`DocumentShape[
          
          Association[{"SepalLength"} -> 
           TypeSystem`PackageScope`ElidedShape[1], {"SepalWidth"} -> 
           TypeSystem`PackageScope`ElidedShape[1], {"PetalLength"} -> 
           TypeSystem`PackageScope`ElidedShape[1], {"PetalWidth"} -> 
           TypeSystem`PackageScope`ElidedShape[1], {"Species"} -> 
           TypeSystem`PackageScope`ElidedShape[1]], 1], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1137931955], "Type" -> 
        TypeSystem`Struct[{
          "SepalLength", "SepalWidth", "PetalLength", "PetalWidth", 
           "Species"}, {
           TypeSystem`Vector[
            TypeSystem`Atom[Real], 150], 
           TypeSystem`Vector[
            TypeSystem`Atom[Real], 150], 
           TypeSystem`Vector[
            TypeSystem`Atom[Real], 150], 
           TypeSystem`Vector[
            TypeSystem`Atom[Real], 150], 
           TypeSystem`Vector[
            TypeSystem`Atom[
             TypeSystem`Enumeration[
             "Iris-setosa", "Iris-versicolor", "Iris-virginica"]], 150]}], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1137931955]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SepalLength\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SepalLength\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1504531543][{
                    Key["SepalLength"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1504531543][
                  GeneralUtilities`Slice[
                   Key["SepalLength"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 150], " }  "}], 
                    Style[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 150], " }  "}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1504531543][{
                    Key["SepalLength"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1504531543][
                  GeneralUtilities`Slice[
                   Key["SepalLength"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5]}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SepalWidth\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SepalWidth\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1504531543][{
                    Key["SepalWidth"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1504531543][
                  GeneralUtilities`Slice[
                   Key["SepalWidth"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 150], " }  "}], 
                    Style[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 150], " }  "}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1504531543][{
                    Key["SepalWidth"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1504531543][
                  GeneralUtilities`Slice[
                   Key["SepalWidth"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5]}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"PetalLength\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"PetalLength\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1504531543][{
                    Key["PetalLength"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1504531543][
                  GeneralUtilities`Slice[
                   Key["PetalLength"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 150], " }  "}], 
                    Style[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 150], " }  "}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1504531543][{
                    Key["PetalLength"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1504531543][
                  GeneralUtilities`Slice[
                   Key["PetalLength"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5]}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"PetalWidth\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"PetalWidth\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1504531543][{
                    Key["PetalWidth"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1504531543][
                  GeneralUtilities`Slice[
                   Key["PetalWidth"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 150], " }  "}], 
                    Style[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 150], " }  "}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1504531543][{
                    Key["PetalWidth"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1504531543][
                  GeneralUtilities`Slice[
                   Key["PetalWidth"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5]}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Species\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Species\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1504531543][{
                    Key["Species"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1504531543][
                  GeneralUtilities`Slice[
                   Key["Species"]]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 150], " }  "}], 
                    Style[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 150], " }  "}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1504531543][{
                    Key["Species"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1504531543][
                  GeneralUtilities`Slice[
                   Key["Species"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5]}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1504531543][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1504531543]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1504531543][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1504531543][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {165., {67., 73.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.7181265840343432`*^9, 
  3.7181869362593603`*^9},ExpressionUUID->"7e1c7490-869c-4973-9914-\
1a5932aa0ae5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"sepalLength", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{"dataset", "[", 
     RowBox[{"[", "\"\<SepalLength\>\"", "]"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.718126692321311*^9, 
  3.7181267351825504`*^9}},ExpressionUUID->"c19963c9-535d-4c4f-bd5a-\
84c31c144c79"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"sepalLength", ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"ColorData", "[", "\"\<Temperature\>\"", "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Length\>\"", ",", "\"\<Count\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Sepal length histogram\>\""}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"GrayLevel", "[", "0", "]"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.718126740558407*^9, 
  3.7181268461087894`*^9}},ExpressionUUID->"c9b01574-bd83-47b3-b11b-\
c68a1cfd0256"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.63], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.63], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[0.178927, 0.305394, 0.933501], 
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4., 0}, {4.5, 4.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{17.747598078462772`, 36.982586068855085`}, {
           41.093664745901314`, 52.81068474788224}}]},
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {
         GrayLevel[0]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[0.984192, 0.987731, 0.911643], 
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4.5, 0}, {5., 18.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{36.482586068855085`, 55.7175740592474}, {
           1.8340947389680693`, 52.81068474788224}}]},
        StatusArea[#, 18]& ,
        TagBoxNote->"18"],
       StyleBox["18", {
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[18, {
         GrayLevel[0]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[
         0.8525355714285714, 0.40481699999999976`, 0.19794142857142855`], 
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5., 0}, {5.5, 30.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{55.2175740592474, 
           74.45256204963971}, {-31.816965266974712`, 52.81068474788224}}]},
        StatusArea[#, 30]& ,
        TagBoxNote->"30"],
       StyleBox["30", {
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[30, {
         GrayLevel[0]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[
         0.8349272857142858, 0.26947200000000027`, 0.18107971428571432`], 
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5.5, 0}, {6., 31.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{73.95256204963971, 
           93.187550040032}, {-34.621220267469944`, 52.81068474788224}}]},
        StatusArea[#, 31]& ,
        TagBoxNote->"31"],
       StyleBox["31", {
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[31, {
         GrayLevel[0]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[0.817319, 0.134127, 0.164218], 
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{6., 0}, {6.5, 32.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{92.687550040032, 
           111.9225380304243}, {-37.425475267965176`, 52.81068474788224}}]},
        StatusArea[#, 32]& ,
        TagBoxNote->"32"],
       StyleBox["32", {
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[32, {
         GrayLevel[0]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[0.993297, 0.9880712857142857, 0.5117980000000002], 
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{6.5, 0}, {7., 22.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{111.4225380304243, 
           130.65752602081662`}, {-9.382925263012858, 52.81068474788224}}]},
        StatusArea[#, 22]& ,
        TagBoxNote->"22"],
       StyleBox["22", {
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[22, {
         GrayLevel[0]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[0.35005228571428576`, 0.4776194285714286, 0.943526], 
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{7., 0}, {7.5, 7.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{130.15752602081662`, 149.39251401120893`}, {
           32.68089974441562, 52.81068474788224}}]},
        StatusArea[#, 7]& ,
        TagBoxNote->"7"],
       StyleBox["7", {
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[7, {
         GrayLevel[0]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        {RGBColor[
         0.2902004285714286, 0.42234942857142854`, 0.9398378571428572], 
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{7.5, 0}, {8., 6.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{148.89251401120893`, 168.12750200160124`}, {
           35.48515474491085, 52.81068474788224}}]},
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {
         GrayLevel[0]}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Length\"", TraditionalForm], 
    FormBox["\"Count\"", TraditionalForm]},
  AxesOrigin->{3.92, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{213., Automatic},
  LabelStyle->{
    GrayLevel[0]},
  PlotLabel->FormBox["\"Sepal length histogram\"", TraditionalForm],
  PlotRange->{{4., 8.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.718126851468328*^9},ExpressionUUID->"686333dc-699e-498a-84cd-\
617eabed937f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"sepDist", "=", 
   RowBox[{"HistogramDistribution", "[", "sepalLength", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.718126862973665*^9, 3.718126879676982*^9}, {
  3.718127051952649*^9, 
  3.718127066660495*^9}},ExpressionUUID->"777427ef-cd33-428e-a6be-\
2edfee623be9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"DiscretePlot", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{"sepDist", ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "4", ",", "8", ",", "0.2"}], "}"}]}], "]"}], ",", 
   RowBox[{"DiscretePlot", "[", 
    RowBox[{
     RowBox[{"CDF", "[", 
      RowBox[{"sepDist", ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "4", ",", "8", ",", "0.2"}], "}"}]}], "]"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.7181270778928847`*^9, 
  3.718127189450324*^9}},ExpressionUUID->"a1ab7c3d-c00a-448a-b09b-\
a7d70ea7ae8f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
       LineBox[{{{8., 0.}, {8., 0}}},
        VertexColors->None]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
       LineBox[{{{4., 0.05333333333333334}, {4., 0}}, {{4.2, 
          0.05333333333333334}, {4.2, 0}}, {{4.4, 0.05333333333333334}, {
          4.4, 0}}, {{4.6, 0.24}, {4.6, 0}}, {{4.8, 0.24}, {4.8, 0}}, {{5., 
          0.4}, {5., 0}}, {{5.2, 0.4}, {5.2, 0}}, {{5.4, 0.4}, {5.4, 0}}, {{
          5.6, 0.41333333333333333`}, {5.6, 0}}, {{5.8, 
          0.41333333333333333`}, {5.8, 0}}, {{6., 0.4266666666666667}, {
          6., 0}}, {{6.2, 0.4266666666666667}, {6.2, 0}}, {{6.4, 
          0.4266666666666667}, {6.4, 0}}, {{6.6, 0.29333333333333333`}, {
          6.6, 0}}, {{6.800000000000001, 0.29333333333333333`}, {
          6.800000000000001, 0}}, {{7., 0.09333333333333334}, {7., 0}}, {{7.2,
           0.09333333333333334}, {7.2, 0}}, {{7.4, 0.09333333333333334}, {
          7.4, 0}}, {{7.6, 0.08}, {7.6, 0}}, {{7.800000000000001, 0.08}, {
          7.800000000000001, 0}}},
        VertexColors->None]}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], {}, 
      PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQECDv7SL7Y0+q22P3sGBBD8WTNBQBDOTwMDIYcd
cq2vA3ecszcGA2E4H2KeiANE302oeQg+hBaF8yHmiTmU3HJYzltyC2qeOJwP
MU8Cav9tqHkIPsQcSTgfYp6Uw7FJ8To/j16yNwGbJw3nQ8yTcXgq7l238cl2
qHkIPsQ8WTgfYp6cQ7XIOveHVVug5snD+RDzFBxgIQkA7biMMg==
       "]], {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{4., 0},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "DefaultPlotStyle" -> {
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
      "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
    PlotRange->{{4., 8.}, {0, 0.4266666666666667}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
       LineBox[{{{4., 0.}, {4., 0}}},
        VertexColors->None]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
       LineBox[{{{4.2, 0.010666666666666677`}, {4.2, 0}}, {{4.4, 
          0.021333333333333353`}, {4.4, 0}}, {{4.6, 0.05066666666666658}, {
          4.6, 0}}, {{4.8, 0.09866666666666662}, {4.8, 0}}, {{5., 
          0.14666666666666667`}, {5., 0}}, {{5.2, 0.22666666666666674`}, {
          5.2, 0}}, {{5.4, 0.3066666666666668}, {5.4, 0}}, {{5.6, 
          0.38799999999999985`}, {5.6, 0}}, {{5.8, 0.4706666666666666}, {
          5.8, 0}}, {{6., 0.5533333333333333}, {6., 0}}, {{6.2, 
          0.6386666666666667}, {6.2, 0}}, {{6.4, 0.7240000000000002}, {
          6.4, 0}}, {{6.6, 0.7959999999999999}, {6.6, 0}}, {{
          6.800000000000001, 0.8546666666666669}, {6.800000000000001, 0}}, {{
          7., 0.9133333333333333}, {7., 0}}, {{7.2, 0.932}, {7.2, 0}}, {{7.4, 
          0.9506666666666667}, {7.4, 0}}, {{7.6, 0.968}, {7.6, 0}}, {{
          7.800000000000001, 0.984}, {7.800000000000001, 0}}, {{8., 1.}, {
          8., 0}}},
        VertexColors->None]}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], {}, 
      PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQECDjDW2TMgIOCw+tGbw+k3Wu1nzQQBQSh/qn0a
GAg5SPiutPj9YaW9MRgIO/A86/xl7rTTHmKKiMOxSfE6P48esoeYJ+LANtfs
QibzWah5og6LL7NZ5S64DDVPzGG+67bPf6/cgJon7tC6RFM0Xf4e1DwJh62N
ftIvtjyEmifhwCV3Rvhr/hOoeZIOCbs8eZi0n0PNk3IAG1fx0t4EbJ60wyHB
Uy9yI19DzZNxAFnOZvUWap6MQ+7z3ys/XnoLNU/WYX5ieMOd7HdQ8+QcEp5e
ULr98x3UPHmHDUUZE9/WvIeapwANvw/2ALTjjME=
       "]], {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{4., 0},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "DefaultPlotStyle" -> {
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
      "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
    PlotRange->{{4., 8.}, {0, 1.}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7181271946594577`*^9},ExpressionUUID->"eb2a59f8-4a5d-4ab5-b318-\
3dc1bcaf7a12"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StandardDeviation", "[", "sepalLength", "]"}]], "Input",
 CellChangeTimes->{{3.7181273478860073`*^9, 
  3.718127357386233*^9}},ExpressionUUID->"b9c42499-b9b6-4763-8505-\
c2c5408bc152"],

Cell[BoxData["0.828066127977863`"], "Output",
 CellChangeTimes->{
  3.718187382530927*^9},ExpressionUUID->"7b983eaf-db41-42f0-b29b-\
48afa6658970"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"sepDist", "=", 
   RowBox[{"EmpiricalDistribution", "[", "sepalLength", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.718127396686524*^9, 3.7181274043638754`*^9}, 
   3.7181274752912397`*^9},ExpressionUUID->"2babe34d-44cd-4966-af9f-\
cb94724cfb9c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"DiscretePlot", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{"sepDist", ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "4", ",", "8", ",", "0.2"}], "}"}]}], "]"}], ",", 
   RowBox[{"DiscretePlot", "[", 
    RowBox[{
     RowBox[{"CDF", "[", 
      RowBox[{"sepDist", ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "4", ",", "8", ",", "0.2"}], "}"}]}], "]"}]}], 
  "}"}]], "Input",ExpressionUUID->"486ecea3-8be2-45fc-a4c2-481520acb3e6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
       LineBox[{{{4., 0.}, {4., 0}}, {{4.2, 0.}, {4.2, 0}}, {{
          7.800000000000001, 0.}, {7.800000000000001, 0}}, {{8., 0.}, {
          8., 0}}},
        VertexColors->None]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
       LineBox[{{{4.4, 0.02}, {4.4, 0}}, {{4.6, 0.02666666666666667}, {
          4.6, 0}}, {{4.8, 0.03333333333333333}, {4.8, 0}}, {{5., 
          0.06666666666666667}, {5., 0}}, {{5.2, 0.02666666666666667}, {
          5.2, 0}}, {{5.4, 0.04}, {5.4, 0}}, {{5.6, 0.04}, {5.6, 0}}, {{5.8, 
          0.04666666666666667}, {5.8, 0}}, {{6., 0.04}, {6., 0}}, {{6.2, 
          0.02666666666666667}, {6.2, 0}}, {{6.4, 0.04666666666666667}, {
          6.4, 0}}, {{6.6, 0.013333333333333334`}, {6.6, 0}}, {{
          6.800000000000001, 0.02}, {6.800000000000001, 0}}, {{7., 
          0.006666666666666667}, {7., 0}}, {{7.2, 0.02}, {7.2, 0}}, {{7.4, 
          0.006666666666666667}, {7.4, 0}}, {{7.6, 0.006666666666666667}, {
          7.6, 0}}},
        VertexColors->None]}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], {}, 
      PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQECDjDW2TMggODPmgkCgg7VIuvcH1ZNsU8DAyEH
f+kXWxr9Ztsbg4GwgyAYLLSH6BKB8jfaQ8wTgauHmCcKNW8J1DwxOB9inrjD
U3Hvuo1PlkPNk4DLQ8yTQDNPEq4eYp4UVL7b3gRsnjTc/RDzZKDy1VDzZODy
EPNk4fIQ8+TgfIh58vDwgQAFOB8APR9zng==
       "]], {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{4., 0},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "DefaultPlotStyle" -> {
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
      "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
    PlotRange->{{4., 8.}, {0, 0.06666666666666667}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
       LineBox[{{{4., 0.}, {4., 0}}, {{4.2, 0.}, {4.2, 0}}},
        VertexColors->None]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
       LineBox[{{{4.4, 0.02666666666666667}, {4.4, 0}}, {{4.6, 0.06}, {
          4.6, 0}}, {{4.8, 0.10666666666666666`}, {4.8, 0}}, {{5., 
          0.21333333333333332`}, {5., 0}}, {{5.2, 0.3}, {5.2, 0}}, {{5.4, 
          0.3466666666666666}, {5.4, 0}}, {{5.6, 0.4333333333333333}, {
          5.6, 0}}, {{5.8, 0.5333333333333333}, {5.8, 0}}, {{6., 
          0.5933333333333334}, {6., 0}}, {{6.2, 0.66}, {6.2, 0}}, {{6.4, 
          0.7666666666666667}, {6.4, 0}}, {{6.6, 0.8133333333333334}, {
          6.6, 0}}, {{6.800000000000001, 0.8866666666666667}, {
          6.800000000000001, 0}}, {{7., 0.92}, {7., 0}}, {{7.2, 
          0.9466666666666668}, {7.2, 0}}, {{7.4, 0.9600000000000002}, {
          7.4, 0}}, {{7.6, 0.9666666666666669}, {7.6, 0}}, {{
          7.800000000000001, 0.9933333333333335}, {7.800000000000001, 0}}, {{
          8., 1.}, {8., 0}}},
        VertexColors->None]}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], {}, 
      PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQECDjDW2TMggODPmgkCgg7+0i+2NPrNtk8DAyGH
HXKtrwN3rLM3BgNhBz+w/G57iC4RKP+0PcQ8EQeIusv2EPNEHfSn/Uk6qX8N
ap6Yw24wuA01T9xBEAweQs2TcPgLVD3tzyOoeRIO8iDr5Z5CzZN06OwAgRdQ
86Qc2K1yF1xme2VvAjZP2iFB5+fRSfFvoObJOBTacl1fXPAWap6Mg0/dxifi
3u+g5sk67AL77x3UPDmHj+/AAGqevMNpsAfeQ81TgIbXB3sAnTmD3g==
       "]], {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{4., 0},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "DefaultPlotStyle" -> {
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
      "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
    PlotRange->{{4., 8.}, {0, 1.}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7181275143002386`*^9},ExpressionUUID->"6a3f2cdf-0ba7-4a49-ab8c-\
59f1fb3ffd5d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"estSepDist", "=", 
   RowBox[{"EstimatedDistribution", "[", 
    RowBox[{"sepalLength", ",", 
     RowBox[{"GammaDistribution", "[", 
      RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7181276023200536`*^9, 
  3.7181276449696493`*^9}},ExpressionUUID->"33b2ce25-5806-4916-ad15-\
2567d6600243"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{"sepDist", ",", "x"}], "]"}], ",", 
     RowBox[{"PDF", "[", 
      RowBox[{"estSepDist", ",", "x"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Empirical dist.\>\"", ",", "\"\<Estimated dist.\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7181276671065693`*^9, 3.718127798529918*^9}, {
  3.718127853350268*^9, 
  3.7181278785465603`*^9}},ExpressionUUID->"c2955f72-02c8-4edc-a040-\
c4b52f36acdb"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxFz2lI0wEYBvDZtGLOcFqmqdt/Ji7nkX4IMvJIg8yLTJcw6djUzfJKcWBq
ZabpEG3V8GQMNQ0RZ8YM7FimpnktdGXRjMQ5RFPQ1tKptQryfV94ePh9e14m
P+tsyg4SiRT9N/9adoO/0z+5Ioj0/wY0RFQCcTl42+ZB1W2CuAaW9VYyrAgx
OD1QlLHGqANrNlOlK4w28C7tLGuZ0QNuHJFnf2MMgxWdYm2672ewMHiibilH
B87Ue+qUigUwhVnC+np0BVxlO8puvGQA87Xxr8hjP8HZb0r4WawNcNdVapzj
6V+4pyBt0S+BFLLtYvlW7I8lCzBJMxPyIp8M9sgV5MWzrcBzxppz1i93giP0
V67fz94NjpmTeNHpFPBiP7/obYc12Jc25Rp20QZMCTbypg17wKeWuWtuHFvw
p75kC643DdxdPnCBMKIFVqIZtdoOnJRT0E2ttwcfFnqpo3h7we/svK1FAfvA
zxXFDd5kB3CBBfvM2Bc0ZTo/PFO5H6xvZUrlhY5g6SEnyx6OE1hSLxjiEQfA
XOl5NXUevX6yxSRXOYN1+tC8vjIXcFOgv/M4zxXcUSqiCX3o4DJOUiTZiD4y
3dhWNs4A13o2dIxHEuCbvZW1kT3oaGdOy4g7E3wicyiRJkbLXfjuY0a0e/+j
6phEN/zPp489qUILDJYTw+yDYH7Xd0J8F51eHLcVcQ8tilN+pD5AlxtFVZJq
tCLAtFkjQ5tem6da29GSSWrlwBC6vjkj9c4wujlXHRY+in7qINkYVaOnufap
mg9ols4pbFaH9lPm0x/q0cdKtaaUeXQUS/Z4YRGdk0bQV1fRhcdvmZ4Y0KU2
s+9zjejazuaK9XV0U5Gl8NkGuj02JbRwC610G3QN+o1WGTxMZjP6DwbEFmI=

          "]]}, Annotation[#, "Charting`Private`Tag$186262#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwtV3k01O/3nxkzDGMP9ZEsZcuuhJj38zxkyS4hlS2RJYRS1hSlErKTNaEI
RaQsESFr2UO2hIqULGMZy6/vOb/7x73nnvN63Xvu/ed1r4jDJTMnAg6H4/zn
/hczrjswKjreB7j/t8ZeYcNTwq6wFYfsylse799prg0TFvaHjCQxE16VGrGM
d1FCJOF78IBIucHSkz5Jd8zXY1XoIbTZF7yb/PyXdC/dJWFBqABKzPjUDf3A
yzN9mZSYF6qEUXdsjFn5uA9lt2V5zwm1QpPsfsLKxO4jz1/c++IuNwzrGFiG
7kUqqzrD7oe/fL7BWzY/ldUC+456Th/8Vv78J8TZC9zQtf+lxiJyS2JcdQGi
sph3SuijejRnu1S2/RLUCA5zdNjnQ61U2ffK2HMJzsVOn/woc4U6ZXsJbgYu
wesCaIPt6lWqevEu81PJS9CtKHiL/VMg9YeedTDbxyWoe35YQ0X1NvVY2Pwn
f/VlGCWgZTagl0L1fAbPSOgtw47EK3yK06nU1O7YqT7LZSjK7ekW2ZRBXRBS
Xpf3WYaq19t/PVd9TM2sub5/Jn8Z7oqXV96vWEg1OP3BIH18GapndhZFy5VT
11Y4fM34VqBXVNE+n8631AP7HHZ2DqxAp6TIH72u76jGWuX3ihVX4ODbVJ86
7gZqXpxVJtloBe4+eHU4cqqJujmx+fK8ywo0kJtVDQ9qo5rJZ3+oDVuBMO89
JRrXRS0I1h75L2sF2uByBn6b9FJxHT8XrlStQJzfZ0Ub3c9US/5oUlf/Ckzq
T02tYRyhFrsc4pf+uwIXHRTTvgxNUAcf3Mod3F6BA0mLHJf9JqnE1wNy4aw0
GHB2t5MtNkWVH5OsPMxPg8WT6CxRZoZ6hhR47KsEDVZ/2innPf6DGi7T2Rl9
hAZt1UZV4xNnqaUnhayox2gw2FNbqm/PPJX8+L17si0NNvf82v3L9S/1cCvv
qpb7P74q/LyPskS1XXC+uehPg60h3/iHu5epEburKI/u0OCDjoxntvU06ivA
mmSU+I/fufJVdnSNOuFkK0x/TINcu4T/4zlIp7JGlTzLL6FBCmHQV7Zgi+rw
xbyOoYMGpz67PuQowmMsaV89vIdo8LmMR+kTxIC9POMpMD5Dg3YJBYKkNSJ2
hp/eZrhMg57dvLPkfkaMYfiOfxV+FaazxxDahslY0UMeSUmOVdgtJJSSyUrB
zE9nDyQKrEK77o1mIU82LHew6rC3yioMuG1avOnMhRmm6E6Oaa3CC7y1pTd+
cWPLp/piDM1W4VbJQFJMLA+WvvscrLJbhUzPdl9rPc2HaX+en5fwWIU+2u2d
dN092O+kgPTEgFW4+aP7qLwdP5ZkyWTAcHcVKqnbhD15LIDN9Avnjz1ehcmf
PEcsx4Sx6MRiS8OSVTjXqZ9xz2g/pmyhRqp6uwqXub6tvhk+gI3xfCiTaF+F
QHRXCnZXDLvTd9IhcXAVOmm825VhJYEpJExwMsyswn1/R/ZFGR/EBk961Hkt
rcJM5vYFmrs0JtkbLmDIvgazhveYbOxWwLridrVX7l2Dka/emNR5KGJ+Zo/8
JQ6uwdu+t/Oqxw5hwtyykonKazA3ajuf4KGEtXZXDhC01mCZRpHTR35lzCdW
57bXiTVI/bB9PHRWBeM/0Xt4zHYNHq6w2C4eO4q5df2KqfRfg/XE3VgaBBh3
jD+UuLMGN1P1J9ROI6zKhPF3QsIaRLWtSbhCDcyBIz6d8HgNUnDtIr/5jmGU
T0IGXi/WYPXFkoalTC2sPLpofbRmDcalPusT1dbBrI2P5hu0rUHf19SDVZTj
WFGnGUlieg121Ey71TEYYuZR42UJi2twV35G+WU1Y2zT0N2BgFuH1zD5i2zG
plgu6zqnF9s6THgZs/Ej8QRm1HG7bpR/Hcqd3n52lWaG0e5zexpIrkNJmZHt
YG9zLNMgS6DyyDocKKA0TZMtsd9tb/wTTNehl2p7E3/iaSwpQluSYLsOW40b
RJ2iz2JAv2fg0sV1yGXqv81ebIPNMNvdHvVbh5d7XeZqluywB61zhw3C16Ex
cfjBo0PnMNV7fpNv4tehvYKptEmoAzZxnBQrnr0O9ZWe+N6ePY8ptAj+xtes
w32Xnn+6QXHGBu8Upl9qXYel8YYxrC0u2A1dVYPRgX94aUO50lw3TJKpaV1/
ah36SO5Lystxx7qaT+S/+bsOt50v07Q/eGJ+4WOW4jvrkPFaLDPlnhcmrHOR
lMC6AYVSwkbPvffGvJtuOVyS2IAUjcLL+UFXMMEpHUba4Q14xo52cumbL9ZO
YH4WhDZg2PsY/h6Ha5ifSLsRg9EG/LZz7EDdhh8mhqL+3ju9AcmCqbYGxQFY
j61JIueFDajZz/ZQKCgICwnmOprsswHzwKveLZfr2FBV4o3c+xtQw+Cw72Gz
m1j40ClR6ZQNuN2yK+BGYCh2eO2/ltLcDfjz6E+9b6/DsAm+kYuqpRvwiOK1
k3fIt7GoI5kcdW83oKH9qcACz3BMzdy+TLttA7Z5LnM/nLuDfffZf6pjYAOe
7XAYeXPjHqZR8iRz6M8GvBMcURG4Hon9/uiiab+5Aas+H3MwmYjG0ualZmbI
dHjvJIP3F58Y7Djr/D0PXjpsErz07P3tWGxF6oXssggdrh8J0x8siMMe63l3
B8jRYaV9lLnQRDxm4nLYF69Ohy7/EXOLDyZiBXmva9jN6XDOdiFCk56MWTb6
2yfa02H2Zcyr8fZDjOGbOlHAgw7rMp4xhEumYSX47aeP/emQ2vRCaGkqHbMR
fmdwMJwOxaVFJu/XZGIsMPTPizg6jN+qGvOxeoS9ttGKV86iQ7eDnQYD57Ix
rrSW4WNv6DDNhlmoLy8Hq62MuN7WSIfQIId+ajIXuzhouP9ENx1upCwnzyg+
wZp4u11tZ+kwem8NimUvwHyU4tmmaXTIrOfzmiXzGSZ00qL0IsMm5Kn/bG2g
XYT5xwyt+Qlswt8qjskPJ15g4i/S0nckNyE+N0ukda4E6+20QeFHNqFdpvI+
XlopJkuZvBNvvAkJf8/wBqiVY8MHc6X5z27CSzKeq7ZXX2F3jl/49Mh5E4o5
6F8paqzAvt6e5Xt+YxNaGi3O56ZXYtG5RVVKUZuwNDTs8y3Jakz9vadt9cNN
GNvqmabaXoMl4pbyWl5uwtp9QSW7Zd9hmkKv9EzqNmGlkadDvGg99ge7Nt/f
vgmfGdiqyUk1YHqBdKVvU5sw641l2ohDI0Z7+HbQ9e8mdLvMdDM5uQnLeRMS
tLC1CTVhsk79aDO2tcLQuMW3BY88swmRedyKPeNpdr51YAtSGjSifPa3Y6cO
36VQFLZgU9+9ScU3HVipF+vJPXpb0IzU02zD04V1pO7yL7bcglOWYKhidzc2
08ifpem4BW/MhZTnSfVg/P8dnHMP2YL6lb/uToT2YUrHFLgIUVuQr+54539t
/ZiJh4pKcuoWzIMKlY2in7Fb9dph9a+24J+IjPDJPcNY5pxhgeX7LTjYQZd6
Vf4Fe8Nr/mmuawt6bwbdqXIZxeZdHfby/dqChViX7MUHExg5wVWjcH0LkpQ7
p+div2L7a72cEdM2VP60b9w7ZxKz5A4pc9u/De8MKfH+pE1hXtTwoR35bTh7
LA7lqs1gEReidhKwbUhsYXmyHvMdq6tKM6iz2obzUx+wB/6z2PDUY2/zC9tw
qFw8cYftF7bM/iz55+Vt+JAt/P3FynlM8vybb7sebMOImUdagsULmGZUHXNB
+jbc9arutHjBX8z6dbM8eLYNl8lMr63KFrFYSn+gS9M2/DhvzG6wsowVHRnJ
3urZhpO6EjKFcjSs2e7bh7iJbXgm+XXrVf9VbKPs76639G34RKJgF1l3A+MZ
WztqxrwDb+pd1frQTsfkyDj773w7kPf2af4Zpy3svDV7EdehHYiqNz0cLuHA
9XDenidwBwYd0a1btsODlBKBNXWjHfjs4UnNdBsC6CBKa11w2YFug0ZwOpQI
ZuQOudF9dyBeVfXoeiEJ4E4fjYkJ24ERAS+lydOM4Eix7khV5g60fV1v4hDB
DEw/GxNMi3ag8Smfh+5rLMANbyk5XbkDk+2UaQv+rCDTwvEKR/8O1P0xs8u+
mgO8CbmYmju5A9X/Bqe8rOUEvQU+744u7EDznAC+qEIuQAxBjC9JOER0obTI
FO4CXDxaD4NYceh4Wu/FI3U8QLBAV0Z3Fw4tHNhzM+MrL1DtNTYbEcYhwUoJ
uov5HqDtYjb9RAKHasW5FU2f/AfMtiz8vOVwaJtvQyWLeS9wl7DJZKTi0F6z
rlOTTILAv8ZesVsTh0KajgU9yRUC4SccG9P0cIiTtvjyaKEwyA68OKtwCod0
T+XxPbq+Hyi8Y167Y4NDZYc4UvhdD4B3xHzS+HkcGsP/2Z9qKwomoqaEo7xw
yNHdzu2xuzjw6gmVm7qKQ9past5HwiXADp8IVT0Yh3Kqw0MmiySB4CObUz/v
4ZDQgoTA2AFp8HyK7ohicGiqtKTVyVcGYAdTfZKT/s17861ywIAssH45EKWd
828/dX5GBCcF8It2JS29AIe8ZVU5V+QUQaD6roKlFzi0+F8HoyDhEEhtNGnM
rsGhQ/EZoUVNh4EU8+/utQYcOhb89vzPCiVQaRQ5bvLv2ZJ2PH+DUnYEDA60
bGz149BlT+qx8U4V4LLXmWwxgkOte24MR86rglU7El/RJA55PBmf3c2vBvh+
aiie+fNvP3vypVfTqOCJ7AQoXcEh1xD/NO9FDBzxuW5I3sQhJlrpRT4rCMzp
Vc4VZDzK8snPqzioAeLYlDK59+OR8IXsxa5oLbDfrKfQVRKPTHw3FQxvaIPS
JK/Kd3J4tH3jReqxIB3QJVTc56mOR6ZPWCfOJR4H9o4Gk00aeDTt973Hq0wP
/Mn/+UfgOB5xDaW4d4zqA/ZD4pR2czwS+3Dy48XTRiDzauOe/WfxyD9rYLqm
0BjIVjuI+5/DI4mvJzvVGE2BoVaWhoQnHil9KV56E3wCRFju8Qu7g0eRebx7
YrvMAX9axe3hKDwacUrRYa2xAAXj5vGKCXikt2OTbF1qCVpcYp+PP8IjoZIX
EpRqK2BVLF+j/BSPfPRh99Gu0+D7387WqGI86ku4VjK2cAYwBrJMq1fhkYau
6IilpQ1IqstfjHuHRwumPiH86bZAjKiLm23GIwapRKMjf+yAVlTY3pRePDL2
YmettzsHQrM2Tyz/wiOVtgo6PtIRmCq88ZZewqPz2XNS/s5OQLD+cqzDOh4p
HECf4w0ugKrJ2a4uEgFtzcxOb8q5gLuXnywwsRKQmEHtNk3OFVgSHTghNwF9
4kqW/6XqBhbFhkyKBQmIr/K8F3J3B+8qEi5NiRIQk85K9/kkDxCta/pgrzQB
Pa0X3U/p8ARSrh8+3lMhoPMCcKi12As4FL0yumBKQFKnl9U5Ii8DBczbI8OS
gFwOd0x4WFwB250yUX3WBER3j3LxFPcFqX9yOjRdCej014Io94mrwOWG3S//
SwRUsuOQR2+9BpS59rKW+hJQQZnjG5MaP9BzKM5AKJSAJJw8Cm7VBIBH740u
Wt4loANCTH9Z2gOBpznz/ahoAhKqfymX/S0IsFy90UZPJaBwmZ6MC0ohQKPS
U2+wjIAGKgLDPORDAbu+lCtH1f/6V80cnAoFI8PTd3XeEZDBdyftkKww4Ldp
3VLeQUDB7ky4UanbQCdqz4+5HgKaV3ixakO/DXgE+5gODBHQus4hzLU3HJRA
A93YaQI6LpAOxdLugutdjM4tcwTEMdziZHv/HjA81xC+85eAnPz12g7digA/
Qo82e2wTUJCz305/TCQQbpbQ1t/NgOT1XYbNHsSA35bfHG/uY0DC8e8rReVi
Qc33zFtvDjAgEc1VrcieWGDFzNcorsCAOKVu7hqSiQfiqd3fbJQZ0KXqD8eE
v8WDZakohkQqA7ppPc5Wn5UAYgyJxxj0GFAi/4PRbzJJwHa0zkHNhAG9Vqzn
6dtKAjKegaHeFgyo9SmP3UZ/Mmh5sFg/fo4BnRgYYBhMfwhwvROoJoABuYUy
Hmy8nwFu/azNDrjJgKaI0VqL5ZmAGZdBOHqXAY1EeMpz/swC3LKnG18lMiCv
i5eefjyaDZKPqYhdSWdA/OrHbrtNZwOBM7zhh3IY0LMK2ned5MdA7E637osS
BlQvcc89jT0XPMt4ke/xmgEprbyfvtWXC+TKo5hlahnQF8+1Z7HZeUD1q157
fjsD+vjl502K2VOgr95g/HiGAcly/5Yt2FUIPp549MJ+ngEFx435tv5XBE66
XOcUWmZA8wkVKbIHi4F1olpPGp6IaNOTDhuOL8BE4Z7DZ8hE5BZw+SVBrwQ4
NdDi93AQETTvut8xVQI8/7y0SBQgoueiQpqjMi/BIim24uQBIvq754Z9yNBL
cE3g0m5uKSIS+/j1okBkGbihJz0UrUJE5r1Mv1mJr0B8To71XTMiagj8m3pT
6w3YU3Xzrc7pf/1Y1jIKxStBepedIMmeiBw6oWkYZxV4srV34qYHEb2rCmFT
2qwGUjwbCF0hIqNxuZKo7RrwQmowezuAiG5gbceTmGvBm1MJ5wPvEtHbpGJW
p33vANXTp/HoAyIqOsAb1VDyDtTfMhVbSySiMaFVGya9etBWyvr9Sg4RJVbz
8kzebQAjlNtunrVERPrac+mUfhOw33++XaaJiJxVehfOMzeDaVUNmbl2IroW
qHW98GMz+O20Ne88RETGFUceFrm3gMtBX4zFJ4io72HMWKt2K1iLq3wxNUNE
9YesSn6KtQH8O1/vc8tE1C91NZFpsx2ED5zsEaITkUCVROKVxQ7AMq94eAxP
QitmjygNC52Ah//38hkOEuo5XONFI3QB8SsX/MylSMjxwxWmUsMeIKs2fjJL
gYRqUyYXd0/0ACWclfysMgl1yNLoHdd6gWak3kzIMRJi0uXTSinvA7a5MuaF
1iTkoVmWKOD8GTi55cnTHP7hxX88sBIeBO4KghQNVxJ6NUjq+zY2CAJqOBoG
fEnIaSZs8Jr7MEjqW5QnPCChZDHxC2WdoyAj9SLFKJGEdIcn0m6+GgO59lMz
yWkkFPmNR68/Zxy8/NWfIZtPQtvW3bPWbRPgI7GScrqehKYMX2wpzUyC/jbF
7zkfSOixnnvj06vfwEjMs4bfnSRUYyl2fzdlCswKpPvfGiahcresdAs0DUhH
Qr6/WCKhku2WZI3x74CVvtqwsU5CRbvKYXTcD8Bd75WpjWNEVLYzJRX6P4Gw
kYPFF1ZGdNSn7RJf2yygOmm/ZxRnRJP9Jvkp5N/gmHRt5gkZRqSX6KqnM/Mb
6P9VDkg/xIimioO4h1r/AKtgScVDkBFZJBj6POpeAFcSKVk2VoxoL4/RXG73
Igg8eysg35YRuQeZj4qdWQKhIlsWS46MSH5Cp1N5ZgnEFP9mvefNiD5tlt6y
Y14BRU3dAeUR//gF73V1rq+Csvv6ljsxjKjzix1HrdgaqDrxXlE/mRF9Hp8f
COleAy2j5T/GcxjR9QzmT7rKG2BqJdmS8pYR8ejas/epbIHHGocvj75nREJ9
7cK/ebeBXdTHBy/aGBHO6OBNvo1tMCxKaj05yPhPj1enE91wsPukj3r6EiNi
MfiU6eRBgNFZbFaeG4yIXuDgOUwjQMO5/CsIz4SWb7pj9DAG2BI6XjzFzoQ+
WIp/TSsgwtpSQ2FZKSbk4/2q+q8oEwza+k7dUfiXu35sOfuRCR7VCzvdrcKE
FntYe5SCyLB8ojLOV5sJZVmzgaxpZviMQ4JUa8+ECq74xzouskKXsw0iMc5M
6P1xl7ETDWxQ7KkNcPBkQp/iFZrjk9nhI5BwjTGICTlYcDfrHeSEyR74WeNk
JqSs93CClYkbmlemM4pkMqFhqKomFM4NuUmqB5ZymVBu82qwA3kXjE73tE5+
yYT0zQXvNvHxwFvtXz6OdzKhOGnZs3w2fFBz97W50j4mdHUFGjev8sEdB27y
rS9MiK2v4YRW0m4YsHFcQ/InE1JHWt648T3Q62BFmReRjCarfZ1/Zu+Fcr4n
ujQpZJRnX3nlmo0AnHv36xcPNxmJ6LqhiH374AWrA+KVQmRUiyOUZBcKQps7
MSl4dTIyNcqOO4IXgfy90q96NcioPl8p+5qPCBwU/NCdd5yMRJvOtjnNiEDz
ii0WfUsyqryMXwgZ2A/1p92C47zJ6PiPuHzDIVGoE3ygSMuPjLIaUqeY7cSg
Ju/IMO06GQm2W2R++i4G1bSNVM9GktFwwFfeMoIElMqTXzrwlIwS/HnnM+0O
QnHsh8hAMRnlmGoLn985CPf3PzK9W05GzreubZc9loL8JO7nv+rJ6C7+hMKx
ZWlIcVp2eTVCRm7TztoCTXKQvFWU7PyNjFa3F58dD5OHxESn5v9myQhX/gh2
7FeAm40DB66vkpGEWs2k/5wC/CVaOabDzYwUZ/sO+yQfgh1TweaDusxofLZr
NOG8MmwJUg6LMGZGV1SkFr/9UIaNPH9KqRbMiMtu8yTdSwXWaNlzZDswo/nE
UdbX91RhUa5mm2swMxKJJ1UNjanBfCp9be8tZkS6naL/NVAd5vaVSXyMYEaM
GwpXBAWoMJ0odvtQCjNqDb4qfOUCBqMcmRD9JTO6aXXg/H/cCEZs1nkWVzKj
dpPwVm1PBMMT/DLs3jGjjVdlNvodCF5v/LnxvpMZCdMUxzejNKCnaMeryB/M
yEnmm9+S5DFoPBUjLSjIghLUvG3nG3Vgh/RUn7UoC+pc8ZoWV9OFBpdVrqdJ
saAJu8LPfqW68DhhrGuPCgs6bHx9O/zJcagpLH11lynLv3tmjHK0UB++c74u
ZGbJgkYdhf6KHDKA8EV3S4w1C/Kemph3rjaAVOC3l92VBc3VP70p328Ij1g3
vSOHsiC8UY1bqbgJLM/Z46Z7lwVpXWV4Gl5vAg/NXdwVHs2CCEK7qaHyplAu
gPsCQxoLchI4P8zZbQolU+wo22UsCMiO4XBiZlCgb91iaZoF7e4Ya+rgsYCp
e412FH+xIPYgh4YFfwv43/lH+V6LLKiWhT22bsIC8i3q0Oe3WZBZygNn3zJL
yMmZ8OjHbgqaUw0ZnPOwgtGnvutJCFKQttmvfo6vVpAtS23JSZSCHH+493JY
noYscl+1vylQUNfRu4/eap+BDIZyc6N6FBR01mzlLtUahsbfTBAwpaAaxTcL
WnXWEPelDztrSUECb6UNuLVs4KZrYMygAwV9j9vk2TppC2l3Wo70BlLQ9dli
43kdezj73uFGSzEFGXIZJvO9cYBCsYNu0eUUVCEQ4P+Z+zw0tzW2MK+moOKj
cuV8l87D2rWjUhMtFGTGtLkiKuMI42S5+la/UZB+c8UAT6UT/LARXvt2loII
3knG1sIX4OaHzfywvxTEkzC0anjvArzg8COYY4eCSFeZtZG9M1RPrpOQ4GdF
MUUvb7IfcIVejke454VZUWdp8zhIcYVPFAs3X0qwIvUzpck6HG6QsyOpGxxh
RZwjvZLLhItwCucZaGnKikxdn5hdxnvASDeBT7fDWdFQwQkD7RIvWK8SV2kQ
xYoM7cciOOhekEYk53IlsKIP6FDFmo43tM9a8svIZkXKXKsPjkx6Q6W+tv2v
av7V23nKUS1+GY5i/lenFlnRC0r1h//mfCE35Y/9s3VWpHU67Wqw3lV4fNDR
wAvHhv5z9JdRK7gKX/qYCm+ysaGeMx/2f3S/BsOfSrTtOsiG2N7LzHYS/aEc
18C+Y3ZsyGj6k0lJYBCciZoJTXRiQ9ahil/SfgbBDJbV798vsqHnuavUX1bB
kJW452WkHxsSDhd2a1W/Dmdpp3UGYtmQ+2O3yYvMN2DeyKinayMbInC7OZQR
Q6H16d+91W1sKN/+hWaebijkGdhWZe/+V/+X5cUL90Nh6CchhrJRNlSQc0HA
ljcM2jecS96ksaGyFIKo1eFbUCB/uu7BQXZ02LajR/xhOOwTpYlOyrOjH3EK
p5Z+hsP72YwRSsrs6HqVntxz9TtwI1XCfEiTHQV+cv9C+3oHDka5/thvzY4U
XvM1sardg/GX5zkrotnRMFpi4OWPhPoLW77kRHY0eVaAvTogEhI82L+cSWNH
PUfbjnuNREKvC/J5O0/ZEb+GdQ1nThQ0Pu19VK+eHX22Io45Yg8gC1w5N7LE
jig+TAQB81jopyFJrthgR9L3LBdU42LhzLGzzx/gOZA/S4MOc3csbDhev6HJ
wYF+r7iXtZrGwQCzqPgCKQ5kopt8dsEqHs45iTVdPceBzJ3d81ijEuEZF6uL
pi4cqHR4tZPxcyJscbvPJXWJA82dTXvSJpIEcy/9tRkN4kDbTypwryqToLX/
W9qxFA6kEnHppvpSMuyItJDk+sSBNHd+XjkenQrVHtz9ONvPgRInFVVuT6fC
/NjqK40jHKj/v4WVbCwN3koSqb82y4FeK8PfNxbSoGAXTeYPgRO5nDlnQLfP
gANDDU0WgpzI0tY3kVnlEdSdP7O634IT8UkbrHFl58BMnrDeECtO5G4vM/Zz
OAcuqxe+GDnLiRQVJJg1eXPhowi6c5IDJ7pRbBrsez8XbkikDzJ7cSKrBZXu
teA8WOQwWrkQwYmqCnnOzQc+hYQIUpJRNCe6/9m2nrX2KbQqlfV5FsuJpJ/S
D77C5UMS7rqUYwon6ud7KpBzJx/aZgimfc7jRE3PrQLw6QWQc9AuqPYdJ7qW
5SZ3eLwQXti5Y7W3kRNNnXyrvU+qCNaIlyj5ffiXV+O/J/sWQVdf3LziR07E
uu14GbEXwwbubJu8L5yopK2a4qbzHF4xmgSRNE40Jh4vr+ZaAgcbHPFnZLjQ
n95m7s+yZXBBY5g/WJ4LFTwHXbdOl0GmehOlR4e4kGRida3v7TKoXKfmPKPK
hZ6ojV4TGSuDCdWcnT7aXCikaa/U47hyaFJek3Lflgt9fZB3wJxcAZvzeBTe
xnAhkRtf3z0Rr4RjohF6E/Fc6KrdAr3jTCVcydlxYEjmQvr9zQvKDyqh6OPZ
RL0MLmSuYve5f60Shma+o/cXcCFRshAFfKqCINn9w+8GLkTBZ8vn3635p89Q
aWuKC/2W0hm3wdfB/wNGNQwF
          "]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$186262#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 10}, {0., 0.12111460400607729`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Empirical dist.\"", "\"Estimated dist.\""}, "LineLegend",
       DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7181277709375267`*^9, 3.718127880049925*^9, 
  3.718127984911395*^9},ExpressionUUID->"72670bba-cfea-4afe-9d10-\
1dd03a033168"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindDistributionParameters", "[", 
  RowBox[{"sepalLength", ",", 
   RowBox[{"LaplaceDistribution", "[", 
    RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7181281851176796`*^9, 3.7181282081881456`*^9}, 
   3.7181282392221746`*^9},ExpressionUUID->"d17cd26d-05ff-44ab-a615-\
dc6c58ef3700"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Mu]", "\[Rule]", "5.8`"}], ",", 
   RowBox[{"\[Sigma]", "\[Rule]", "0.6846666666666669`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.71812824449488*^9, 
  3.7181870696632705`*^9},ExpressionUUID->"dd69246c-35db-466e-b764-\
3a998b2591c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ProbabilityPlot", "[", "sepalLength", "]"}]], "Input",
 CellChangeTimes->{{3.7181284894955473`*^9, 
  3.718128496771734*^9}},ExpressionUUID->"d8f6d82b-4fe2-45c0-9559-\
d2912407f7d5"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], Dashing[{0, Small}], 
      LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
       0.9999999795918367, 0.9999999795918367}}]}}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwtkW1IU1Ecxm8ayjRHERVUGLmkD0qjrIjJeAbWtBkTa8X60BJj0AdDhWJl
IdkbiZA1bJQjXLlo5BombiwdJopGXIRsleal7bqX3OudlYwWG7R72A8Oh8P/
9XnO7ubWk9o8iqJE2cPfNfNnyjQdA2jYERrtUl5HMCWw9vWac28jsNdfsXrn
NTYRnmMu45JX+YfhLL0bbXTaMHrF5LBK7ZjVn69MzYxgq8bbq78wBiWpH8ff
a9WnhvZP5uJTSE44hFcHp3NxGtutw3J19wd0vg1sq++cByomb4h8NKoIbhxq
MQ/cUn2CyV0guWRy42D+C8YS+QyxId38UfwNFoWQrXvzFdnm2Qnfkbf4p1Hb
t4hxAgOPqkl+08Cg/L36d0+5F48UbnvS4snpWUZDdEh+hGVh7+I3WgYj1v+w
XfQhk+1uSPvwYK3WXB3y49hRngDadPWPn50NYhcvvzSIsi81mUrnTxQvDLZJ
i1awcnzLk0IqhO77PCEs3UvViveF0f+UJ4wAa8vvl0VQyKspiOBhejp24HAU
LrJvFBvP1bnmhDE0EUExCJId74R0DCRdEofuJStStMTRLi3KToxjgvqn0qzF
YSm5vCR7FceMo9XTo+VwghjKoXi9yaic4nCbGM4hwuj2SEoSGCP/x0GwwXza
pEvgF0eALNyunjUmQBODE/Au7NycohNYR/Gs4j+yYBzM
       "]]}, {}, {}}}, {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{{}, 
    StyleBox[
     LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
      0.9999999795918367, 0.9999999795918367}}], 
     Directive[
      RGBColor[0.368417, 0.506779, 0.709798], 
      AbsoluteThickness[1.6], 
      Dashing[{0, Small}]], StripOnInput -> False]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{225., Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7181284982371597`*^9},ExpressionUUID->"fc8007af-9547-4b48-93bf-\
001a435e6d92"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"sepal", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"data", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"data", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7181285846895223`*^9, 
  3.7181286235652924`*^9}},ExpressionUUID->"a834ea36-51df-4535-81bb-\
cd5eac2954d6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "sepal", "]"}]], "Input",
 CellChangeTimes->{{3.718128630694295*^9, 
  3.718128637006569*^9}},ExpressionUUID->"65d12ce6-1bb2-46ac-88b5-\
e47c3d14b8bd"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJyFVe1Nw0AMDaEtLQmQtiFNrmkrZmCBzMAISPCXbZBgJtgJUvv55HdBnFRF
z/b549nnPjy/Pb3kWZa9//7G7+v51EN2PuXw+TGereLl8P01no3KV4PYb1S+
VLtaMe7fD4/nc2f2gguzBxb7teIriw//8CffG7Xb2n1g5Ct4TXinuFK/jcWd
zjfyAXuR35oe2N8vTI98PV8l3b9O6gE/yJ/5Ej+cH+tjv+Cf+WR/kk+lfhuV
V0k/kA/8w57nx8eL/UD90/WW+t2oXU59WiX23A+eB9ajH56fOF/wj/4I7s1e
vh3hPfHTWP6Cg+IFzdNC43cWD/yJ/FLlwd4H+iV2c+IjUznmHfm0Kr9Qf635
E9yQ/2D1QA9/eE+IL3bsH/Yzy8fvjzapH/asB98+30D57InfkNTv68N8z6xf
4Jsx1+v5nNt7mo5XJHz6fucJv4gPPoCRL/jhfvh66sS/71eMB+z54fmoLZ//
5pf5EnlP+cZ+4n1AL/ZHw/7/aKb3Dsm8+vx627fwP/1+5zY/zIePt0vm0e+j
QPePtm+AfX/ie8H+8O+joXk+Jnz7fgbjH/XDH/qJ+zw/qMfH60l/oPpP9P/X
/TEPMR7qRz3T81CYP79POd+4b/l9sZ7nEf32/DB/vF/ifprud0v5x/37Ay83
CWU=
      "]]}, {}}, {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{4.2437499999999995`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{222., Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{4.3, 7.9}, {0, 4.4}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7181286380700865`*^9},ExpressionUUID->"d63d7876-82d1-4632-85a9-\
5303aef25014"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"species", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "2"}], "]"}], "]"}], ")"}], "&"}], ",", 
     RowBox[{"Values", "[", 
      RowBox[{"GroupBy", "[", 
       RowBox[{"sepal", ",", "Last"}], "]"}], "]"}], ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7181287743003745`*^9, 
  3.718128860811823*^9}},ExpressionUUID->"0a9cc51f-be1d-4b63-9cf3-\
a80cf665aed7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"species", ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"ColorData", "[", "3", "]"}], "[", "4", "]"}], ",", 
      RowBox[{
       RowBox[{"ColorData", "[", "3", "]"}], "[", "9", "]"}], ",", 
      RowBox[{
       RowBox[{"ColorData", "[", "3", "]"}], "[", "6", "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Setosa\>\"", ",", "\"\<Versicolor\>\"", ",", "\"\<Virginica\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.718128866257918*^9, 
  3.7181289917298746`*^9}},ExpressionUUID->"3d98a3d5-c24f-4977-ab5d-\
660a6f060135"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]], 
        PointBox[{{5.1, 3.5}, {5.1, 3.5}, {5.2, 3.5}, {5.5, 3.5}, {5., 3.5}, {
         5., 3.5}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQPWsmCAg7MIABh4MxGKDzBeF8CC0C50P0C+LUD5EX
h/PTwEAMjS8F5589AwJSaPpFCeiXQNOPLi+D5n4pNHk5NPdLE1CPbp8MGl8O
TT+6eik0eXT/IsILAJ1iUWM=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.00784313725490196, 0.5098039215686274, 0.9294117647058824]], 
        PointBox[{{4.7, 3.2}, {4.7, 3.2}, {5., 3.2}, {4.4, 3.2}, {4.6, 3.2}, {
         7., 3.2}, {6.4, 3.2}, {5.9, 3.2}, {6.5, 3.2}, {6.4, 3.2}, {6.9, 
         3.2}, {7.2, 3.2}, {6.8, 3.2}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]], 
        PointBox[{{4.6, 3.1}, {4.9, 3.1}, {4.8, 3.1}, {4.9, 3.1}, {4.9, 
         3.1}, {6.9, 3.1}, {6.7, 3.1}, {6.7, 3.1}, {6.4, 3.1}, {6.9, 3.1}, {
         6.7, 3.1}, {6.9, 3.1}}]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`]], 
        PointBox[{{5., 3.6}, {4.6, 3.6}, {7.2, 3.6}}]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.00784313725490196, 0.5098039215686274, 0.9294117647058824]], 
        PointBox[{{5.4, 3.9}, {5.4, 3.9}}]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]], 
        PointBox[{{4.6, 3.4}, {5., 3.4}, {4.8, 3.4}, {5.4, 3.4}, {4.8, 3.4}, {
         5., 3.4}, {5.2, 3.4}, {5.4, 3.4}, {5.1, 3.4}, {6., 3.4}, {6.3, 
         3.4}, {6.2, 3.4}}]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`]], 
        PointBox[{{4.4, 2.9}, {6.6, 2.9}, {6.1, 2.9}, {5.6, 2.9}, {6.4, 
         2.9}, {6., 2.9}, {5.7, 2.9}, {6.2, 2.9}, {6.3, 2.9}, {7.3, 2.9}}]}, {
        Hue[0.5585438199983166, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.00784313725490196, 0.5098039215686274, 0.9294117647058824]], 
        PointBox[{{5.4, 3.7}, {5.1, 3.7}, {5.3, 3.7}}]}, {
        Hue[0.7946117974981064, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]], 
        PointBox[{{5.8, 4.}, {5.8, 4.}}]}, {
        Hue[0.030679774997896203`, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`]], 
        PointBox[{{5.7, 4.4}, {5.7, 4.4}}]}, {
        Hue[0.266747752497686, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.00784313725490196, 0.5098039215686274, 0.9294117647058824]], 
        PointBox[{{5.7, 3.8}, {5.1, 3.8}, {5.1, 3.8}, {5.1, 3.8}, {7.7, 
         3.8}, {7.9, 3.8}}]}, {
        Hue[0.5028157299974758, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]], 
        PointBox[{{5.1, 3.3}, {5., 3.3}, {6.3, 3.3}, {6.3, 3.3}, {6.7, 3.3}, {
         6.7, 3.3}}]}, {
        Hue[0.7388837074972656, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`]], 
        PointBox[{{5.2, 4.1}, {5.2, 4.1}}]}, {
        Hue[0.9749516849970554, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.00784313725490196, 0.5098039215686274, 0.9294117647058824]], 
        PointBox[{{5.5, 4.2}, {5.5, 4.2}}]}, {
        Hue[0.21101966249684523`, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]], 
        PointBox[{{4.5, 2.3}, {5.5, 2.3}, {6.3, 2.3}, {5., 2.3}}]}, {
        Hue[0.44708763999663503`, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`]], 
        PointBox[{{6.5, 2.8}, {5.7, 2.8}, {6.1, 2.8}, {6.1, 2.8}, {6.8, 
         2.8}, {5.7, 2.8}, {5.8, 2.8}, {5.6, 2.8}, {7.7, 2.8}, {6.2, 2.8}, {
         6.4, 2.8}, {7.4, 2.8}, {6.4, 2.8}, {6.3, 2.8}}]}, {
        Hue[0.6831556174964248, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.00784313725490196, 0.5098039215686274, 0.9294117647058824]], 
        PointBox[{{4.9, 2.4}, {5.5, 2.4}, {5.5, 2.4}}]}, {
        Hue[0.9192235949962146, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]], 
        PointBox[{{5.2, 2.7}, {5.8, 2.7}, {5.8, 2.7}, {6., 2.7}, {5.6, 2.7}, {
         5.8, 2.7}, {6.4, 2.7}, {6.3, 2.7}, {5.8, 2.7}}]}, {
        Hue[0.15529157249600445`, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`]], 
        PointBox[{{5., 2.}, {5., 2.}}]}, {
        Hue[0.39135954999579425`, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.00784313725490196, 0.5098039215686274, 0.9294117647058824]], 
        PointBox[{{6., 2.2}, {6.2, 2.2}, {6., 2.2}}]}, {
        Hue[0.6274275274955841, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]], 
        PointBox[{{5.6, 2.5}, {6.3, 2.5}, {5.5, 2.5}, {5.1, 2.5}, {4.9, 
         2.5}, {6.7, 2.5}, {5.7, 2.5}, {6.3, 2.5}}]}, {
        Hue[0.8634955049953739, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`]], 
        PointBox[{{5.7, 2.6}, {5.5, 2.6}, {5.8, 2.6}, {7.7, 2.6}, {6.1, 
         2.6}}]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {4.2437499999999995`, 0}, 
     PlotRange -> {{4.3, 7.9}, {0, 4.4}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {4.2437499999999995`, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{4.3, 7.9}, {0, 4.4}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Setosa\"", "\"Versicolor\"", "\"Virginica\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3607843137254902, 0.4758169934640523, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5934640522875817, 0.00784313725490196, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.005228758169934641, 0.33986928104575165`, 
                    0.6196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3607843137254902, 0.4758169934640523, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5934640522875817, 0.00784313725490196, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.005228758169934641, 0.33986928104575165`, 
                    0.6196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3607843137254902, 0.4758169934640523, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5934640522875817, 0.00784313725490196, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.005228758169934641, 0.33986928104575165`, 
                    0.6196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3607843137254902, 0.4758169934640523, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5934640522875817, 0.00784313725490196, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.005228758169934641, 0.33986928104575165`, 
                    0.6196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3607843137254902, 0.4758169934640523, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5934640522875817, 0.00784313725490196, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.005228758169934641, 0.33986928104575165`, 
                    0.6196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3607843137254902, 0.4758169934640523, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5934640522875817, 0.00784313725490196, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.005228758169934641, 0.33986928104575165`, 
                    0.6196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3607843137254902, 0.4758169934640523, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5934640522875817, 0.00784313725490196, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.005228758169934641, 0.33986928104575165`, 
                    0.6196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3607843137254902, 0.4758169934640523, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5934640522875817, 0.00784313725490196, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.718128995435532*^9},ExpressionUUID->"6bf50cef-d840-4a96-afa8-\
c048165f4366"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"clusters", "=", 
   RowBox[{"FindClusters", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"species", ",", "1"}], "]"}], ",", "3"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.71812909250329*^9, 
  3.7181291282978225`*^9}},ExpressionUUID->"a3650776-3f84-46c2-b88e-\
539345f175e3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"clusters", ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"ColorData", "[", "3", "]"}], "[", "4", "]"}], ",", 
      RowBox[{
       RowBox[{"ColorData", "[", "3", "]"}], "[", "9", "]"}], ",", 
      RowBox[{
       RowBox[{"ColorData", "[", "3", "]"}], "[", "6", "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Clust 1\>\"", ",", "\"\<Clust 2\>\"", ",", "\"\<Clust 3\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7181291473193865`*^9, 
  3.7181291826682053`*^9}},ExpressionUUID->"d087a13d-8e21-4bcc-b543-\
bfc577856194"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]], 
        PointBox[CompressedData["
1:eJydksENwjAMRSMuBCiQFlrOjIBYIDMwAhJcmQdmgp0g+f6u4qgXLFXRq/2/
7TbH6+NymznnTr8nnfcc++hyNNHy551iZJyDYZsf+fVMsRP28ZzDcqtc6r3o
20k95uukblEx/cj0I2PfrmL4eJ2fzP5TecvsD26MP79PL77bilkPXqkfmfOQ
S32dt3r+3yk970OZb4XnWo9zrfVk1PWGDzJHkP6D+pLhs1G//3ip+5K5Lzjo
fcb7EL/bivjC
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`]], 
        PointBox[CompressedData["
1:eJx1kt0NwjAMhEP56zOENOGtM3SBzMAISPDKPDAT7EQT51z1JFuqrK9nn50o
4/11e3TOuWn+Sv68SwzZ1ejzs0ZQFv1i6r9viYUlR+pn/5inGkf1A6MfDP+1
fmp9XeOgLHWJdK8MP+GD7mMx14v/QPWB6iPVJ2W5j3P7v9X9LRY/3/r2Ot9i
3B8Y+1n1khPpzOzvW3Y0b6PnB7O+fj87nQfG+cFS75Vxf2CZdyW2/aFLXuaB
cV4w3gP4D6Sq8PU=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.00784313725490196, 0.5098039215686274, 0.9294117647058824]], 
        PointBox[CompressedData["
1:eJyFkdsNwjAMRSOEWmgRv/SRBrECLJAZGAEJfpkHZoKdILGvoxgClqqrI1+/
mt3pejzPjDH79xf0EmPwJsbCPx8hElO+U2yFSbXfCR9ijH/8qT/Nt4qd4qHY
j9T6+y3EkrVXvBFG/W//KIz9wLhP+8mX9i0x5uVcrv+et6wrvqfjvVrWXph8
KY/3J65lH3Dur1U/8KT8jvuuud9WGPXEzQfj3hLjvYgr+f/gfH4l9+Q8FfOo
J537F9W3Iuw=
         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {4.2437499999999995`, 0}, 
     PlotRange -> {{4.3, 7.9}, {0, 4.4}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {4.2437499999999995`, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{4.3, 7.9}, {0, 4.4}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Clust 1\"", "\"Clust 2\"", "\"Clust 3\""}, "PointLegend",
       DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3607843137254902, 0.4758169934640523, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5934640522875817, 0.00784313725490196, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.005228758169934641, 0.33986928104575165`, 
                    0.6196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7181292441867895`*^9},ExpressionUUID->"380491b5-fb49-468f-808d-\
9f6e4710b2eb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"classificationMap", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "2"}], "]"}], "]"}], "\[Rule]", " ", 
          RowBox[{"#", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "&"}], ",", 
       RowBox[{"Values", "[", 
        RowBox[{"GroupBy", "[", 
         RowBox[{"sepal", ",", "Last"}], "]"}], "]"}], ",", 
       RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"classify", " ", "=", " ", 
  RowBox[{"Classify", "[", "classificationMap", "]"}]}]}], "Input",
 CellChangeTimes->{{3.718129253083591*^9, 3.7181293837021985`*^9}, {
  3.718129426770136*^9, 3.7181294469148655`*^9}, {3.718129556453291*^9, 
  3.718129567123461*^9}, {3.7181872311687064`*^9, 3.7181872485325565`*^9}, {
  3.718187300983898*^9, 
  3.7181873218485956`*^9}},ExpressionUUID->"4d491a3d-caaa-412a-8d3d-\
bffccbc60101"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"3\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"5.1`\\\", \\\",\\\", \\\"3.5`\\\"}], \\\"}\\\"}]\\) does not \
exist.\"",2,13,6,32403703234369118662,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7181873272251863`*^9, 
  3.718187443399699*^9},ExpressionUUID->"d489a94a-2749-490c-8aaf-\
d382ccafe4e2"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"3\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"5.1`\\\", \\\",\\\", \\\"3.5`\\\"}], \\\"}\\\"}]\\) does not \
exist.\"",2,13,7,32403703234369118662,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7181873272251863`*^9, 
  3.718187443415327*^9},ExpressionUUID->"31108edf-7d02-43d7-a2cb-\
4480c6073a87"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"3\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"5.2`\\\", \\\",\\\", \\\"3.5`\\\"}], \\\"}\\\"}]\\) does not \
exist.\"",2,13,8,32403703234369118662,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7181873272251863`*^9, 
  3.718187443415327*^9},ExpressionUUID->"681f8c86-3f4e-4ed7-a325-\
f79999364f6f"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,13,9,32403703234369118662,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7181873272251863`*^9, 
  3.7181874434465795`*^9},ExpressionUUID->"48f1f296-6399-4428-be78-\
c45ccc8fa9df"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "2", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of classes: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox["116", 
                    TagBox[
                    TemplateBox[{",", "\",\"", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4.3`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4.4`", ",", "2.9`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4.4`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4.4`", ",", "3.2`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4.5`", ",", "2.3`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4.6`", ",", "3.1`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4.6`", ",", "3.2`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4.6`", ",", "3.4`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4.6`", ",", "3.6`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4.7`", ",", "3.2`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4.8`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4.8`", ",", "3.1`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4.8`", ",", "3.4`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4.9`", ",", "2.4`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4.9`", ",", "2.5`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4.9`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4.9`", ",", "3.1`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.`", ",", "2.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.`", ",", "2.3`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.`", ",", "3.2`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.`", ",", "3.3`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.`", ",", "3.4`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.`", ",", "3.5`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.`", ",", "3.6`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.1`", ",", "2.5`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.1`", ",", "3.3`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.1`", ",", "3.4`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.1`", ",", "3.5`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.1`", ",", "3.7`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.1`", ",", "3.8`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.2`", ",", "2.7`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.2`", ",", "3.4`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.2`", ",", "3.5`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.2`", ",", "4.1`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.3`", ",", "3.7`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.4`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.4`", ",", "3.4`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.4`", ",", "3.7`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.4`", ",", "3.9`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.5`", ",", "2.3`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.5`", ",", "2.4`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.5`", ",", "2.5`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.5`", ",", "2.6`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.5`", ",", "3.5`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.5`", ",", "4.2`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.6`", ",", "2.5`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.6`", ",", "2.7`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.6`", ",", "2.8`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.6`", ",", "2.9`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.6`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.7`", ",", "2.5`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.7`", ",", "2.6`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.7`", ",", "2.8`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.7`", ",", "2.9`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.7`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.7`", ",", "3.8`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.7`", ",", "4.4`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.8`", ",", "2.6`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.8`", ",", "2.7`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.8`", ",", "2.8`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.8`", ",", "4.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.9`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.9`", ",", "3.2`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.`", ",", "2.2`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.`", ",", "2.7`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.`", ",", "2.9`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.`", ",", "3.4`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.1`", ",", "2.6`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.1`", ",", "2.8`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.1`", ",", "2.9`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.1`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.2`", ",", "2.2`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.2`", ",", "2.8`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.2`", ",", "2.9`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.2`", ",", "3.4`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.3`", ",", "2.3`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.3`", ",", "2.5`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.3`", ",", "2.7`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.3`", ",", "2.8`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.3`", ",", "2.9`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.3`", ",", "3.3`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.3`", ",", "3.4`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.4`", ",", "2.7`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.4`", ",", "2.8`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.4`", ",", "2.9`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.4`", ",", "3.1`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.4`", ",", "3.2`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.5`", ",", "2.8`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.5`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.5`", ",", "3.2`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.6`", ",", "2.9`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.6`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.7`", ",", "2.5`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.7`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.7`", ",", "3.1`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.7`", ",", "3.3`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.8`", ",", "2.8`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.8`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.8`", ",", "3.2`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.9`", ",", "3.1`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.9`", ",", "3.2`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"7.`", ",", "3.2`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"7.1`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"7.2`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"7.2`", ",", "3.2`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"7.2`", ",", "3.6`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"7.3`", ",", "2.9`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"7.4`", ",", "2.8`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"7.6`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"7.7`", ",", "2.6`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"7.7`", ",", "2.8`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"7.7`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"7.7`", ",", "3.8`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"7.9`", ",", "3.8`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}, 
                    "RowWithSeparators"], Short[#, 20]& ]], Annotation[#, 
                    Short[
                    Row[{
                    Part[{4.3, 3.}, 3], 
                    Part[{4.4, 2.9}, 3], 
                    Part[{4.4, 3.}, 3], 
                    Part[{4.4, 3.2}, 3], 
                    Part[{4.5, 2.3}, 3], 
                    Part[{4.6, 3.1}, 3], 
                    Part[{4.6, 3.2}, 3], 
                    Part[{4.6, 3.4}, 3], 
                    Part[{4.6, 3.6}, 3], 
                    Part[{4.7, 3.2}, 3], 
                    Part[{4.8, 3.}, 3], 
                    Part[{4.8, 3.1}, 3], 
                    Part[{4.8, 3.4}, 3], 
                    Part[{4.9, 2.4}, 3], 
                    Part[{4.9, 2.5}, 3], 
                    Part[{4.9, 3.}, 3], 
                    Part[{4.9, 3.1}, 3], 
                    Part[{5., 2.}, 3], 
                    Part[{5., 2.3}, 3], 
                    Part[{5., 3.}, 3], 
                    Part[{5., 3.2}, 3], 
                    Part[{5., 3.3}, 3], 
                    Part[{5., 3.4}, 3], 
                    Part[{5., 3.5}, 3], 
                    Part[{5., 3.6}, 3], 
                    Part[{5.1, 2.5}, 3], 
                    Part[{5.1, 3.3}, 3], 
                    Part[{5.1, 3.4}, 3], 
                    Part[{5.1, 3.5}, 3], 
                    Part[{5.1, 3.7}, 3], 
                    Part[{5.1, 3.8}, 3], 
                    Part[{5.2, 2.7}, 3], 
                    Part[{5.2, 3.4}, 3], 
                    Part[{5.2, 3.5}, 3], 
                    Part[{5.2, 4.1}, 3], 
                    Part[{5.3, 3.7}, 3], 
                    Part[{5.4, 3.}, 3], 
                    Part[{5.4, 3.4}, 3], 
                    Part[{5.4, 3.7}, 3], 
                    Part[{5.4, 3.9}, 3], 
                    Part[{5.5, 2.3}, 3], 
                    Part[{5.5, 2.4}, 3], 
                    Part[{5.5, 2.5}, 3], 
                    Part[{5.5, 2.6}, 3], 
                    Part[{5.5, 3.5}, 3], 
                    Part[{5.5, 4.2}, 3], 
                    Part[{5.6, 2.5}, 3], 
                    Part[{5.6, 2.7}, 3], 
                    Part[{5.6, 2.8}, 3], 
                    Part[{5.6, 2.9}, 3], 
                    Part[{5.6, 3.}, 3], 
                    Part[{5.7, 2.5}, 3], 
                    Part[{5.7, 2.6}, 3], 
                    Part[{5.7, 2.8}, 3], 
                    Part[{5.7, 2.9}, 3], 
                    Part[{5.7, 3.}, 3], 
                    Part[{5.7, 3.8}, 3], 
                    Part[{5.7, 4.4}, 3], 
                    Part[{5.8, 2.6}, 3], 
                    Part[{5.8, 2.7}, 3], 
                    Part[{5.8, 2.8}, 3], 
                    Part[{5.8, 4.}, 3], 
                    Part[{5.9, 3.}, 3], 
                    Part[{5.9, 3.2}, 3], 
                    Part[{6., 2.2}, 3], 
                    Part[{6., 2.7}, 3], 
                    Part[{6., 2.9}, 3], 
                    Part[{6., 3.}, 3], 
                    Part[{6., 3.4}, 3], 
                    Part[{6.1, 2.6}, 3], 
                    Part[{6.1, 2.8}, 3], 
                    Part[{6.1, 2.9}, 3], 
                    Part[{6.1, 3.}, 3], 
                    Part[{6.2, 2.2}, 3], 
                    Part[{6.2, 2.8}, 3], 
                    Part[{6.2, 2.9}, 3], 
                    Part[{6.2, 3.4}, 3], 
                    Part[{6.3, 2.3}, 3], 
                    Part[{6.3, 2.5}, 3], 
                    Part[{6.3, 2.7}, 3], 
                    Part[{6.3, 2.8}, 3], 
                    Part[{6.3, 2.9}, 3], 
                    Part[{6.3, 3.3}, 3], 
                    Part[{6.3, 3.4}, 3], 
                    Part[{6.4, 2.7}, 3], 
                    Part[{6.4, 2.8}, 3], 
                    Part[{6.4, 2.9}, 3], 
                    Part[{6.4, 3.1}, 3], 
                    Part[{6.4, 3.2}, 3], 
                    Part[{6.5, 2.8}, 3], 
                    Part[{6.5, 3.}, 3], 
                    Part[{6.5, 3.2}, 3], 
                    Part[{6.6, 2.9}, 3], 
                    Part[{6.6, 3.}, 3], 
                    Part[{6.7, 2.5}, 3], 
                    Part[{6.7, 3.}, 3], 
                    Part[{6.7, 3.1}, 3], 
                    Part[{6.7, 3.3}, 3], 
                    Part[{6.8, 2.8}, 3], 
                    Part[{6.8, 3.}, 3], 
                    Part[{6.8, 3.2}, 3], 
                    Part[{6.9, 3.1}, 3], 
                    Part[{6.9, 3.2}, 3], 
                    Part[{7., 3.2}, 3], 
                    Part[{7.1, 3.}, 3], 
                    Part[{7.2, 3.}, 3], 
                    Part[{7.2, 3.2}, 3], 
                    Part[{7.2, 3.6}, 3], 
                    Part[{7.3, 2.9}, 3], 
                    Part[{7.4, 2.8}, 3], 
                    Part[{7.6, 3.}, 3], 
                    Part[{7.7, 2.6}, 3], 
                    Part[{7.7, 2.8}, 3], 
                    Part[{7.7, 3.}, 3], 
                    Part[{7.7, 3.8}, 3], 
                    Part[{7.9, 3.8}, 3]}, ","], 20], "Tooltip"]& ], 
                    "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "2", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of classes: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox["116", 
                    TagBox[
                    TemplateBox[{",", "\",\"", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4.3`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4.4`", ",", "2.9`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4.4`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4.4`", ",", "3.2`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4.5`", ",", "2.3`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4.6`", ",", "3.1`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4.6`", ",", "3.2`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4.6`", ",", "3.4`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4.6`", ",", "3.6`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4.7`", ",", "3.2`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4.8`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4.8`", ",", "3.1`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4.8`", ",", "3.4`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4.9`", ",", "2.4`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4.9`", ",", "2.5`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4.9`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4.9`", ",", "3.1`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.`", ",", "2.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.`", ",", "2.3`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.`", ",", "3.2`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.`", ",", "3.3`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.`", ",", "3.4`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.`", ",", "3.5`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.`", ",", "3.6`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.1`", ",", "2.5`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.1`", ",", "3.3`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.1`", ",", "3.4`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.1`", ",", "3.5`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.1`", ",", "3.7`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.1`", ",", "3.8`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.2`", ",", "2.7`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.2`", ",", "3.4`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.2`", ",", "3.5`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.2`", ",", "4.1`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.3`", ",", "3.7`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.4`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.4`", ",", "3.4`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.4`", ",", "3.7`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.4`", ",", "3.9`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.5`", ",", "2.3`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.5`", ",", "2.4`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.5`", ",", "2.5`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.5`", ",", "2.6`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.5`", ",", "3.5`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.5`", ",", "4.2`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.6`", ",", "2.5`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.6`", ",", "2.7`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.6`", ",", "2.8`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.6`", ",", "2.9`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.6`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.7`", ",", "2.5`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.7`", ",", "2.6`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.7`", ",", "2.8`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.7`", ",", "2.9`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.7`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.7`", ",", "3.8`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.7`", ",", "4.4`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.8`", ",", "2.6`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.8`", ",", "2.7`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.8`", ",", "2.8`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.8`", ",", "4.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.9`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5.9`", ",", "3.2`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.`", ",", "2.2`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.`", ",", "2.7`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.`", ",", "2.9`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.`", ",", "3.4`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.1`", ",", "2.6`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.1`", ",", "2.8`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.1`", ",", "2.9`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.1`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.2`", ",", "2.2`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.2`", ",", "2.8`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.2`", ",", "2.9`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.2`", ",", "3.4`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.3`", ",", "2.3`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.3`", ",", "2.5`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.3`", ",", "2.7`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.3`", ",", "2.8`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.3`", ",", "2.9`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.3`", ",", "3.3`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.3`", ",", "3.4`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.4`", ",", "2.7`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.4`", ",", "2.8`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.4`", ",", "2.9`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.4`", ",", "3.1`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.4`", ",", "3.2`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.5`", ",", "2.8`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.5`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.5`", ",", "3.2`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.6`", ",", "2.9`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.6`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.7`", ",", "2.5`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.7`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.7`", ",", "3.1`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.7`", ",", "3.3`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.8`", ",", "2.8`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.8`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.8`", ",", "3.2`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.9`", ",", "3.1`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6.9`", ",", "3.2`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"7.`", ",", "3.2`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"7.1`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"7.2`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"7.2`", ",", "3.2`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"7.2`", ",", "3.6`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"7.3`", ",", "2.9`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"7.4`", ",", "2.8`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"7.6`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"7.7`", ",", "2.6`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"7.7`", ",", "2.8`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"7.7`", ",", "3.`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"7.7`", ",", "3.8`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"7.9`", ",", "3.8`"}], "}"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}, 
                    "RowWithSeparators"], Short[#, 20]& ]], Annotation[#, 
                    Short[
                    Row[{
                    Part[{4.3, 3.}, 3], 
                    Part[{4.4, 2.9}, 3], 
                    Part[{4.4, 3.}, 3], 
                    Part[{4.4, 3.2}, 3], 
                    Part[{4.5, 2.3}, 3], 
                    Part[{4.6, 3.1}, 3], 
                    Part[{4.6, 3.2}, 3], 
                    Part[{4.6, 3.4}, 3], 
                    Part[{4.6, 3.6}, 3], 
                    Part[{4.7, 3.2}, 3], 
                    Part[{4.8, 3.}, 3], 
                    Part[{4.8, 3.1}, 3], 
                    Part[{4.8, 3.4}, 3], 
                    Part[{4.9, 2.4}, 3], 
                    Part[{4.9, 2.5}, 3], 
                    Part[{4.9, 3.}, 3], 
                    Part[{4.9, 3.1}, 3], 
                    Part[{5., 2.}, 3], 
                    Part[{5., 2.3}, 3], 
                    Part[{5., 3.}, 3], 
                    Part[{5., 3.2}, 3], 
                    Part[{5., 3.3}, 3], 
                    Part[{5., 3.4}, 3], 
                    Part[{5., 3.5}, 3], 
                    Part[{5., 3.6}, 3], 
                    Part[{5.1, 2.5}, 3], 
                    Part[{5.1, 3.3}, 3], 
                    Part[{5.1, 3.4}, 3], 
                    Part[{5.1, 3.5}, 3], 
                    Part[{5.1, 3.7}, 3], 
                    Part[{5.1, 3.8}, 3], 
                    Part[{5.2, 2.7}, 3], 
                    Part[{5.2, 3.4}, 3], 
                    Part[{5.2, 3.5}, 3], 
                    Part[{5.2, 4.1}, 3], 
                    Part[{5.3, 3.7}, 3], 
                    Part[{5.4, 3.}, 3], 
                    Part[{5.4, 3.4}, 3], 
                    Part[{5.4, 3.7}, 3], 
                    Part[{5.4, 3.9}, 3], 
                    Part[{5.5, 2.3}, 3], 
                    Part[{5.5, 2.4}, 3], 
                    Part[{5.5, 2.5}, 3], 
                    Part[{5.5, 2.6}, 3], 
                    Part[{5.5, 3.5}, 3], 
                    Part[{5.5, 4.2}, 3], 
                    Part[{5.6, 2.5}, 3], 
                    Part[{5.6, 2.7}, 3], 
                    Part[{5.6, 2.8}, 3], 
                    Part[{5.6, 2.9}, 3], 
                    Part[{5.6, 3.}, 3], 
                    Part[{5.7, 2.5}, 3], 
                    Part[{5.7, 2.6}, 3], 
                    Part[{5.7, 2.8}, 3], 
                    Part[{5.7, 2.9}, 3], 
                    Part[{5.7, 3.}, 3], 
                    Part[{5.7, 3.8}, 3], 
                    Part[{5.7, 4.4}, 3], 
                    Part[{5.8, 2.6}, 3], 
                    Part[{5.8, 2.7}, 3], 
                    Part[{5.8, 2.8}, 3], 
                    Part[{5.8, 4.}, 3], 
                    Part[{5.9, 3.}, 3], 
                    Part[{5.9, 3.2}, 3], 
                    Part[{6., 2.2}, 3], 
                    Part[{6., 2.7}, 3], 
                    Part[{6., 2.9}, 3], 
                    Part[{6., 3.}, 3], 
                    Part[{6., 3.4}, 3], 
                    Part[{6.1, 2.6}, 3], 
                    Part[{6.1, 2.8}, 3], 
                    Part[{6.1, 2.9}, 3], 
                    Part[{6.1, 3.}, 3], 
                    Part[{6.2, 2.2}, 3], 
                    Part[{6.2, 2.8}, 3], 
                    Part[{6.2, 2.9}, 3], 
                    Part[{6.2, 3.4}, 3], 
                    Part[{6.3, 2.3}, 3], 
                    Part[{6.3, 2.5}, 3], 
                    Part[{6.3, 2.7}, 3], 
                    Part[{6.3, 2.8}, 3], 
                    Part[{6.3, 2.9}, 3], 
                    Part[{6.3, 3.3}, 3], 
                    Part[{6.3, 3.4}, 3], 
                    Part[{6.4, 2.7}, 3], 
                    Part[{6.4, 2.8}, 3], 
                    Part[{6.4, 2.9}, 3], 
                    Part[{6.4, 3.1}, 3], 
                    Part[{6.4, 3.2}, 3], 
                    Part[{6.5, 2.8}, 3], 
                    Part[{6.5, 3.}, 3], 
                    Part[{6.5, 3.2}, 3], 
                    Part[{6.6, 2.9}, 3], 
                    Part[{6.6, 3.}, 3], 
                    Part[{6.7, 2.5}, 3], 
                    Part[{6.7, 3.}, 3], 
                    Part[{6.7, 3.1}, 3], 
                    Part[{6.7, 3.3}, 3], 
                    Part[{6.8, 2.8}, 3], 
                    Part[{6.8, 3.}, 3], 
                    Part[{6.8, 3.2}, 3], 
                    Part[{6.9, 3.1}, 3], 
                    Part[{6.9, 3.2}, 3], 
                    Part[{7., 3.2}, 3], 
                    Part[{7.1, 3.}, 3], 
                    Part[{7.2, 3.}, 3], 
                    Part[{7.2, 3.2}, 3], 
                    Part[{7.2, 3.6}, 3], 
                    Part[{7.3, 2.9}, 3], 
                    Part[{7.4, 2.8}, 3], 
                    Part[{7.6, 3.}, 3], 
                    Part[{7.7, 2.6}, 3], 
                    Part[{7.7, 2.8}, 3], 
                    Part[{7.7, 3.}, 3], 
                    Part[{7.7, 3.8}, 3], 
                    Part[{7.9, 3.8}, 3]}, ","], 20], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"NaiveBayes\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["150", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7181873293586826`*^9, 
  3.7181874438849688`*^9},ExpressionUUID->"10180b58-f6ef-4f19-a281-\
e150ced2a7ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classify", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"5", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"6.2", ",", "3"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.718187468273966*^9, 
  3.718187516969263*^9}},ExpressionUUID->"252ad8f6-584c-451f-85d7-\
099af7f35d56"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"5.1`", ",", "3.8`"}], "}"}], "\[LeftDoubleBracket]", "3", 
    "\[RightDoubleBracket]"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"6.1`", ",", "3.`"}], "}"}], "\[LeftDoubleBracket]", "3", 
    "\[RightDoubleBracket]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7181875218761296`*^9},ExpressionUUID->"8f09d34f-4de1-449d-bd6b-\
2e1625f3b42b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"predictMap", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "\[Rule]", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "&"}], ",", 
       RowBox[{"Values", "[", 
        RowBox[{"GroupBy", "[", 
         RowBox[{"sepal", ",", "Last"}], "]"}], "]"}], ",", 
       RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"predict", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{"predictMap", ",", 
    RowBox[{"NominalVariables", "\[Rule]", 
     RowBox[{"{", "2", "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.718187618011619*^9, 
  3.718187747345808*^9}},ExpressionUUID->"e8ce3475-f3cd-47b0-b7dd-\
3904b10c7764"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"3\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"5.1`\\\", \\\",\\\", \\\"3.5`\\\"}], \\\"}\\\"}]\\) does not \
exist.\"",2,16,10,32403703234369118662,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7181877515376096`*^9},ExpressionUUID->"ad56b1f6-a9d9-4416-9d54-\
4716bf25657a"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"3\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"5.1`\\\", \\\",\\\", \\\"3.5`\\\"}], \\\"}\\\"}]\\) does not \
exist.\"",2,16,11,32403703234369118662,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7181877515376096`*^9},ExpressionUUID->"b45e5a16-2bcb-4c45-9714-\
c891a4e8eb12"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"3\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"5.2`\\\", \\\",\\\", \\\"3.5`\\\"}], \\\"}\\\"}]\\) does not \
exist.\"",2,16,12,32403703234369118662,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.718187751553236*^9},ExpressionUUID->"bea3cd6c-2539-42bf-93c8-\
6de9b4953646"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,16,13,32403703234369118662,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7181877515758853`*^9},ExpressionUUID->"8440237c-3162-4a0f-a8ad-\
d5b27167a329"],

Cell[BoxData[
 TemplateBox[{
  "Predict","mlnomvar",
   "\"Inactive option NominalVariables. Use FeatureTypes instead.\"",2,17,14,
   32403703234369118662,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7181877516071415`*^9},ExpressionUUID->"42cdfc30-6055-497e-8eba-\
c8dddd73f4fb"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{}, {{}, {
                  PointSize[0.125], 
                  GrayLevel[0.55], 
                  
                  PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                    4, 4.}}]}, {
                  GrayLevel[0.7], 
                  AbsoluteThickness[1.5], 
                  
                  BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                   5, 4}}]}}, {}}, Axes -> {False, False}, 
               AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
               BaseStyle -> {FontFamily -> "Arial", 
                 AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {All, All}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
               Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"LinearRegression\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{}, {{}, {
                  PointSize[0.125], 
                  GrayLevel[0.55], 
                  
                  PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                    4, 4.}}]}, {
                  GrayLevel[0.7], 
                  AbsoluteThickness[1.5], 
                  
                  BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                   5, 4}}]}}, {}}, Axes -> {False, False}, 
               AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
               BaseStyle -> {FontFamily -> "Arial", 
                 AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {All, All}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
               Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["150", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7181877525272164`*^9},ExpressionUUID->"7bb38a1c-c197-45bd-9a6a-\
38d5dd2eedf5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"predict", "[", 
  RowBox[{"{", 
   RowBox[{"4.5", ",", "\"\<Iris-setosa\>\""}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7181877647502394`*^9, 
  3.7181877960173707`*^9}},ExpressionUUID->"e3dc0a57-a065-47c6-9355-\
057214bc416a"],

Cell[BoxData["3.091990288395983`"], "Output",
 CellChangeTimes->{
  3.7181878043448706`*^9},ExpressionUUID->"947da92c-79ec-41ef-b9a5-\
204cf47c9cac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"predict", "[", 
    RowBox[{"{", 
     RowBox[{"x", ",", "\"\<Iris-setosa\>\""}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "4", ",", "6"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7181878334606156`*^9, 
  3.7181878791252413`*^9}},ExpressionUUID->"cb8ed7cf-5f48-4cb0-8fe5-\
a8c3af094468"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV03s01GkYB/CJzb6o5jfXX2tr0WWz3TtqS0nfJqGV6aTiaKeLFJXpMnSR
LWJdaqTkmCHRum2FbJe1LjHMTMJGklsmtbE0UUpHtrYL7bt/POc5n3+e85zn
fB/bbfs8d5hwOBwPWv93q0Ua2hhwlVmyXQaCpuMfGzKoLWqblm2lVv7pcH75
KAZmZqaTvak/bCyy/9mEwUiEX58zteHY1e1moxm8PDLlkA11yq3M6jEWDOp2
XTzzoJ1AtCZG+ZWQwYlVefqV1Iz/Gr69HYNR5jfsJj0g2B5doa9Zx6CmM9iY
20Lnfxk08chRBp0Wbsofmwhig1ytN+cwmDy/VD++kUDR8F6Xc4+BQ9Gj/py7
BBfiX48j/zLIUfKHN9YR2DlVfaqfzENX8YeRJ7UEl9tKz96W8uDWE67aX00Q
2PSm8eEhHkz9WP6MKoK4Sovra7N4OLvY93ihjuAV13/J0zs8BG/XtARUEri6
dcuvDPIQHl+k+VZDMKJYuqx1Ih+buNtSCm8SvBvpKLNy4SOh29pHXkIgPeZt
0Cn4UDMJlm/+IDjfPZSelsbHbcd0z+jfCaYXtI1JquJjVVl5+PLrBOxO1YSX
A3xkJJ6+UP8bgUtMStu28QK4lwdlR1whaFaFzFvsLECtk3nq6DwCr/hQ+5X7
BNivdZyqukTwda/2iTxZgMCkSLX0VwKn+T0z3+oFWKwLfd+WRZDd7T4l7YUA
mxAtOZlB8Dm0VX9QIERuxUwb1wsEJaaOJtedhKhVxQw0nycoHDC+IAFCOFYO
5ijPEYy9u/eQPlGIyOW81UwygSxx/OWrGiEG9fWxmUn0XjfNokqfClGkTs2V
JRI8brnPmcoTweOWlcZ4hoDr2TWtwEEEB0lBUWo8wcJi/tudviJItY+cN8YR
aMba7og5JcKC5Iqq3hME0TXBYdpCERTaG9MzYwjyg7IXyTpFOC7xibSLIhBE
sOlCczF6xHytIYLm4XDBZc48MRTPAxLV4QSztthskMrEaBTv95p0jGBG3oP8
kigxolVKTnsozZMxMDvqmhhj9ninyUJofi0mSaI6xChfoavvP0iwN3FCXIYp
C518affFYIKtlkMHvpnDIuVV4Is5CgLVM655qTeLKv0Vw997CbT5Hs6x4Sys
1EpZppzAzXenTXEeC4ne6v7s3XTf0JqLps0sKqGZYQwg+CHANqWY2lU5630H
deT6n04GtrBobE6vvk/9evYceXMriy7/MF8NdUO3el52OwuT+GXJSdQnPPzL
JX+xcDHoTFZQf7IZ3RTRx6JBUW34xZ/AftyWWwues/Aq+/6Sinr3x5LCPuon
X1w6EEdtaJUnr+1nMZAcyz1MXaRskdkOsOBVuK2UUiuGsp9ph1hssKi79mkH
/Z+u4fYD/7B4vG5J2CB1Z4P3Hbu3LPzT8917qaW5lgUJ71gcnnvK2Ew9c3Nw
0NYPLM55eUzIp/Zzv+sn/MjCNkPTl0GdumjahlrqvL5ZxWpqc0HHwrnDLMqO
jvOMpAZnwXc91Cuqw6xDqENenrZKGWFRxx3o30N99WGv5erPLNb7bLnpR22s
kQx/pn6UdS/Wh/o/to0Qqw==
       "]]},
     Annotation[#, "Charting`Private`Tag$20560#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{4., 3.0494871721497088`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{244., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{4, 6}, {3.0494871721497088`, 3.106157993040376}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7181878838311467`*^9},ExpressionUUID->"b91a3f75-a244-4502-a433-\
c7647f39802f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PredictorInformation", "[", 
  RowBox[{"predict", ",", "\"\<Properties\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7181879138537855`*^9, 
  3.718187927011198*^9}},ExpressionUUID->"b16279bd-6e6d-4754-9179-\
266708facdd0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ExampleNumber\"\>", ",", "\<\"ExtractedFeatureNumber\"\>", ",",
    "FeatureNames", ",", "\<\"FeatureNumber\"\>", ",", "FeatureTypes", 
   ",", "\<\"FunctionProperties\"\>", ",", "IndeterminateThreshold", 
   ",", "\<\"L1Regularization\"\>", ",", "\<\"L2Regularization\"\>", 
   ",", "\<\"MaxTrainingMemory\"\>", ",", "Method", 
   ",", "\<\"MethodDescription\"\>", ",", "PerformanceGoal", 
   ",", "\<\"Properties\"\>", ",", "\<\"TrainingTime\"\>", ",", 
   "UtilityFunction"}], "}"}]], "Output",
 CellChangeTimes->{
  3.71818792877544*^9},ExpressionUUID->"1079781b-ce7a-4adc-86d9-12c46005d4af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PredictorInformation", "[", 
  RowBox[{"predict", ",", "\"\<DistributionFunction\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.718187946888601*^9, 
  3.718187950893173*^9}},ExpressionUUID->"36947c99-6c3f-4d42-a7f6-\
216437c03519"],

Cell[BoxData[
 TemplateBox[{
  "PredictorInformation","mlnaset",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"DistributionFunction\\\\\\\"\\\"}]\\) is \
not an available \\!\\(\\*RowBox[{\\\"\\\\\\\"Property\\\\\\\"\\\"}]\\).\"",2,
   21,15,32403703234369118662,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.71818795208*^9},ExpressionUUID->"3f174704-0c62-4b74-bb25-ccc7aa7f2c11"],

Cell[BoxData[
 RowBox[{"PredictorInformation", "[", 
  RowBox[{
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["PredictorFunction", "SummaryHead"], 
         "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{Typeset`open$$ = False}, 
         PanelBox[
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{}, {{}, {
                    PointSize[0.125], 
                    GrayLevel[0.55], 
                    
                    PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                    GrayLevel[0.7], 
                    AbsoluteThickness[1.5], 
                    
                    BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 
                    2}, {5, 4}}]}}, {}}, Axes -> {False, False}, 
                 AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                 BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {All, All}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                 Axes -> False, AspectRatio -> 1, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                 FrameStyle -> Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                 GrayLevel[0.94]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{}, {{}, {
                    PointSize[0.125], 
                    GrayLevel[0.55], 
                    
                    PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                    GrayLevel[0.7], 
                    AbsoluteThickness[1.5], 
                    
                    BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 
                    2}, {5, 4}}]}}, {}}, Axes -> {False, False}, 
                 AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                 BaseStyle -> {FontFamily -> "Arial", 
                   AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, 
                 LabelStyle -> {FontFamily -> "Arial"}, 
                 Method -> {"ScalingFunctions" -> None}, 
                 PlotRange -> {All, All}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                 Axes -> False, AspectRatio -> 1, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                 FrameStyle -> Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                 GrayLevel[0.94]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Numerical\"", ",", "\"Nominal\""}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["150", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
          Baseline], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", "\<\"DistributionFunction\"\>"}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.71818795208*^9},ExpressionUUID->"3d033010-034c-4176-94e9-5915353d1b79"]
}, Open  ]],

Cell[TextData[{
 StyleBox["MATHEMATICA FOR PREDICTION",
  FontWeight->"Bold"],
 "\n\n",
 StyleBox["I. Import antononcube packages",
  FontColor->RGBColor[1, 0.5, 0]]
}], "Text",
 CellChangeTimes->{{3.7181916495911465`*^9, 3.7181916686686845`*^9}, {
  3.7181925414092617`*^9, 
  3.718192568204039*^9}},ExpressionUUID->"574d3563-2f01-44c5-a2d0-\
bc3ec72b016b"],

Cell[BoxData[{
 RowBox[{"Import", "[", 
  "\"\<https://raw.githubusercontent.com/antononcube/MathematicaForPrediction/\
master/MathematicaForPredictionUtilities.m\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Import", "[", 
  "\"\<https://raw.githubusercontent.com/antononcube/MathematicaForPrediction/\
master/MosaicPlot.m\>\"", "]"}], "\n", 
 RowBox[{"Import", "[", 
  "\"\<https://raw.githubusercontent.com/antononcube/MathematicaForPrediction/\
master/Misc/RSparseMatrix.m\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.718191700969186*^9, 
  3.7181917121586275`*^9}},ExpressionUUID->"0cef267e-68b5-4eb3-bc12-\
84084454b3db"],

Cell[TextData[StyleBox["II. Titanic data",
 FontColor->RGBColor[1, 0.5, 0]]], "Text",
 CellChangeTimes->{{3.7181917463922863`*^9, 
  3.7181917504529285`*^9}},ExpressionUUID->"6c519456-0291-47c6-865b-\
32e8cd34dd05"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"titanicData", "=", 
   RowBox[{
    RowBox[{"Flatten", "@*", "List"}], "@@@", 
    RowBox[{"ExampleData", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<Titanic\>\""}], "}"}], 
      ",", "\"\<Data\>\""}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"titanicData", "=", 
    RowBox[{"DeleteCases", "[", 
     RowBox[{"titanicData", ",", 
      RowBox[{"{", 
       RowBox[{"___", ",", "_Missing", ",", "___"}], "}"}]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"titanicColumnNames", "=", 
   RowBox[{
    RowBox[{"Flatten", "@*", "List"}], "@@", 
    RowBox[{"ExampleData", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<Titanic\>\""}], "}"}], 
      ",", "\"\<VariableDescriptions\>\""}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"aTitanicColumnNames", "=", 
   RowBox[{"AssociationThread", "[", 
    RowBox[{"titanicColumnNames", "\[Rule]", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", "titanicColumnNames", "]"}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.718191753689116*^9, 
  3.7181917537047443`*^9}},ExpressionUUID->"7ce2a64c-88d3-4adc-b083-\
7a0dd54a399d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Dimensions", "[", "titanicData", "]"}], "\[IndentingNewLine]", 
 RowBox[{"RecordsSummary", "[", 
  RowBox[{"titanicData", ",", "titanicColumnNames"}], "]"}]}], "Input",
 CellChangeTimes->{{3.71819177136418*^9, 
  3.718191792423128*^9}},ExpressionUUID->"61fd29f8-9bdd-47af-86db-\
99b11c74f748"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1046", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{
  3.718191795128186*^9},ExpressionUUID->"b5e3c22f-ddb5-4c42-b005-\
a80cfd04824a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[GridBox[{
      {
       StyleBox["\<\"1 passenger class\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"3rd\"\>", "501"},
          {"\<\"1st\"\>", "284"},
          {"\<\"2nd\"\>", "261"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"2 passenger age\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", "0.1667`"},
          {"\<\"1st Qu\"\>", "21.`"},
          {"\<\"Median\"\>", "28.`"},
          {"\<\"Mean\"\>", "29.8811345124283`"},
          {"\<\"3rd Qu\"\>", "39.`"},
          {"\<\"Max\"\>", "80.`"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"3 passenger sex\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"male\"\>", "658"},
          {"\<\"female\"\>", "388"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"4 passenger survival\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"died\"\>", "619"},
          {"\<\"survived\"\>", "427"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7181917951487617`*^9},ExpressionUUID->"b3ac9db3-9831-4ff2-bb23-\
4329a397774d"]
}, Open  ]],

Cell[TextData[StyleBox["III. Install R",
 FontColor->RGBColor[1, 0.5, 0]]], "Text",
 CellChangeTimes->{{3.718191856135556*^9, 
  3.718191859344616*^9}},ExpressionUUID->"8e7fdb8f-5c4a-4fcd-bc28-\
60a98add8ab9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<RLink`\>\"", "]"}], "\n", 
 RowBox[{"RLinkResourcesInstall", "[", "]"}], "\n", 
 RowBox[{"InstallR", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.718191880079347*^9, 
  3.718191880085363*^9}},ExpressionUUID->"dbac035f-2296-4646-bbd6-\
c63a82c27240"],

Cell[BoxData[
 RowBox[{"{", 
  InterpretationBox[
   RowBox[{
   "Paclet", "[", "\<\"RLinkRuntime\"\>", ",", "\<\"9.0.0.0\"\>", ",", "<>", 
    "]"}],
   PacletManager`Paclet[
   "Name" -> "RLinkRuntime", "Version" -> "9.0.0.0", "MathematicaVersion" -> 
    "8+", "Description" -> "{RVersion -> 2.14.0}", 
    "SystemID" -> {"Windows", "Windows-x86-64"}, "Qualifier" -> "Windows", 
    "Extensions" -> {{"Resource", "Resources" -> {"SystemFiles"}}}, 
    "Location" -> 
    "C:\\Users\\Soutrik\\AppData\\Roaming\\Mathematica\\Paclets\\Repository\\\
RLinkRuntime-Windows-9.0.0.0"]], "}"}]], "Output",
 CellChangeTimes->{
  3.7181918816352186`*^9},ExpressionUUID->"bcb51907-7498-4440-8fab-\
f24bd8be46f3"]
}, Open  ]],

Cell[TextData[StyleBox["IV. Mosaic plot",
 FontColor->RGBColor[1, 0.5, 0]]], "Text",
 CellChangeTimes->{{3.7181919055876727`*^9, 3.718191917992237*^9}, {
  3.7181919598149557`*^9, 
  3.718191965580494*^9}},ExpressionUUID->"5ed18579-49d4-4597-91e1-\
cbb949f8e0cf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MosaicPlot", "[", 
  RowBox[{"titanicData", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", 
     RowBox[{"aTitanicColumnNames", "/@", 
      RowBox[{"{", 
       RowBox[{"\"\<passenger class\>\"", ",", "\"\<passenger survival\>\""}],
        "}"}]}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.71819195310389*^9, 
  3.718191953123495*^9}},ExpressionUUID->"719cf607-2918-4c99-a405-\
b76afe3e4527"],

Cell[BoxData[
 GraphicsBox[{{{
     {RGBColor[0.6313725490196078, 0.5372549019607844, 0.469281045751634], 
      TagBox[
       TooltipBox[RectangleBox[{0., 0.}, {0.3590492957746479, 0.2606500956022944}],
        TagBox[
         GridBox[{{
            StyleBox["\"condition\"", 
             RGBColor[0, 0, 1], FontFamily -> "Times", StripOnInput -> False], 
            StyleBox["\"event\"", 
             RGBColor[0, 0, 1], FontFamily -> "Times", StripOnInput -> False], 
            StyleBox["\"probability\"", 
             RGBColor[0, 0, 1], FontFamily -> "Times", StripOnInput -> 
             False]}, {"\"\"", 
            TagBox[
             FormBox[
              RowBox[{"\"1st\""}], TraditionalForm], DisplayForm], 
            "0.27151051625239003`"}, {"\"\"", 
            TagBox[
             FormBox[
              RowBox[{"\"1st\"", "\[Intersection]", "\"died\""}], 
              TraditionalForm], DisplayForm], "0.09847036328871893`"}, {
            TagBox[
             FormBox[
              RowBox[{"\"1st\""}], TraditionalForm], DisplayForm], 
            TagBox[
             FormBox[
              RowBox[{"\"died\""}], TraditionalForm], DisplayForm], 
            "0.3626760563380282`"}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxDividers -> {
           "Columns" -> {{None}}, "Rows" -> {False, True, False}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]],
       Annotation[#, 
        Grid[{{
           Style["condition", 
            RGBColor[0, 0, 1], FontFamily -> "Times"], 
           Style["event", 
            RGBColor[0, 0, 1], FontFamily -> "Times"], 
           Style["probability", 
            RGBColor[0, 0, 1], FontFamily -> "Times"]}, {"", 
           DisplayForm[
            FormBox[
             RowBox[{"\"1st\""}], TraditionalForm]], 0.27151051625239003`}, {
          "", 
           DisplayForm[
            FormBox[
             RowBox[{"\"1st\"", "\[Intersection]", "\"died\""}], 
             TraditionalForm]], 0.09847036328871893}, {
           DisplayForm[
            FormBox[
             RowBox[{"\"1st\""}], TraditionalForm]], 
           DisplayForm[
            FormBox[
             RowBox[{"\"died\""}], TraditionalForm]], 0.3626760563380282}}, 
         Alignment -> Left, Dividers -> {None, {False, True, False}}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.6313725490196078, 0.5372549019607844, 0.469281045751634], 
      TagBox[
       TooltipBox[RectangleBox[{0.3690492957746479, 0.}, {1., 0.2606500956022944}],
        TagBox[
         GridBox[{{
            StyleBox["\"condition\"", 
             RGBColor[0, 0, 1], FontFamily -> "Times", StripOnInput -> False], 
            StyleBox["\"event\"", 
             RGBColor[0, 0, 1], FontFamily -> "Times", StripOnInput -> False], 
            StyleBox["\"probability\"", 
             RGBColor[0, 0, 1], FontFamily -> "Times", StripOnInput -> 
             False]}, {"\"\"", 
            TagBox[
             FormBox[
              RowBox[{"\"1st\""}], TraditionalForm], DisplayForm], 
            "0.27151051625239003`"}, {"\"\"", 
            TagBox[
             FormBox[
              RowBox[{"\"1st\"", "\[Intersection]", "\"survived\""}], 
              TraditionalForm], DisplayForm], "0.17304015296367112`"}, {
            TagBox[
             FormBox[
              RowBox[{"\"1st\""}], TraditionalForm], DisplayForm], 
            TagBox[
             FormBox[
              RowBox[{"\"survived\""}], TraditionalForm], DisplayForm], 
            "0.6373239436619719`"}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxDividers -> {
           "Columns" -> {{None}}, "Rows" -> {False, True, False}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]],
       Annotation[#, 
        Grid[{{
           Style["condition", 
            RGBColor[0, 0, 1], FontFamily -> "Times"], 
           Style["event", 
            RGBColor[0, 0, 1], FontFamily -> "Times"], 
           Style["probability", 
            RGBColor[0, 0, 1], FontFamily -> "Times"]}, {"", 
           DisplayForm[
            FormBox[
             RowBox[{"\"1st\""}], TraditionalForm]], 0.27151051625239003`}, {
          "", 
           DisplayForm[
            FormBox[
             RowBox[{"\"1st\"", "\[Intersection]", "\"survived\""}], 
             TraditionalForm]], 0.17304015296367112`}, {
           DisplayForm[
            FormBox[
             RowBox[{"\"1st\""}], TraditionalForm]], 
           DisplayForm[
            FormBox[
             RowBox[{"\"survived\""}], TraditionalForm]], 
           0.6373239436619719}}, Alignment -> Left, 
         Dividers -> {None, {False, True, False}}], "Tooltip"]& ]}}, {
     {RGBColor[0.538562091503268, 0.6261437908496732, 0.5254901960784314], 
      TagBox[
       TooltipBox[RectangleBox[{0., 0.2806500956022944}, {0.5537931034482758, 0.5201912045889102}],
        TagBox[
         GridBox[{{
            StyleBox["\"condition\"", 
             RGBColor[0, 0, 1], FontFamily -> "Times", StripOnInput -> False], 
            StyleBox["\"event\"", 
             RGBColor[0, 0, 1], FontFamily -> "Times", StripOnInput -> False], 
            StyleBox["\"probability\"", 
             RGBColor[0, 0, 1], FontFamily -> "Times", StripOnInput -> 
             False]}, {"\"\"", 
            TagBox[
             FormBox[
              RowBox[{"\"2nd\""}], TraditionalForm], DisplayForm], 
            "0.24952198852772467`"}, {"\"\"", 
            TagBox[
             FormBox[
              RowBox[{"\"2nd\"", "\[Intersection]", "\"died\""}], 
              TraditionalForm], DisplayForm], "0.1395793499043977`"}, {
            TagBox[
             FormBox[
              RowBox[{"\"2nd\""}], TraditionalForm], DisplayForm], 
            TagBox[
             FormBox[
              RowBox[{"\"died\""}], TraditionalForm], DisplayForm], 
            "0.5593869731800766`"}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxDividers -> {
           "Columns" -> {{None}}, "Rows" -> {False, True, False}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]],
       Annotation[#, 
        Grid[{{
           Style["condition", 
            RGBColor[0, 0, 1], FontFamily -> "Times"], 
           Style["event", 
            RGBColor[0, 0, 1], FontFamily -> "Times"], 
           Style["probability", 
            RGBColor[0, 0, 1], FontFamily -> "Times"]}, {"", 
           DisplayForm[
            FormBox[
             RowBox[{"\"2nd\""}], TraditionalForm]], 0.24952198852772467`}, {
          "", 
           DisplayForm[
            FormBox[
             RowBox[{"\"2nd\"", "\[Intersection]", "\"died\""}], 
             TraditionalForm]], 0.1395793499043977}, {
           DisplayForm[
            FormBox[
             RowBox[{"\"2nd\""}], TraditionalForm]], 
           DisplayForm[
            FormBox[
             RowBox[{"\"died\""}], TraditionalForm]], 0.5593869731800766}}, 
         Alignment -> Left, Dividers -> {None, {False, True, False}}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.538562091503268, 0.6261437908496732, 0.5254901960784314], 
      TagBox[
       TooltipBox[RectangleBox[{0.5637931034482758, 0.2806500956022944}, {1., 0.5201912045889102}],
        TagBox[
         GridBox[{{
            StyleBox["\"condition\"", 
             RGBColor[0, 0, 1], FontFamily -> "Times", StripOnInput -> False], 
            StyleBox["\"event\"", 
             RGBColor[0, 0, 1], FontFamily -> "Times", StripOnInput -> False], 
            StyleBox["\"probability\"", 
             RGBColor[0, 0, 1], FontFamily -> "Times", StripOnInput -> 
             False]}, {"\"\"", 
            TagBox[
             FormBox[
              RowBox[{"\"2nd\""}], TraditionalForm], DisplayForm], 
            "0.24952198852772467`"}, {"\"\"", 
            TagBox[
             FormBox[
              RowBox[{"\"2nd\"", "\[Intersection]", "\"survived\""}], 
              TraditionalForm], DisplayForm], "0.10994263862332695`"}, {
            TagBox[
             FormBox[
              RowBox[{"\"2nd\""}], TraditionalForm], DisplayForm], 
            TagBox[
             FormBox[
              RowBox[{"\"survived\""}], TraditionalForm], DisplayForm], 
            "0.44061302681992337`"}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxDividers -> {
           "Columns" -> {{None}}, "Rows" -> {False, True, False}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]],
       Annotation[#, 
        Grid[{{
           Style["condition", 
            RGBColor[0, 0, 1], FontFamily -> "Times"], 
           Style["event", 
            RGBColor[0, 0, 1], FontFamily -> "Times"], 
           Style["probability", 
            RGBColor[0, 0, 1], FontFamily -> "Times"]}, {"", 
           DisplayForm[
            FormBox[
             RowBox[{"\"2nd\""}], TraditionalForm]], 0.24952198852772467`}, {
          "", 
           DisplayForm[
            FormBox[
             RowBox[{"\"2nd\"", "\[Intersection]", "\"survived\""}], 
             TraditionalForm]], 0.10994263862332695`}, {
           DisplayForm[
            FormBox[
             RowBox[{"\"2nd\""}], TraditionalForm]], 
           DisplayForm[
            FormBox[
             RowBox[{"\"survived\""}], TraditionalForm]], 
           0.44061302681992337`}}, Alignment -> Left, 
         Dividers -> {None, {False, True, False}}], "Tooltip"]& ]}}, {
     {RGBColor[0.2627450980392157, 0.3411764705882353, 0.4470588235294118], 
      TagBox[
       TooltipBox[RectangleBox[{0., 0.5401912045889102}, {0.7311377245508982, 1.}],
        TagBox[
         GridBox[{{
            StyleBox["\"condition\"", 
             RGBColor[0, 0, 1], FontFamily -> "Times", StripOnInput -> False], 
            StyleBox["\"event\"", 
             RGBColor[0, 0, 1], FontFamily -> "Times", StripOnInput -> False], 
            StyleBox["\"probability\"", 
             RGBColor[0, 0, 1], FontFamily -> "Times", StripOnInput -> 
             False]}, {"\"\"", 
            TagBox[
             FormBox[
              RowBox[{"\"3rd\""}], TraditionalForm], DisplayForm], 
            "0.4789674952198853`"}, {"\"\"", 
            TagBox[
             FormBox[
              RowBox[{"\"3rd\"", "\[Intersection]", "\"died\""}], 
              TraditionalForm], DisplayForm], "0.35372848948374763`"}, {
            TagBox[
             FormBox[
              RowBox[{"\"3rd\""}], TraditionalForm], DisplayForm], 
            TagBox[
             FormBox[
              RowBox[{"\"died\""}], TraditionalForm], DisplayForm], 
            "0.7385229540918165`"}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxDividers -> {
           "Columns" -> {{None}}, "Rows" -> {False, True, False}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]],
       Annotation[#, 
        Grid[{{
           Style["condition", 
            RGBColor[0, 0, 1], FontFamily -> "Times"], 
           Style["event", 
            RGBColor[0, 0, 1], FontFamily -> "Times"], 
           Style["probability", 
            RGBColor[0, 0, 1], FontFamily -> "Times"]}, {"", 
           DisplayForm[
            FormBox[
             RowBox[{"\"3rd\""}], TraditionalForm]], 0.4789674952198853}, {"", 
           DisplayForm[
            FormBox[
             RowBox[{"\"3rd\"", "\[Intersection]", "\"died\""}], 
             TraditionalForm]], 0.35372848948374763`}, {
           DisplayForm[
            FormBox[
             RowBox[{"\"3rd\""}], TraditionalForm]], 
           DisplayForm[
            FormBox[
             RowBox[{"\"died\""}], TraditionalForm]], 0.7385229540918165}}, 
         Alignment -> Left, Dividers -> {None, {False, True, False}}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.2627450980392157, 0.3411764705882353, 0.4470588235294118], 
      TagBox[
       TooltipBox[RectangleBox[{0.7411377245508982, 0.5401912045889102}, {1., 1.}],
        TagBox[
         GridBox[{{
            StyleBox["\"condition\"", 
             RGBColor[0, 0, 1], FontFamily -> "Times", StripOnInput -> False], 
            StyleBox["\"event\"", 
             RGBColor[0, 0, 1], FontFamily -> "Times", StripOnInput -> False], 
            StyleBox["\"probability\"", 
             RGBColor[0, 0, 1], FontFamily -> "Times", StripOnInput -> 
             False]}, {"\"\"", 
            TagBox[
             FormBox[
              RowBox[{"\"3rd\""}], TraditionalForm], DisplayForm], 
            "0.4789674952198853`"}, {"\"\"", 
            TagBox[
             FormBox[
              RowBox[{"\"3rd\"", "\[Intersection]", "\"survived\""}], 
              TraditionalForm], DisplayForm], "0.1252390057361377`"}, {
            TagBox[
             FormBox[
              RowBox[{"\"3rd\""}], TraditionalForm], DisplayForm], 
            TagBox[
             FormBox[
              RowBox[{"\"survived\""}], TraditionalForm], DisplayForm], 
            "0.2614770459081837`"}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxDividers -> {
           "Columns" -> {{None}}, "Rows" -> {False, True, False}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]],
       Annotation[#, 
        Grid[{{
           Style["condition", 
            RGBColor[0, 0, 1], FontFamily -> "Times"], 
           Style["event", 
            RGBColor[0, 0, 1], FontFamily -> "Times"], 
           Style["probability", 
            RGBColor[0, 0, 1], FontFamily -> "Times"]}, {"", 
           DisplayForm[
            FormBox[
             RowBox[{"\"3rd\""}], TraditionalForm]], 0.4789674952198853}, {"", 
           DisplayForm[
            FormBox[
             RowBox[{"\"3rd\"", "\[Intersection]", "\"survived\""}], 
             TraditionalForm]], 0.1252390057361377}, {
           DisplayForm[
            FormBox[
             RowBox[{"\"3rd\""}], TraditionalForm]], 
           DisplayForm[
            FormBox[
             RowBox[{"\"survived\""}], TraditionalForm]], 
           0.2614770459081837}}, Alignment -> Left, 
         Dividers -> {None, {False, True, False}}], "Tooltip"]& ]}}}, 
   {GrayLevel[
    0], {{InsetBox["\<\"1st\"\>", {0, 0.1303250478011472}, {0, -2}, 
       Automatic, {0, 1}], 
      InsetBox["\<\"2nd\"\>", {0, 0.40042065009560235}, {0, -2}, Automatic, {
       0, 1}], InsetBox["\<\"3rd\"\>", {0, 0.7700956022944552}, {0, -2}, 
       Automatic, {0, 1}]}, {
      InsetBox["\<\"died\"\>", {0.3655688622754491, 1}, {0, -2}, Automatic, {
       1, 0}], InsetBox["\<\"survived\"\>", {0.870568862275449, 1}, {0, -2}, 
       Automatic, {1, 0}]}}, {}}}]], "Output",
 CellChangeTimes->{
  3.718191957130169*^9},ExpressionUUID->"9920a50a-fae9-45a5-bbbb-\
06b1943b292f"]
}, Open  ]],

Cell[TextData[{
 StyleBox["INFECTIOUS DISEASE MODEL - INFLUENZA",
  FontWeight->"Bold"],
 "\n\n",
 StyleBox["I. SIR MODEL",
  FontColor->RGBColor[1, 0.5, 0]]
}], "Text",
 CellChangeTimes->{{3.7181929228669777`*^9, 3.7181929455332265`*^9}, {
  3.718192982381075*^9, 3.7181930261406198`*^9}, {3.718194895636102*^9, 
  3.718194899588498*^9}},ExpressionUUID->"b7afba56-577d-438f-8c83-\
21cfdba1cf75"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<PlotLegends`\>\"", "]"}]], "Input",
 CellChangeTimes->{
  3.718194489649897*^9},ExpressionUUID->"c67b6f3f-f0a4-45e5-8424-\
4b6a5182fb76"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"DynamicModule", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "s0", ",", "r0", ",", "\[Alpha]", ",", "sol", ",", "s", ",", "i", ",", 
       "r", ",", "t"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"s0", "=", 
       RowBox[{"1", "\[Minus]", "i0"}]}], ";", 
      RowBox[{"r0", "=", "0"}], ";", 
      RowBox[{"\[Alpha]", "=", 
       RowBox[{"1", "/", "l"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sol", "=", 
       RowBox[{"NDSolve", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"s", "'"}], "[", "t", "]"}], "==", 
            RowBox[{
             RowBox[{"\[Minus]", "\[Beta]"}], "*", 
             RowBox[{"s", "[", "t", "]"}], "*", 
             RowBox[{"i", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"i", "'"}], "[", "t", "]"}], "==", 
            RowBox[{
             RowBox[{"\[Beta]", "*", 
              RowBox[{"s", "[", "t", "]"}], "*", 
              RowBox[{"i", "[", "t", "]"}]}], "\[Minus]", 
             RowBox[{"\[Alpha]", "*", 
              RowBox[{"i", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"r", "'"}], "[", "t", "]"}], "==", 
            RowBox[{"\[Alpha]", "*", 
             RowBox[{"i", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"s", "[", "0", "]"}], "==", "s0"}], ",", 
           RowBox[{
            RowBox[{"i", "[", "0", "]"}], "==", "i0"}], ",", 
           RowBox[{
            RowBox[{"r", "[", "0", "]"}], "==", "r0"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"s", ",", "i", ",", "r"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "150"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"s", "[", "t", "]"}], "/.", "sol"}], ",", 
          RowBox[{
           RowBox[{"i", "[", "t", "]"}], "/.", "sol"}], ",", 
          RowBox[{
           RowBox[{"r", "[", "t", "]"}], "/.", "sol"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "30"}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[RightArrow]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Darker", "[", "Green", "]"}], ",", "Red", ",", "Blue"}], 
          "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"PlotRange", "\[RightArrow]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], ",", 
        RowBox[{"PlotLegend", "\[RightArrow]", 
         RowBox[{"{", 
          RowBox[{"\"\<S\>\"", ",", "\"\<I\>\"", ",", "\"\<R\>\""}], "}"}]}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"LegendPosition", "\[RightArrow]", 
         RowBox[{"{", 
          RowBox[{"0.5", ",", 
           RowBox[{"\[Minus]", "0.2"}]}], "}"}]}], ",", 
        RowBox[{"LegendShadow", "\[RightArrow]", "None"}], ",", 
        RowBox[{"ShadowBorder", "\[RightArrow]", "None"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"FrameLabel", "\[RightArrow]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<time (in days)\>\"", ",", "Medium"}], "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\< \>\"", ",", "Medium"}], "]"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Frame", "\[RightArrow]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i0", ",", "0.001", ",", "\"\<I0: infected at the beginning\>\""}], 
      "}"}], ",", "0", ",", "0.1", ",", "0.001", ",", 
     RowBox[{"ImageSize", "\[RightArrow]", "Tiny"}], ",", 
     RowBox[{"Appearance", "\[RightArrow]", "\"\<Labeled\>\""}]}], "}"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Beta]", ",", "1.5", ",", "\"\<\[Beta]: transmission rate\>\""}], 
      "}"}], ",", "0.5", ",", "5", ",", "0.5", ",", 
     RowBox[{"ImageSize", "\[RightArrow]", "Tiny"}], ",", 
     RowBox[{"Appearance", "\[RightArrow]", "\"\<Labeled\>\""}]}], "}"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "l", ",", "3", ",", "\"\<1/\[Alpha]: infectious period (in days)\>\""}],
       "}"}], ",", "1", ",", "7", ",", "1", ",", 
     RowBox[{"ImageSize", "\[RightArrow]", "Tiny"}], ",", 
     RowBox[{"Appearance", "\[RightArrow]", "\"\<Labeled\>\""}]}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7181930416273365`*^9, 3.718193095405689*^9}, {
  3.718193127696785*^9, 3.7181934561852446`*^9}, {3.718193489960264*^9, 
  3.718193908000065*^9}, {3.7181940322753983`*^9, 3.718194103296191*^9}, {
  3.7181941415140824`*^9, 3.718194313041761*^9}, {3.718194438196898*^9, 
  3.7181944393831997`*^9}, {3.718194593345581*^9, 3.7181946119945445`*^9}, {
  3.7181946476313305`*^9, 3.718194672157489*^9}, {3.7181947204855375`*^9, 
  3.71819475067255*^9}},ExpressionUUID->"9ce76ece-b775-4477-8ba9-\
ddea0c9846c0"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i0$$ = 0.001, $CellContext`l$$ = 
    3, $CellContext`\[Beta]$$ = 1.5, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i0$$], 0.001, "I0: infected at the beginning"}, 0, 
      0.1, 0.001, 
      RightArrow[ImageSize, Tiny], 
      RightArrow[Appearance, "Labeled"]}, {{
       Hold[$CellContext`\[Beta]$$], 1.5, "\[Beta]: transmission rate"}, 0.5, 
      5, 0.5, 
      RightArrow[ImageSize, Tiny], 
      RightArrow[Appearance, "Labeled"]}, {{
       Hold[$CellContext`l$$], 3, "1/\[Alpha]: infectious period (in days)"}, 
      1, 7, 1, 
      RightArrow[ImageSize, Tiny], 
      RightArrow[Appearance, "Labeled"]}}, Typeset`size$$ = {
    1145.5, {22., 12.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`i0$$ = 0.001, $CellContext`l$$ = 
        3, $CellContext`\[Beta]$$ = 1.5}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      DynamicModule[{$CellContext`s0, $CellContext`r0, $CellContext`\[Alpha], \
$CellContext`sol, $CellContext`s, $CellContext`i, $CellContext`r, \
$CellContext`t}, $CellContext`s0 = 1 - $CellContext`i0$$; $CellContext`r0 = 
         0; $CellContext`\[Alpha] = 1/$CellContext`l$$; $CellContext`sol = 
         NDSolve[{
           Derivative[
             1][$CellContext`s][$CellContext`t] == (-$CellContext`\[Beta]$$) \
$CellContext`s[$CellContext`t] $CellContext`i[$CellContext`t], 
            Derivative[
             1][$CellContext`i][$CellContext`t] == $CellContext`\[Beta]$$ \
$CellContext`s[$CellContext`t] $CellContext`i[$CellContext`t] - $CellContext`\
\[Alpha] $CellContext`i[$CellContext`t], 
            Derivative[
             1][$CellContext`r][$CellContext`t] == $CellContext`\[Alpha] \
$CellContext`i[$CellContext`t], $CellContext`s[
             0] == $CellContext`s0, $CellContext`i[
             0] == $CellContext`i0$$, $CellContext`r[
             0] == $CellContext`r0}, {$CellContext`s, $CellContext`i, \
$CellContext`r}, {$CellContext`t, 0, 150}]; Plot[{
           ReplaceAll[
            $CellContext`s[$CellContext`t], $CellContext`sol], 
           ReplaceAll[
            $CellContext`i[$CellContext`t], $CellContext`sol], 
           ReplaceAll[
            $CellContext`r[$CellContext`t], $CellContext`sol]}, \
{$CellContext`t, 0, 30}, 
          RightArrow[PlotStyle, {
            Darker[Green], Red, Blue}], 
          RightArrow[PlotRange, {0, 1}], 
          RightArrow[PlotLegends`PlotLegend, {"S", "I", "R"}], 
          RightArrow[PlotLegends`LegendPosition, {0.5, -0.2}], 
          RightArrow[PlotLegends`LegendShadow, None], 
          RightArrow[PlotLegends`ShadowBorder, None], 
          RightArrow[FrameLabel, {
            Style["time (in days)", Medium], 
            Style[" ", Medium]}], 
          RightArrow[Frame, {{True, False}, {True, False}}]]], 
      "Specifications" :> {{{$CellContext`i0$$, 0.001, 
          "I0: infected at the beginning"}, 0, 0.1, 0.001, 
         RightArrow[ImageSize, Tiny], 
         RightArrow[
         Appearance, "Labeled"]}, {{$CellContext`\[Beta]$$, 1.5, 
          "\[Beta]: transmission rate"}, 0.5, 5, 0.5, 
         RightArrow[ImageSize, Tiny], 
         RightArrow[
         Appearance, "Labeled"]}, {{$CellContext`l$$, 3, 
          "1/\[Alpha]: infectious period (in days)"}, 1, 7, 1, 
         RightArrow[ImageSize, Tiny], 
         RightArrow[Appearance, "Labeled"]}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{1197., {79., 85.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.718194551751837*^9, 3.7181946516075916`*^9, 
  3.7181947122044983`*^9, 
  3.718194782581667*^9},ExpressionUUID->"f5de0c40-22e0-4a27-9dcc-\
c15db300f751"]
}, Open  ]]
},
WindowSize->{1536, 781},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]]}, WindowSize -> {775, 657}, 
  WindowMargins -> {{0, Automatic}, {Automatic, 0}}, Visible -> False, 
  FrontEndVersion -> "11.1 for Microsoft Windows (64-bit) (April 18, 2017)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 315, 9, 68, "Text", "ExpressionUUID" -> \
"61686fbd-d98a-4159-bc2b-509e27d91bae"],
Cell[CellGroupData[{
Cell[898, 33, 966, 26, 50, "Input", "ExpressionUUID" -> \
"ad5dfbeb-a384-4455-b741-5076a423003b"],
Cell[1867, 61, 9024, 186, 72, "Output", "ExpressionUUID" -> \
"9a83ff01-04eb-4b19-a938-a76f34cac717"]
}, Open  ]],
Cell[10906, 250, 156, 3, 30, "Input", "ExpressionUUID" -> \
"55ce6871-50e8-419e-9da6-6e2a620cbb47"],
Cell[CellGroupData[{
Cell[11087, 257, 1572, 41, 69, "Input", "ExpressionUUID" -> \
"55c405f8-5ed8-413e-b677-550fc36d98b7"],
Cell[12662, 300, 25855, 513, 254, "Output", "ExpressionUUID" -> \
"65416f98-2901-4214-9079-90a099d20d8f"]
}, Open  ]],
Cell[38532, 816, 242, 4, 30, "Text", "ExpressionUUID" -> \
"cafd682b-3786-468b-90a5-da940710eedc"],
Cell[CellGroupData[{
Cell[38799, 824, 485, 13, 30, "Input", "ExpressionUUID" -> \
"2d1b671a-afb5-44bf-a99c-04837e0a40f2"],
Cell[39287, 839, 9803, 196, 72, "Output", "ExpressionUUID" -> \
"7ba64c2a-6f52-4501-9801-1be10a1cea03"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49127, 1040, 431, 11, 30, "Input", "ExpressionUUID" -> \
"ed677ce6-df71-47a6-b52c-4c72c6ecc641"],
Cell[49561, 1053, 8016, 167, 72, "Output", "ExpressionUUID" -> \
"aa8a715b-aa9c-4500-9791-e0f2649d69bc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57614, 1225, 206, 4, 30, "Input", "ExpressionUUID" -> \
"fa7d1e63-1a24-47ae-a978-662d9a9cdd58"],
Cell[57823, 1231, 63366, 1537, 378, "Output", "ExpressionUUID" -> \
"0f5d4618-d7d0-48d0-a20c-50bb275e3962"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121226, 2773, 200, 4, 30, "Input", "ExpressionUUID" -> \
"ee90fa8b-7ee4-4eb4-8c02-0ef3befab2d4"],
Cell[121429, 2779, 9262, 160, 173, "Output", "ExpressionUUID" -> \
"c294fabf-f183-4c70-9ee3-d39c1c834d06"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130728, 2944, 209, 4, 30, "Input", "ExpressionUUID" -> \
"aed1077d-4bd6-49ab-8799-cf1da1fe1e37"],
Cell[130940, 2950, 149, 3, 30, "Output", "ExpressionUUID" -> \
"8c974e69-91a4-4b5a-a4a4-cf524fba6d0c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131126, 2958, 207, 4, 30, "Input", "ExpressionUUID" -> \
"6abdd98c-46b9-45dc-884d-25e68c1d3211"],
Cell[131336, 2964, 9544, 281, 159, "Output", "ExpressionUUID" -> \
"57ed5eb3-d18d-4d2f-b45e-ff5d08408af2"]
}, Open  ]],
Cell[140895, 3248, 248, 4, 30, "Text", "ExpressionUUID" -> \
"cc19bb1b-dc3e-4239-a7f2-b489afe1b844"],
Cell[141146, 3254, 618, 17, 50, "Input", "ExpressionUUID" -> \
"06be1baf-fc12-4931-bb4e-947e7b6cf143"],
Cell[CellGroupData[{
Cell[141789, 3275, 220, 5, 30, "Input", "ExpressionUUID" -> \
"5f0e4249-08b1-4538-bf9b-9ba54d227b0d"],
Cell[142012, 3282, 15111, 297, 72, "Output", "ExpressionUUID" -> \
"e7beb3f1-d196-4f71-850d-0e6e40820d22"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157160, 3584, 257, 6, 30, "Input", "ExpressionUUID" -> \
"e94de7bb-1f8f-4aab-baee-37cd9b8143e0"],
Cell[157420, 3592, 7064, 147, 72, "Output", "ExpressionUUID" -> \
"c6dbfdbc-480d-44c7-83bb-2d7012770390"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164521, 3744, 197, 4, 30, "Input", "ExpressionUUID" -> \
"3cb5231f-0a56-423c-982e-634aa96bf544"],
Cell[164721, 3750, 138, 3, 30, "Output", "ExpressionUUID" -> \
"47ef22cc-84af-4f18-9092-388f346919be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164896, 3758, 209, 4, 30, "Input", "ExpressionUUID" -> \
"7355ab5e-f89b-40b8-8f6f-863596d730bf"],
Cell[165108, 3764, 56256, 1458, 316, "Output", "ExpressionUUID" -> \
"08b3ecd1-2b98-44b0-a6be-182632fef259"]
}, Open  ]],
Cell[221379, 5225, 219, 4, 30, "Text", "ExpressionUUID" -> \
"ab270907-ae1a-4a5c-8774-11dae422dc72"],
Cell[221601, 5231, 540, 16, 30, "Input", "ExpressionUUID" -> \
"0bbf00d6-e703-434c-9a5c-6e6318c9040f"],
Cell[CellGroupData[{
Cell[222166, 5251, 304, 8, 30, "Input", "ExpressionUUID" -> \
"cf9589a7-b635-4fae-848e-685ce89adb7b"],
Cell[222473, 5261, 8224, 171, 72, "Output", "ExpressionUUID" -> \
"9beef726-a993-477f-878d-a8b40ae57cc3"]
}, Open  ]],
Cell[230712, 5435, 973, 26, 50, "Input", "ExpressionUUID" -> \
"1256c62b-9ed1-4696-94d1-fb681be9fd3f"],
Cell[CellGroupData[{
Cell[231710, 5465, 1779, 49, 69, "Input", "ExpressionUUID" -> \
"b3552904-4888-4b1d-aa09-f2ccf90ab098"],
Cell[233492, 5516, 22138, 438, 160, 12622, 281, "CachedBoxData", "BoxData", \
"Output", "ExpressionUUID" -> "6f2140b2-c029-431b-9001-3adf0707b7bd"]
}, Open  ]],
Cell[255645, 5957, 234, 4, 30, "Text", "ExpressionUUID" -> \
"2c5d3101-4811-45fe-ab74-bc5041232ff9"],
Cell[CellGroupData[{
Cell[255904, 5965, 120865, 2237, 184, "Input", "ExpressionUUID" -> \
"f853c31b-21ea-47e3-8882-6c8d13c4de59"],
Cell[376772, 8204, 9804, 203, 72, "Output", "ExpressionUUID" -> \
"9013994a-a511-4d19-894d-fd12a9cbbb32"]
}, Open  ]],
Cell[CellGroupData[{
Cell[386613, 8412, 2004, 34, 37, "Input", "ExpressionUUID" -> \
"fc123ce3-0fa6-45b5-bbf3-b090add2a88f"],
Cell[388620, 8448, 331, 8, 30, "Output", "ExpressionUUID" -> \
"539f9308-cec8-4870-80af-f2a137b0d922"]
}, Open  ]],
Cell[388966, 8459, 203, 3, 30, "Text", "ExpressionUUID" -> \
"8b098910-9da0-4f0a-8535-65419396ec49"],
Cell[CellGroupData[{
Cell[389194, 8466, 1188, 37, 88, "Input", "ExpressionUUID" -> \
"39638d31-b85f-4199-99ab-af1adc46df0f"],
Cell[390385, 8505, 4754, 105, 143, "Output", "ExpressionUUID" -> \
"0d879763-6a71-4093-8b87-bc4e0e23bb06"]
}, Open  ]],
Cell[CellGroupData[{
Cell[395176, 8615, 3041, 83, 107, "Input", "ExpressionUUID" -> \
"c090e2b1-2042-4c53-b030-20bb457a11c0"],
Cell[398220, 8700, 1036782, 16954, 176, "Output", "ExpressionUUID" -> \
"55d94636-5aad-4941-9b80-6e30d4db88fe"]
}, Open  ]],
Cell[1435017, 25657, 221, 4, 30, "Text", "ExpressionUUID" -> \
"67208e4d-3001-492f-857f-857b2b85ad5f"],
Cell[CellGroupData[{
Cell[1435263, 25665, 1455, 43, 126, "Input", "ExpressionUUID" -> \
"3f0b7ce6-1ae7-408e-9aa8-b700561a2829"],
Cell[1436721, 25710, 23286, 456, 157, "Output", "ExpressionUUID" -> \
"7e1c7490-869c-4973-9914-1a5932aa0ae5"]
}, Open  ]],
Cell[1460022, 26169, 322, 9, 30, "Input", "ExpressionUUID" -> \
"c19963c9-535d-4c4f-bd5a-84c31c144c79"],
Cell[CellGroupData[{
Cell[1460369, 26182, 635, 14, 30, "Input", "ExpressionUUID" -> \
"c9b01574-bd83-47b3-b11b-c68a1cfd0256"],
Cell[1461007, 26198, 7169, 210, 161, "Output", "ExpressionUUID" -> \
"686333dc-699e-498a-84cd-617eabed937f"]
}, Open  ]],
Cell[1468191, 26411, 310, 8, 30, "Input", "ExpressionUUID" -> \
"777427ef-cd33-428e-a6be-2edfee623be9"],
Cell[CellGroupData[{
Cell[1468526, 26423, 615, 18, 30, "Input", "ExpressionUUID" -> \
"a1ab7c3d-c00a-448a-b09b-a7d70ea7ae8f"],
Cell[1469144, 26443, 8598, 196, 138, "Output", "ExpressionUUID" -> \
"eb2a59f8-4a5d-4ab5-b318-3dc1bcaf7a12"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1477779, 26644, 208, 4, 30, "Input", "ExpressionUUID" -> \
"b9c42499-b9b6-4763-8505-c2c5408bc152"],
Cell[1477990, 26650, 147, 3, 30, "Output", "ExpressionUUID" -> \
"7b983eaf-db41-42f0-b29b-48afa6658970"]
}, Open  ]],
Cell[1478152, 26656, 288, 7, 30, "Input", "ExpressionUUID" -> \
"2babe34d-44cd-4966-af9f-cb94724cfb9c"],
Cell[CellGroupData[{
Cell[1478465, 26667, 542, 15, 30, "Input", "ExpressionUUID" -> \
"486ecea3-8be2-45fc-a4c2-481520acb3e6"],
Cell[1479010, 26684, 8455, 194, 138, "Output", "ExpressionUUID" -> \
"6a3f2cdf-0ba7-4a49-ab8c-59f1fb3ffd5d"]
}, Open  ]],
Cell[1487480, 26881, 377, 9, 30, "Input", "ExpressionUUID" -> \
"33b2ce25-5806-4916-ad15-2567d6600243"],
Cell[CellGroupData[{
Cell[1487882, 26894, 654, 18, 30, "Input", "ExpressionUUID" -> \
"c2955f72-02c8-4edc-a040-c4b52f36acdb"],
Cell[1488539, 26914, 28323, 524, 235, "Output", "ExpressionUUID" -> \
"72670bba-cfea-4afe-9d10-1dd03a033168"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1516899, 27443, 350, 7, 30, "Input", "ExpressionUUID" -> \
"d17cd26d-05ff-44ab-a615-dc6c58ef3700"],
Cell[1517252, 27452, 290, 7, 30, "Output", "ExpressionUUID" -> \
"dd69246c-35db-466e-b764-3a998b2591c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1517579, 27464, 206, 4, 30, "Input", "ExpressionUUID" -> \
"d8f6d82b-4fe2-45c0-9559-d2912407f7d5"],
Cell[1517788, 27470, 2550, 61, 161, "Output", "ExpressionUUID" -> \
"fc8007af-9547-4b48-93bf-001a435e6d92"]
}, Open  ]],
Cell[1520353, 27534, 412, 12, 30, "Input", "ExpressionUUID" -> \
"a834ea36-51df-4535-81bb-cd5eac2954d6"],
Cell[CellGroupData[{
Cell[1520790, 27550, 191, 4, 30, "Input", "ExpressionUUID" -> \
"65d12ce6-1bb2-46ac-88b5-e47c3d14b8bd"],
Cell[1520984, 27556, 1971, 49, 161, "Output", "ExpressionUUID" -> \
"d63d7876-82d1-4632-85a9-5303aef25014"]
}, Open  ]],
Cell[1522970, 27608, 543, 16, 30, "Input", "ExpressionUUID" -> \
"0a9cc51f-be1d-4b63-9cf3-a80cf665aed7"],
Cell[CellGroupData[{
Cell[1523538, 27628, 705, 19, 30, "Input", "ExpressionUUID" -> \
"3d98a3d5-c24f-4977-ab5d-660a6f060135"],
Cell[1524246, 27649, 77940, 1572, 247, "Output", "ExpressionUUID" -> \
"6bf50cef-d840-4a96-afa8-c048165f4366"]
}, Open  ]],
Cell[1602201, 29224, 339, 10, 30, "Input", "ExpressionUUID" -> \
"a3650776-3f84-46c2-b88e-539345f175e3"],
Cell[CellGroupData[{
Cell[1602565, 29238, 704, 19, 30, "Input", "ExpressionUUID" -> \
"d087a13d-8e21-4bcc-b543-bfc577856194"],
Cell[1603272, 29259, 17957, 384, 247, "Output", "ExpressionUUID" -> \
"380491b5-fb49-468f-808d-9f6e4710b2eb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1621266, 29648, 1071, 27, 50, "Input", "ExpressionUUID" -> \
"4d491a3d-caaa-412a-8d3d-bffccbc60101"],
Cell[1622340, 29677, 412, 9, 23, "Message", "ExpressionUUID" -> \
"d489a94a-2749-490c-8aaf-d382ccafe4e2"],
Cell[1622755, 29688, 412, 9, 23, "Message", "ExpressionUUID" -> \
"31108edf-7d02-43d7-a2cb-4480c6073a87"],
Cell[1623170, 29699, 412, 9, 23, "Message", "ExpressionUUID" -> \
"681f8c86-3f4e-4ed7-a325-f79999364f6f"],
Cell[1623585, 29710, 423, 9, 21, "Message", "ExpressionUUID" -> \
"48f1f296-6399-4428-be78-c45ccc8fa9df"],
Cell[1624011, 29721, 65876, 1371, 72, "Output", "ExpressionUUID" -> \
"10180b58-f6ef-4f19-a281-e150ced2a7ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1689924, 31097, 338, 10, 30, "Input", "ExpressionUUID" -> \
"252ad8f6-584c-451f-85d7-099af7f35d56"],
Cell[1690265, 31109, 436, 13, 30, "Output", "ExpressionUUID" -> \
"8f09d34f-4de1-449d-bd6b-2e1625f3b42b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1690738, 31127, 1048, 30, 50, "Input", "ExpressionUUID" -> \
"e8ce3475-f3cd-47b0-b7dd-3904b10c7764"],
Cell[1691789, 31159, 391, 9, 23, "Message", "ExpressionUUID" -> \
"ad56b1f6-a9d9-4416-9d54-4716bf25657a"],
Cell[1692183, 31170, 391, 9, 23, "Message", "ExpressionUUID" -> \
"b45e5a16-2bcb-4c45-9714-c891a4e8eb12"],
Cell[1692577, 31181, 389, 9, 23, "Message", "ExpressionUUID" -> \
"bea3cd6c-2539-42bf-93c8-6de9b4953646"],
Cell[1692969, 31192, 400, 9, 21, "Message", "ExpressionUUID" -> \
"8440237c-3162-4a0f-a8ad-d5b27167a329"],
Cell[1693372, 31203, 309, 8, 21, "Message", "ExpressionUUID" -> \
"42cdfc30-6055-497e-8eba-c8dddd73f4fb"],
Cell[1693684, 31213, 8105, 168, 72, "Output", "ExpressionUUID" -> \
"7bb38a1c-c197-45bd-9a6a-38d5dd2eedf5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1701826, 31386, 257, 6, 30, "Input", "ExpressionUUID" -> \
"e3dc0a57-a065-47c6-9355-057214bc416a"],
Cell[1702086, 31394, 149, 3, 30, "Output", "ExpressionUUID" -> \
"947da92c-79ec-41ef-b9a5-204cf47c9cac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1702272, 31402, 373, 10, 30, "Input", "ExpressionUUID" -> \
"cb8ed7cf-5f48-4cb0-8fe5-a8c3af094468"],
Cell[1702648, 31414, 3171, 71, 162, "Output", "ExpressionUUID" -> \
"b91a3f75-a244-4502-a433-c7647f39802f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1705856, 31490, 247, 5, 30, "Input", "ExpressionUUID" -> \
"b16279bd-6e6d-4754-9179-266708facdd0"],
Cell[1706106, 31497, 640, 11, 50, "Output", "ExpressionUUID" -> \
"1079781b-ce7a-4adc-86d9-12c46005d4af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1706783, 31513, 255, 5, 30, "Input", "ExpressionUUID" -> \
"36947c99-6c3f-4d42-a7f6-216437c03519"],
Cell[1707041, 31520, 398, 8, 21, "Message", "ExpressionUUID" -> \
"3f174704-0c62-4b74-bb25-ccc7aa7f2c11"],
Cell[1707442, 31530, 8533, 173, 72, "Output", "ExpressionUUID" -> \
"3d033010-034c-4176-94e9-5915353d1b79"]
}, Open  ]],
Cell[1715990, 31706, 358, 10, 68, "Text", "ExpressionUUID" -> \
"574d3563-2f01-44c5-a2d0-bc3ec72b016b"],
Cell[1716351, 31718, 629, 12, 69, "Input", "ExpressionUUID" -> \
"0cef267e-68b5-4eb3-bc12-84084454b3db"],
Cell[1716983, 31732, 215, 4, 30, "Text", "ExpressionUUID" -> \
"6c519456-0291-47c6-865b-32e8cd34dd05"],
Cell[1717201, 31738, 1269, 36, 107, "Input", "ExpressionUUID" -> \
"7ce2a64c-88d3-4adc-b083-7a0dd54a399d"],
Cell[CellGroupData[{
Cell[1718495, 31778, 318, 6, 50, "Input", "ExpressionUUID" -> \
"61fd29f8-9bdd-47af-86db-99b11c74f748"],
Cell[1718816, 31786, 178, 5, 30, "Output", "ExpressionUUID" -> \
"b5e3c22f-ddb5-4c42-b005-a80cfd04824a"],
Cell[1718997, 31793, 3668, 110, 132, "Output", "ExpressionUUID" -> \
"b3ac9db3-9831-4ff2-bb23-4329a397774d"]
}, Open  ]],
Cell[1722680, 31906, 209, 4, 30, "Text", "ExpressionUUID" -> \
"8e7fdb8f-5c4a-4fcd-bc28-60a98add8ab9"],
Cell[CellGroupData[{
Cell[1722914, 31914, 292, 6, 69, "Input", "ExpressionUUID" -> \
"dbac035f-2296-4646-bbd6-c63a82c27240"],
Cell[1723209, 31922, 703, 16, 30, "Output", "ExpressionUUID" -> \
"bcb51907-7498-4440-8fab-f24bd8be46f3"]
}, Open  ]],
Cell[1723927, 31941, 263, 5, 30, "Text", "ExpressionUUID" -> \
"5ed18579-49d4-4597-91e1-cbb949f8e0cf"],
Cell[CellGroupData[{
Cell[1724215, 31950, 432, 11, 30, "Input", "ExpressionUUID" -> \
"719cf607-2918-4c99-a405-b76afe3e4527"],
Cell[1724650, 31963, 15076, 347, 375, "Output", "ExpressionUUID" -> \
"9920a50a-fae9-45a5-bbbb-06b1943b292f"]
}, Open  ]],
Cell[1739741, 32313, 396, 10, 68, "Text", "ExpressionUUID" -> \
"b7afba56-577d-438f-8c83-21cfdba1cf75"],
Cell[1740140, 32325, 179, 4, 30, "Input", "ExpressionUUID" -> \
"c67b6f3f-f0a4-45e5-8424-4b6a5182fb76"],
Cell[CellGroupData[{
Cell[1740344, 32333, 5588, 134, 373, "Input", "ExpressionUUID" -> \
"9ce76ece-b775-4477-8ba9-ddea0c9846c0"],
Cell[1745935, 32469, 4605, 95, 181, "Output", "ExpressionUUID" -> \
"f5de0c40-22e0-4a27-9dcc-c15db300f751"]
}, Open  ]]
}
]
*)

